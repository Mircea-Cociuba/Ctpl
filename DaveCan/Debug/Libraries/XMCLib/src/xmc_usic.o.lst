   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "xmc_usic.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.XMC_USIC_CH_SetInputTriggerCombinationMode,"ax",%progbits
  20              	 .align 2
  21              	 .thumb
  22              	 .thumb_func
  24              	XMC_USIC_CH_SetInputTriggerCombinationMode:
  25              	.LFB150:
  26              	 .file 1 "D:/practica/proiect/DaveCan/Libraries/XMCLib/inc/xmc_usic.h"
   1:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** /**
   2:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * @file xmc_usic.h
   3:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * @date 2019-05-07
   4:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  *
   5:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * @cond
   6:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  **************************************************************************************************
   7:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * XMClib v2.1.22 - XMC Peripheral Driver Library 
   8:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  *
   9:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * Copyright (c) 2015-2019, Infineon Technologies AG
  10:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * All rights reserved.                        
  11:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  *                                             
  12:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * following conditions are met:   
  14:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  *                                                                              
  15:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * disclaimer.                        
  17:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * 
  18:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * 
  21:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * products derived from this software without specific prior written permission.                  
  23:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  *                                                                              
  24:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  *                                                                              
  32:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  **************************************************************************************************
  35:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  *
  36:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * Change History
  37:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * --------------
  38:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  *
  39:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-02-20:
  40:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Initial draft<br>
  41:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Documentation improved <br>
  42:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  *
  43:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-05-08:
  44:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_SetInputTriggerCombinationMode() and XMC_USIC_CH_SetTransmitBufferStatus
  45:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  *      
  46:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-06-20:
  47:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Removed version macros and declaration of GetDriverVersion API
  48:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * 
  49:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-08-17:
  50:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Bug fixed in XMC_USIC_CH_SetTransmitBufferStatus API. OR operator removed.
  51:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  *
  52:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-08-24:
  53:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added APIs for enabling/disabling delay compensation XMC_USIC_CH_DisableDelayCompensation(
  54:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  *       XMC_USIC_CH_DisableDelayCompensation()
  55:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  *
  56:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-08-25:
  57:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added APIs for defining if the data shift unit input is derived
  58:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  *       from the input data path DXn or from the selected protocol pre-processors: XMC_USIC_CH_Con
  59:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  *       and XMC_USIC_CH_ConnectInputDataShiftToDataInput()
  60:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  *
  61:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-08-27:
  62:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Fixed bug in XMC_USIC_CH_BRG_CLOCK_SOURCE_DX1T value.
  63:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added APIs for direct TBUF access: XMC_USIC_CH_WriteToTBUF() and XMC_USIC_CH_WriteToTBUFTC
  64:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added APIs for external input for BRG configuration:XMC_USIC_CH_ConfigExternalInputSignalT
  65:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  *
  66:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-08-28:
  67:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added API for enabling the transfer trigger unit to set bit TCSR.TE if the trigger signal 
  68:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  *       Clear to Send (CTS) signal: XMC_USIC_CH_EnableTBUFDataValidTrigger() and XMC_USIC_CH_Disab
  69:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  *
  70:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * 2016-03-09:
  71:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Optimization of write only registers
  72:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  *
  73:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * 2016-04-10:
  74:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added an API to put the data into FIFO when hardware port control is enabled: XMC_USIC_CH_
  75:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  *
  76:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * 2017-02-10:
  77:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_SetShiftDirection() to allow selection of shift direction of the data wo
  78:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_GetCaptureTimerValue() and XMC_USIC_CH_SetFractionalDivider()
  79:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  *
  80:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * 2017-09-08:
  81:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Fixed value of macro XMC_USIC_CH_SHIFT_DIRECTION_MSB_FIRST used in XMC_USIC_CH_SetShiftDir
  82:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  *
  83:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * 2018-09-29:
  84:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_SetBaudrateEx which uses the integer divider instead of the fractional d
  85:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * 
  86:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * 2019-05-07:
  87:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_GetBaudrate(), XMC_USIC_CH_GetSCLKFrequency() and XMC_USIC_CH_GetMCLKFre
  88:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  *
  89:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * @endcond
  90:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  *
  91:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  */
  92:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** 
  93:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** #ifndef XMC_USIC_H
  94:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC_H
  95:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** /*******************************************************************************
  96:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * HEADER FILES
  97:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  *******************************************************************************/
  98:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** 
  99:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** #include "xmc_common.h"
 100:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** 
 101:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** /**
 102:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * @addtogroup XMClib XMC Peripheral Library
 103:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * @{
 104:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  */
 105:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** 
 106:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** /**
 107:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * @addtogroup USIC
 108:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * @brief Universal Serial Interface Channel(USIC) driver for serial communication.
 109:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  *
 110:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * The Universal Serial Interface Channel(USIC) module is a flexible interface module
 111:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * covering several serial communication protocols. A USIC module contains two
 112:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * independent communication channels named USICx_CH0 and USICx_CH1, with x
 113:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * being the number of the USIC module. The user can program, during run-time, which protocol will 
 114:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * by each communication channel and which pins are used.
 115:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * The driver provides APIs, configuration structures and enumerations to configure common features
 116:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * communication protocols.
 117:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * 
 118:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC driver features:
 119:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Allows configuration of FIFO for transmit and receive functions.
 120:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Provides a structure type XMC_USIC_CH_t to represent the USIC channel registers in a programm
 121:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  friendly format.
 122:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Allows configuration of automatic update for frame length, word length, slave select or slave
 123:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Allows transmission of data to FIFO using XMC_USIC_CH_TXFIFO_PutData() and XMC_USIC_CH_TXFIFO
 124:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Allows reading of received data in FIFO using XMC_USIC_CH_RXFIFO_GetData()
 125:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Allows configuration of baudrate using XMC_USIC_CH_SetBaudrate()
 126:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Provides API to trigger interrupts using XMC_USIC_CH_TriggerServiceRequest()
 127:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * @{
 128:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  */
 129:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** 
 130:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** /*******************************************************************************
 131:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * MACROS
 132:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  *******************************************************************************/
 133:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** 
 134:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC0 ((XMC_USIC_t *)USIC0_BASE)			/**< USIC0 module base address */
 135:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC0_CH0 ((XMC_USIC_CH_t *)USIC0_CH0_BASE)	/**< USIC0 channel 0 base address */
 136:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC0_CH1 ((XMC_USIC_CH_t *)USIC0_CH1_BASE)	/**< USIC0 channel 1 base address */
 137:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** 
 138:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(USIC1)
 139:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC1 ((XMC_USIC_t *)USIC1_BASE)			/**< USIC1 module base address */
 140:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC1_CH0 ((XMC_USIC_CH_t *)USIC1_CH0_BASE)	/**< USIC1 channel 0 base address */
 141:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC1_CH1 ((XMC_USIC_CH_t *)USIC1_CH1_BASE)	/**< USIC1 channel 1 base address */
 142:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 143:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** 
 144:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(USIC2)
 145:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC2 ((XMC_USIC_t *)USIC2_BASE)			/**< USIC2 module base address */
 146:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC2_CH0 ((XMC_USIC_CH_t *)USIC2_CH0_BASE)	/**< USIC2 channel 0 base address */
 147:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC2_CH1 ((XMC_USIC_CH_t *)USIC2_CH1_BASE)	/**< USIC2 channel 1 base address */
 148:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 149:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** 
 150:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_DSEL_Msk  USIC_CH_DX0CR_DSEL_Msk   /**< Common mask for DSEL bitfield mask in 
 151:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_DSEL_Pos  USIC_CH_DX0CR_DSEL_Pos   /**< Common mask for DSEL bitfield position
 152:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_SFSEL_Pos USIC_CH_DX0CR_SFSEL_Pos  /**< Common mask for SFSEL bitfield positio
 153:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_SFSEL_Msk USIC_CH_DX0CR_SFSEL_Msk  /**< Common mask for SFSEL bitfield mask in
 154:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_DPOL_Msk  USIC_CH_DX0CR_DPOL_Msk   /**< Common mask for DPOL bitfield mask in 
 155:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_DFEN_Msk  USIC_CH_DX0CR_DFEN_Msk   /**< Common mask for DFEN bitfield mask in 
 156:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_DSEN_Msk  USIC_CH_DX0CR_DSEN_Msk   /**< Common mask for DSEN bitfield mask in 
 157:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_CM_Pos    USIC_CH_DX0CR_CM_Pos     /**< Common mask for CM bitfield position i
 158:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_CM_Msk    USIC_CH_DX0CR_CM_Msk     /**< Common mask for CM bitfield mask in DX
 159:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_INSW_Msk  USIC_CH_DX0CR_INSW_Msk   /**< Common mask for INSW bitfield mask in 
 160:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_INSW_pos  USIC_CH_DX0CR_INSW_Pos   /**< Common mask for INSW bitfield position
 161:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** 
 162:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** #if UC_FAMILY == XMC1
 163:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  #include "xmc1_usic_map.h"
 164:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 165:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** 
 166:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** #if UC_FAMILY == XMC4
 167:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  #include "xmc4_usic_map.h"
 168:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 169:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** 
 170:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** /*******************************************************************************
 171:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * ENUMS
 172:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  *******************************************************************************/
 173:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** 
 174:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** /**
 175:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel driver status
 176:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  */
 177:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_STATUS
 178:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** {
 179:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_STATUS_OK,    /**< USIC driver status : OK */
 180:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_STATUS_ERROR, /**< USIC driver status : ERROR */
 181:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_STATUS_BUSY   /**< USIC driver status : BUSY */
 182:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_STATUS_t;
 183:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** 
 184:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** /**
 185:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel kernel mode
 186:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** */
 187:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_KERNEL_MODE
 188:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** {
 189:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_KERNEL_MODE_RUN_0  = 0x0UL,  /**< Run mode 0 (transmission and reception possible)*/
 190:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_KERNEL_MODE_RUN_1  = 0x1UL << USIC_CH_KSCFG_NOMCFG_Pos,  /**< Run mode 1 (transmissio
 191:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_KERNEL_MODE_STOP_0 = 0x2UL << USIC_CH_KSCFG_NOMCFG_Pos,  /**< Stop mode 0 (no transmi
 192:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_KERNEL_MODE_STOP_1 = 0x3UL << USIC_CH_KSCFG_NOMCFG_Pos   /**< Stop mode 1 (both trans
 193:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_KERNEL_MODE_t;
 194:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** 
 195:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** /**
 196:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel operating mode
 197:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  */
 198:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_OPERATING_MODE
 199:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** {
 200:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_OPERATING_MODE_IDLE = 0x0UL, /**< USIC channel idle */
 201:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_OPERATING_MODE_SPI  = 0x1UL << USIC_CH_CCR_MODE_Pos, /**< SPI mode */
 202:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_OPERATING_MODE_UART = 0x2UL << USIC_CH_CCR_MODE_Pos, /**< UART mode */
 203:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_OPERATING_MODE_I2S  = 0x3UL << USIC_CH_CCR_MODE_Pos, /**< I2S mode */
 204:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_OPERATING_MODE_I2C  = 0x4UL << USIC_CH_CCR_MODE_Pos  /**< I2C mode */
 205:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_OPERATING_MODE_t;
 206:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** 
 207:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** /**
 208:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel inputs
 209:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  */
 210:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_INPUT
 211:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** {
 212:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX0, /**< DX0 input */
 213:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX1, /**< DX1 input */
 214:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX2, /**< DX2 input */
 215:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX3, /**< DX3 input */
 216:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX4, /**< DX4 input */
 217:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX5  /**< DX5 input */
 218:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_INPUT_t;
 219:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** 
 220:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** /**
 221:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel input source sampling frequency
 222:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  */
 223:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_INPUT_SAMPLING_FREQ
 224:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** {
 225:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_SAMPLING_FREQ_FPERIPH            = 0x0UL, /**< Use fperiph frequency for input 
 226:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_SAMPLING_FREQ_FRACTIONAL_DIVIDER = 0x1UL << USIC_CH_DXCR_SFSEL_Pos  /**< Use fF
 227:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_INPUT_SAMPLING_FREQ_t;
 228:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** 
 229:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** /**
 230:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel input combination mode
 231:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  */
 232:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_INPUT_COMBINATION_MODE
 233:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** {
 234:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_COMBINATION_MODE_TRIGGER_DISABLED = 0x0UL, /**< The trigger activation is disab
 235:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_COMBINATION_MODE_RISING_EDGE      = 0x1UL, /**< A rising edge activates DXnT*/
 236:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_COMBINATION_MODE_FALLING_EDGE     = 0x2UL, /**< A falling edge activates DXnT*/
 237:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_COMBINATION_MODE_BOTH_EDGES       = 0x3UL, /**< Both edges activate DXnT*/
 238:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_INPUT_COMBINATION_MODE_t;
 239:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** 
 240:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** /**
 241:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel data transmission start modes.
 242:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * Data shifted out of the transmit pin depends on the value configured for the
 243:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * TDEN bitfield of the TCSR register. Following enum values are used for configuring
 244:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * the TCSR->TDEN bitfield.
 245:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  */
 246:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_START_TRANSMISION_MODE
 247:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** {
 248:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_START_TRANSMISION_DISABLED      = 0x0U, /**< Passive data level is sent out on transm
 249:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_START_TRANSMISION_ON_TDV        = 0x1UL << USIC_CH_TCSR_TDEN_Pos, /**< Transmission o
 250:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_START_TRANSMISION_ON_TDV_DX2S_0 = 0x2UL << USIC_CH_TCSR_TDEN_Pos, /**< Transmission o
 251:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_START_TRANSMISION_ON_TDV_DX2S_1 = 0x3UL << USIC_CH_TCSR_TDEN_Pos  /**< Transmission o
 252:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_START_TRANSMISION_MODE_t;
 253:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** 
 254:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** /**
 255:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel interrupt node pointers
 256:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  */
 257:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_INTERRUPT_NODE_POINTER
 258:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** {
 259:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INTERRUPT_NODE_POINTER_TRANSMIT_SHIFT      = USIC_CH_INPR_TSINP_Pos, /**< Node pointe
 260:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INTERRUPT_NODE_POINTER_TRANSMIT_BUFFER     = USIC_CH_INPR_TBINP_Pos, /**< Node pointe
 261:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INTERRUPT_NODE_POINTER_RECEIVE             = USIC_CH_INPR_RINP_Pos,  /**< Node pointe
 262:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INTERRUPT_NODE_POINTER_ALTERNATE_RECEIVE   = USIC_CH_INPR_AINP_Pos,  /**< Node pointe
 263:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INTERRUPT_NODE_POINTER_PROTOCOL            = USIC_CH_INPR_PINP_Pos   /**< Node pointe
 264:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_INTERRUPT_NODE_POINTER_t;
 265:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** 
 266:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** /**
 267:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel events
 268:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  */
 269:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_EVENT
 270:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** {
 271:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_RECEIVE_START       = USIC_CH_CCR_RSIEN_Msk, /**< Receive start event */
 272:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_DATA_LOST           = USIC_CH_CCR_DLIEN_Msk, /**< Data lost event */
 273:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_TRANSMIT_SHIFT      = USIC_CH_CCR_TSIEN_Msk, /**< Transmit shift event */
 274:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_TRANSMIT_BUFFER     = USIC_CH_CCR_TBIEN_Msk, /**< Transmit buffer event */
 275:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_STANDARD_RECEIVE    = USIC_CH_CCR_RIEN_Msk,  /**< Receive event */
 276:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_ALTERNATIVE_RECEIVE = USIC_CH_CCR_AIEN_Msk,  /**< Alternate receive event */
 277:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_BAUD_RATE_GENERATOR = USIC_CH_CCR_BRGIEN_Msk /**< Baudrate generator event */
 278:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_EVENT_t;
 279:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** 
 280:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** /**
 281:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel parity mode
 282:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** */
 283:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_PARITY_MODE
 284:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** {
 285:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_PARITY_MODE_NONE     = 0x0UL,  /**< Disable parity mode */
 286:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_PARITY_MODE_EVEN     = 0x2UL << USIC_CH_CCR_PM_Pos,  /**< Enable even parity mode */
 287:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_PARITY_MODE_ODD      = 0x3UL << USIC_CH_CCR_PM_Pos   /**< Enable odd parity mode */
 288:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_PARITY_MODE_t;
 289:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** 
 290:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** /**
 291:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel data output mode
 292:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** */
 293:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_DATA_OUTPUT_MODE
 294:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** {
 295:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_DATA_OUTPUT_MODE_NORMAL   = 0x0UL,  /**< Data output normal mode */
 296:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_DATA_OUTPUT_MODE_INVERTED = 0x1UL << USIC_CH_SCTR_DOCFG_Pos   /**< Data output invert
 297:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_DATA_OUTPUT_MODE_t;
 298:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** 
 299:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** /**
 300:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel data transmit buffer status
 301:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** */
 302:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_TBUF_STATUS
 303:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** {
 304:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TBUF_STATUS_IDLE = 0x0UL,                 /**< Transfer buffer is currently idle*/
 305:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TBUF_STATUS_BUSY = USIC_CH_TCSR_TDV_Msk   /**< Transfer buffer is currently busy*/
 306:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_TBUF_STATUS_t;
 307:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** 
 308:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** 
 309:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** 
 310:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** /**
 311:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel data transmit buffer status modification
 312:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** */
 313:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_TBUF_STATUS_SET
 314:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** {
 315:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TBUF_STATUS_SET_BUSY   = 0x1UL, /**< Set Transfer buffer status to busy*/
 316:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TBUF_STATUS_SET_IDLE   = 0x2UL  /**< Set Transfer buffer status to idle*/
 317:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_TBUF_STATUS_SET_t;
 318:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** 
 319:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** /**
 320:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel receive buffer status
 321:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** */
 322:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_RBUF_STATUS
 323:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** {
 324:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RBUF_STATUS_DATA_VALID0 = USIC_CH_RBUFSR_RDV0_Msk, /**< RBUF0 data has not yet been r
 325:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RBUF_STATUS_DATA_VALID1 = USIC_CH_RBUFSR_RDV1_Msk  /**< RBUF1 data has not yet been r
 326:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_RBUF_STATUS_t;
 327:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** 
 328:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** /**
 329:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel output signal passive data level
 330:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** */
 331:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USCI_CH_PASSIVE_DATA_LEVEL
 332:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** {
 333:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_PASSIVE_DATA_LEVEL0 = 0x0UL, /**< Passive level(idle mode signal level) 0 */
 334:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_PASSIVE_DATA_LEVEL1 = 0x1UL << USIC_CH_SCTR_PDL_Pos  /**< Passive level(idle mode sig
 335:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_PASSIVE_DATA_LEVEL_t;
 336:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** 
 337:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** /**
 338:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel receive FIFO size
 339:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** */
 340:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_FIFO_SIZE
 341:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** {
 342:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_DISABLED     = 0x0U,  /**< FIFO Disabled */
 343:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_2WORDS  = 0x1U,  /**< FIFO size: 2 words */
 344:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_4WORDS  = 0x2U,  /**< FIFO size: 4 words */
 345:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_8WORDS  = 0x3U,  /**< FIFO size: 8 words */
 346:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_16WORDS = 0x4U,  /**< FIFO size: 16 words */
 347:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_32WORDS = 0x5U,  /**< FIFO size: 32 words */
 348:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_64WORDS = 0x6U   /**< FIFO size: 64 words */
 349:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_FIFO_SIZE_t;
 350:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** 
 351:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** /**
 352:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel transmit FIFO interrupt node pointers
 353:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** */
 354:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER
 355:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** {
 356:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER_STANDARD  = USIC_CH_TBCTR_STBINP_Pos,  /**< Node pointe
 357:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER_ALTERNATE = USIC_CH_TBCTR_ATBINP_Pos   /**< Node pointe
 358:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER_t;
 359:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** 
 360:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** /**
 361:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel transmit FIFO event configuration
 362:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** */
 363:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_TXFIFO_EVENT_CONF
 364:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** {
 365:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_EVENT_CONF_STANDARD  = USIC_CH_TBCTR_STBIEN_Msk,   /**< Enable FIFO standard t
 366:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_EVENT_CONF_ERROR     = (int32_t)USIC_CH_TBCTR_TBERIEN_Msk  /**< Enable transmi
 367:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_TXFIFO_EVENT_CONF_t;
 368:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** 
 369:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** /**
 370:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel transmit FIFO status
 371:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** */
 372:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_TXFIFO_EVENT
 373:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** {
 374:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_EVENT_STANDARD = USIC_CH_TRBSR_STBI_Msk,    /**< Transmit FIFO status: Standar
 375:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_EVENT_ERROR    = USIC_CH_TRBSR_TBERI_Msk    /**< Transmit FIFO status: Error e
 376:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_TXFIFO_EVENT_t;
 377:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** 
 378:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** /**
 379:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel receive FIFO interrupt node pointers
 380:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** */
 381:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER
 382:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** {
 383:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER_STANDARD  = USIC_CH_RBCTR_SRBINP_Pos, /**< Node pointer
 384:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER_ALTERNATE = USIC_CH_RBCTR_ARBINP_Pos  /**< Node pointer
 385:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER_t;
 386:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** 
 387:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** /**
 388:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel receive FIFO event configuration
 389:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** */
 390:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_RXFIFO_EVENT_CONF
 391:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** {
 392:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_CONF_STANDARD  = USIC_CH_RBCTR_SRBIEN_Msk,   /**< Enable FIFO standard r
 393:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_CONF_ERROR     = (int32_t)USIC_CH_RBCTR_RBERIEN_Msk,  /**< Enable receiv
 394:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_CONF_ALTERNATE = USIC_CH_RBCTR_ARBIEN_Msk   /**< Enable FIFO alternative
 395:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_RXFIFO_EVENT_CONF_t;
 396:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** 
 397:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** /**
 398:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel receive FIFO status
 399:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** */
 400:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_RXFIFO_EVENT
 401:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** {
 402:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_STANDARD  = USIC_CH_TRBSR_SRBI_Msk,   /**< Receive FIFO status: Standard
 403:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_ERROR     = USIC_CH_TRBSR_RBERI_Msk,  /**< Receive FIFO status: Error ev
 404:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_ALTERNATE = USIC_CH_TRBSR_ARBI_Msk    /**< Receive FIFO status: Alternat
 405:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_RXFIFO_EVENT_t;
 406:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** 
 407:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** /**
 408:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel baudrate generator clock source
 409:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** */
 410:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_BRG_CLOCK_SOURCE
 411:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** {
 412:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CLOCK_SOURCE_DIVIDER = 0x0UL, /**< Baudrate generator clock source : Source divid
 413:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CLOCK_SOURCE_DX1T    = 0x2UL << USIC_CH_BRG_CLKSEL_Pos  /**< Baudrate generator c
 414:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_BRG_CLOCK_SOURCE_t;
 415:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** 
 416:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** /**
 417:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel baudrate generator divider mode
 418:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** */
 419:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE
 420:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** {
 421:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_DISABLED   = 0x0UL, /**< Baudrate generator clock divider: Dis
 422:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_NORMAL     = 0x1UL << USIC_CH_FDR_DM_Pos, /**< Baudrate genera
 423:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_FRACTIONAL = 0x2UL << USIC_CH_FDR_DM_Pos  /**< Baudrate genera
 424:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_t;
 425:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** 
 426:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** /**
 427:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel baudrate generator master clock passive level
 428:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** */
 429:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_BRG_MASTER_CLOCK_PASSIVE_LEVEL
 430:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** {
 431:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_MASTER_CLOCK_PASSIVE_LEVEL_0 = 0x0UL, /**< Baudrate generator master clock passiv
 432:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_MASTER_CLOCK_PASSIVE_LEVEL_1 = 0x1UL << USIC_CH_BRG_MCLKCFG_Pos  /**< Baudrate ge
 433:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_BRG_MASTER_CLOCK_PASSIVE_LEVEL_t;
 434:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** 
 435:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** /**
 436:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel baudrate generator shift clock passive level
 437:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** */
 438:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL
 439:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** {
 440:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_0_DELAY_DISABLED = 0x0UL, /**< Shift clock passive leve
 441:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_1_DELAY_DISABLED = 0x1UL << USIC_CH_BRG_SCLKCFG_Pos, /*
 442:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_0_DELAY_ENABLED  = (int32_t)(0x2UL << USIC_CH_BRG_SCLKC
 443:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_1_DELAY_ENABLED  = (int32_t)(0x3UL << USIC_CH_BRG_SCLKC
 444:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_t;
 445:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** 
 446:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** /**
 447:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel baudrate generator shift clock output
 448:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** */
 449:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT
 450:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** {
 451:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT_SCLK = 0x0UL, /**< Baudrate generator shift clock output: SCL.
 452:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT_DX1 = 0x1UL << USIC_CH_BRG_SCLKOSEL_Pos   /**< Baudrate genera
 453:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT_t;
 454:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** 
 455:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** /**
 456:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel shift direction.
 457:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** * Defines the shift direction of the data words for transmission and reception
 458:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** */
 459:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_SHIFT_DIRECTION
 460:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** {
 461:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_SHIFT_DIRECTION_LSB_FIRST = 0x0UL, /**< Shift LSB first. The first data bit of a data
 462:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_SHIFT_DIRECTION_MSB_FIRST = 0x1UL << USIC_CH_SCTR_SDIR_Pos /**< Shift MSB first. The 
 463:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_SHIFT_DIRECTION_t;
 464:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** 
 465:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** 
 466:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** /*******************************************************************************
 467:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * DATA STRUCTURES
 468:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  *******************************************************************************/
 469:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** 
 470:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** /*Anonymous structure/union guard start*/
 471:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(__CC_ARM)
 472:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****   #pragma push
 473:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****   #pragma anon_unions
 474:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** #elif defined(__TASKING__)
 475:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****   #pragma warning 586
 476:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 477:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** 
 478:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** /**
 479:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC module structure
 480:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  */
 481:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** typedef USIC_GLOBAL_TypeDef XMC_USIC_t;
 482:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** 
 483:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** /**
 484:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel structure.<br> The members of the structure are same as in the device header file, 
 485:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * except for some registers.
 486:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * DX0CR, DX1CR, DX2CR, DX3CR, DX4CR and DX5CR are replaced with the array DXCR[6].
 487:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * TBUF0 to TBUF31 are replaced with TBUF[32].
 488:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * IN0 to IN31 are replaced with IN[32].
 489:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  */
 490:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** typedef struct XMC_USIC_CH
 491:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** {
 492:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RESERVED0;
 493:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  CCFG;			/**< Channel configuration register*/
 494:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RESERVED1;
 495:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  KSCFG;			/**< Kernel state configuration register*/
 496:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  FDR;			/**< Fractional divider configuration register*/
 497:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  BRG;			/**< Baud rate generator register*/
 498:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  INPR;			/**< Interrupt node pointer register*/
 499:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  DXCR[6];		/**< Input control registers DX0 to DX5.*/
 500:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  SCTR;			/**< Shift control register*/
 501:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  TCSR;
 502:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** 
 503:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****   union {
 504:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PCR_IICMode;	/**< I2C protocol configuration register*/
 505:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PCR_IISMode; /**< I2S protocol configuration register*/
 506:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PCR_SSCMode;	/**< SPI protocol configuration register*/
 507:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PCR;			/**< Protocol configuration register*/
 508:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PCR_ASCMode;	/**< UART protocol configuration register*/
 509:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****   };
 510:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  CCR;			/**< Channel control register*/
 511:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  CMTR;			/**< Capture mode timer register*/
 512:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** 
 513:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****   union {
 514:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PSR_IICMode;	/**< I2C protocol status register*/
 515:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PSR_IISMode;	/**< I2S protocol status register*/
 516:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PSR_SSCMode;	/**< SPI protocol status register*/
 517:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PSR;			/**< Protocol status register*/
 518:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PSR_ASCMode;	/**< UART protocol status register*/
 519:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****   };
 520:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****   __O  uint32_t  PSCR;			/**< Protocol status clear register*/
 521:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUFSR;		/**< Receive buffer status register*/
 522:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUF;			/**< Receive buffer register*/
 523:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUFD;			/**< Debug mode receive buffer register*/
 524:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUF0;			/**< Receive buffer 0*/
 525:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUF1;			/**< Receive buffer 1*/
 526:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUF01SR;		/**< Receive buffer status register*/
 527:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****   __O  uint32_t  FMR;			/**< Flag modification register*/
 528:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RESERVED2[5];
 529:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  TBUF[32];		/**< Tranmsit buffer registers*/
 530:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  BYP;			/**< FIFO bypass register*/
 531:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  BYPCR;			/**< FIFO bypass control register*/
 532:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  TBCTR;			/**< Transmit FIFO control register*/
 533:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  RBCTR;			/**< Receive FIFO control register*/
 534:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  TRBPTR;		/**< Transmit/recive buffer pointer register*/
 535:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  TRBSR;			/**< Transmit/receive buffer status register*/
 536:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****   __O  uint32_t  TRBSCR;		/**< Transmit/receive buffer status clear register*/
 537:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  OUTR;			/**< Receive FIFO output register*/
 538:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  OUTDR;			/**< Receive FIFO debug output register*/
 539:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RESERVED3[23];
 540:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****   __O  uint32_t  IN[32];		/**< Transmit FIFO input register*/
 541:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_t;
 542:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** 
 543:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** 
 544:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** /*Anonymous structure/union guard end*/
 545:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(__CC_ARM)
 546:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****   #pragma pop
 547:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** #elif defined(__TASKING__)
 548:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****   #pragma warning restore
 549:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 550:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** 
 551:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** /*******************************************************************************
 552:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * API PROTOTYPES
 553:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  ******************************************************************************/
 554:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** 
 555:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** #ifdef __cplusplus
 556:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** extern "C" {
 557:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 558:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** 
 559:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE bool XMC_USIC_IsModuleValid(const XMC_USIC_t *const module)
 560:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** {
 561:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****   bool tmp;
 562:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** 
 563:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****   tmp = (module == XMC_USIC0);
 564:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(XMC_USIC1)  
 565:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****   tmp = tmp || (module == XMC_USIC1);
 566:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 567:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(XMC_USIC2)  
 568:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****   tmp = tmp || (module == XMC_USIC2);
 569:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 570:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** 
 571:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****   return tmp;
 572:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** }
 573:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** 
 574:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE bool XMC_USIC_IsChannelValid(const XMC_USIC_CH_t *const channel)
 575:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** {
 576:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****   bool tmp;
 577:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** 
 578:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****   tmp = ((channel == XMC_USIC0_CH0) || (channel == XMC_USIC0_CH1));
 579:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(XMC_USIC1)  
 580:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****   tmp = tmp || ((channel == XMC_USIC1_CH0) || (channel == XMC_USIC1_CH1));
 581:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 582:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(XMC_USIC2)  
 583:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****   tmp = tmp || ((channel == XMC_USIC2_CH0) || (channel == XMC_USIC2_CH1));
 584:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 585:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** 
 586:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****   return tmp;
 587:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** }
 588:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** 
 589:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** /* Common APIs */
 590:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** 
 591:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** /**
 592:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  usic Pointer to USIC module handler of type @ref XMC_USIC_t.\n
 593:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * 				\b Range: @ref XMC_USIC0 to @ref XMC_USIC2 based on device support.
 594:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 595:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * 
 596:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 597:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the USIC module.\n\n
 598:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the clock for the USIC module by following the
 599:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * clock enabling sequence for the selected device.
 600:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  *
 601:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 602:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_Enable(), XMC_USIC_Disable() \n\n\n
 603:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  */
 604:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_Enable(XMC_USIC_t *const usic);
 605:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** /**
 606:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  usic Pointer to USIC module handler of type @ref XMC_USIC_t.\n
 607:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * 				\b Range: @ref XMC_USIC0 to @ref XMC_USIC2 based on device support.
 608:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 609:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  *
 610:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 611:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables the USIC module.\n\n
 612:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables the clock for the USIC module by following the clock
 613:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * disabling sequence for the selected device.
 614:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  *
 615:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 616:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_Disable(), XMC_USIC_Enable() \n\n\n
 617:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  */
 618:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_Disable(XMC_USIC_t *const usic);
 619:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** /**
 620:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 621:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 622:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 623:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  *
 624:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 625:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the USIC channel. \n\n
 626:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel is enabled by setting the module enable bit in KSCFG register bitfield MODEN.
 627:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * On enabling, the channel is set to idle mode.
 628:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  *
 629:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 630:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_Disable(), XMC_USIC_Enable() \n\n\n
 631:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  */
 632:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_Enable(XMC_USIC_CH_t *const channel);
 633:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** /**
 634:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 635:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 636:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 637:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  *
 638:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 639:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables the USIC channel.\n\n
 640:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel is disabled by setting the module enable bit(MDEN) to 0 in the register KSCFG.
 641:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  *
 642:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 643:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_Enable(), XMC_USIC_Disable() \n\n\n
 644:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  */
 645:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_Disable(XMC_USIC_CH_t *const channel);
 646:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** 
 647:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** /**
 648:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 649:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 650:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  rate Desired baudrate. \b Range: minimum value = 100, maximum value depends on the perip
 651:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * 				and \a oversampling. Maximum baudrate can be derived using the formula: (fperiph * 1023)/(10
 652:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  oversampling Required oversampling. The value indicates the number of time quanta for on
 653:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * 						This can be related to the number of samples for each logic state of the data signal. \n
 654:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * 						\b Range: 1 to 32. Value should be chosen based on the protocol used.
 655:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Status indicating the baudrate configuration.\n
 656:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: @ref XMC_USIC_CH_STATUS_OK if baudrate is successfully configured,
 657:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * 					  @ref XMC_USIC_CH_STATUS_ERROR if desired baudrate or oversampling is invalid.
 658:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  *
 659:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 660:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * Configures the baudrate of the USIC channel. \n\n
 661:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * Baudrate is configured by considering the peripheral frequency and the desired baudrate.
 662:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * Optimum values of FDR->STEP and BRG->PDIV are calulated and used for generating the desired
 663:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * baudrate.
 664:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  *
 665:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 666:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetStartTransmisionMode(), XMC_USIC_CH_SetInputSource() \n\n\n
 667:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  */
 668:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** XMC_USIC_CH_STATUS_t XMC_USIC_CH_SetBaudrate(XMC_USIC_CH_t *const channel, uint32_t rate, uint32_t 
 669:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** 
 670:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** /**
 671:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 672:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device
 673:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  rate Desired baudrate. Only integer dividers of peripheral clock are achievable
 674:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  oversampling Required oversampling. The value indicates the number of time quanta for on
 675:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  *            This can be related to the number of samples for each logic state of the data signal.
 676:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  *            \b Range: 1 to 32. Value should be chosen based on the protocol used.
 677:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Status indicating the baudrate configuration.\n
 678:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  *      \b Range: @ref XMC_USIC_CH_STATUS_OK if baudrate is successfully configured,
 679:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  *            @ref XMC_USIC_CH_STATUS_ERROR if desired baudrate or oversampling is invalid.
 680:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  *
 681:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 682:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * Configures the baudrate of the USIC channel using the integer divider which restrics the achieva
 683:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * Baudrate is configured by considering the peripheral frequency and the desired baudrate.
 684:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * Optimum values of FDR->STEP and BRG->PDIV are calulated and used for generating the desired
 685:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * baudrate.
 686:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  *
 687:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 688:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetStartTransmisionMode(), XMC_USIC_CH_SetInputSource() \n\n\n
 689:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  */
 690:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** XMC_USIC_CH_STATUS_t XMC_USIC_CH_SetBaudrateEx(XMC_USIC_CH_t *const channel, uint32_t rate, uint32_
 691:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** 
 692:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** 
 693:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** /**
 694:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 695:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device
 696:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * @return baudrate currently used by USIC channel for .\n
 697:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  *
 698:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 699:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * Calculates the current used baudrate (fCTQIN) of a USIC channel. \n\n
 700:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * @image html ../images/usic_brg.png	 
 701:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * @image latex ../images/usic_brg.png	 
 702:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  *
 703:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 704:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetBaudrateMode(), XMC_USIC_CH_SetBaudrate(), XMC_USIC_CH_SetBaudrateEx() \n\n\n
 705:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  */
 706:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** uint32_t XMC_USIC_CH_GetBaudrate(XMC_USIC_CH_t *const channel);
 707:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** 
 708:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** /**
 709:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 710:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device
 711:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * @return baudrate currently used by USIC channel.\n
 712:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  *
 713:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 714:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * Calculates the current used SCLK frequency of a USIC channel. \n\n
 715:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * @image html ../images/usic_brg.png	 
 716:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * @image latex ../images/usic_brg.png	 
 717:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  *
 718:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 719:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetBaudrateMode(), XMC_USIC_CH_SetBaudrate(), XMC_USIC_CH_SetBaudrateEx() \n\n\n
 720:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  */
 721:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** uint32_t XMC_USIC_CH_GetSCLKFrequency(XMC_USIC_CH_t *const channel);
 722:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** 
 723:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** /**
 724:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 725:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device
 726:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * @return baudrate currently used by USIC channel.\n
 727:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  *
 728:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 729:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * Calculates the current used MCLK frequency of a USIC channel. \n\n
 730:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * @image html ../images/usic_brg.png	 
 731:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * @image latex ../images/usic_brg.png	 
 732:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  *
 733:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 734:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetBaudrateMode(), XMC_USIC_CH_SetBaudrate(), XMC_USIC_CH_SetBaudrateEx() \n\n\n
 735:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  */
 736:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** uint32_t XMC_USIC_CH_GetMCLKFrequency(XMC_USIC_CH_t *const channel);
 737:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** 
 738:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** /**
 739:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 740:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 741:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  pdiv Desired divider for the external frequency input. \b Range: minimum value = 1, maxi
 742:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  oversampling Required oversampling. The value indicates the number of time quanta for on
 743:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * 						This can be related to the number of samples for each logic state of the data signal. \n
 744:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * 						\b Range: 1 to 32. Value should be chosen based on the protocol used.
 745:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  combination_mode Selects which edge of the synchronized(and optionally filtered) signal 
 746:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  *                          output DXnT of the input stage.
 747:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  *
 748:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 749:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  *
 750:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 751:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the external frequency input for the Baudrate Generator and configures the divider, over
 752:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * the combination mode of the USIC channel. \n\n
 753:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  *
 754:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 755:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetBRGInputClockSource(), XMC_USIC_CH_SetInputTriggerCombinationMode() \n\n\n
 756:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  */
 757:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_ConfigExternalInputSignalToBRG(XMC_USIC_CH_t *const channel,
 758:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** 		                                         const uint16_t pdiv,
 759:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** 												 const uint32_t oversampling,
 760:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** 												 const XMC_USIC_CH_INPUT_COMBINATION_MODE_t combination_mode);
 761:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** 
 762:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** /**
 763:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 764:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 765:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 766:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 767:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  source Input source select for the input stage. The table below maps the enum value with
 768:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * <table><tr><td>0</td><td>DXnA</td></tr><tr><td>1</td><td>DXnB</td></tr><tr><td>2</td><td>DXnC</t
 769:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * <tr><td>4</td><td>DXnE</td></tr><tr><td>5</td><td>DXnF</td></tr><tr><td>6</td><td>DXnG</td></tr>
 770:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * </tr></table>
 771:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 772:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  *
 773:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 774:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * Selects the data source for USIC input stage.\n\n
 775:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * Selects the input data signal source among DXnA, DXnB.. DXnG for the input stage. The API can be
 776:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * like DX0CR, DX1CR etc. 
 777:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  *  
 778:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 779:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableInputInversion(), XMC_USIC_CH_EnableInputDigitalFilter(), XMC_USIC_CH_EnableIn
 780:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetInputSamplingFreq()\n\n\n
 781:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  */
 782:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetInputSource(XMC_USIC_CH_t *const channel, const XMC_USIC_CH_INP
 783:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** {
 784:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] = (uint32_t)((channel->DXCR[input] & (uint32_t)(~USIC_CH_DXCR_DSEL_Msk)) |
 785:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****                          ((uint32_t)source << USIC_CH_DXCR_DSEL_Pos));
 786:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** }
 787:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** /**
 788:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 789:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 790:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 791:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 792:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 793:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  *
 794:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 795:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * The input of the data shift unit is controlled by the
 796:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * protocol pre-processor. \n\n
 797:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  *
 798:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 799:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_ConnectInputDataShiftToDataInput()\n\n\n
 800:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  */
 801:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_ConnectInputDataShiftToPPP(XMC_USIC_CH_t *const channel, const XMC
 802:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** {
 803:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] &=(uint32_t)~USIC_CH_DXCR_INSW_Msk;
 804:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** }
 805:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** 
 806:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** /**
 807:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 808:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 809:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 810:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 811:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 812:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  *
 813:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 814:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * The input of the data shift unit is connected to
 815:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * the selected data input line. \n\n
 816:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  *
 817:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * This setting is used
 818:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * if the signals are directly derived from an input
 819:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * pin without treatment by the protocol preprocessor.
 820:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 821:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_ConnectInputDataShiftToPPP()\n\n\n
 822:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  */
 823:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_ConnectInputDataShiftToDataInput(XMC_USIC_CH_t *const channel, con
 824:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** {
 825:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] |= USIC_CH_DXCR_INSW_Msk;
 826:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** }
 827:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** 
 828:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** /**
 829:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 830:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 831:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 832:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 833:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 834:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  *
 835:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 836:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables input inversion for USIC channel input data signal. \n\n
 837:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  *
 838:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * Polarity of the input source can be changed to provide inverted data input.
 839:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 840:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableInputInversion()\n\n\n
 841:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  */
 842:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableInputInversion(XMC_USIC_CH_t *const channel, const XMC_USIC_
 843:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** {
 844:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] |= USIC_CH_DXCR_DPOL_Msk;
 845:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** }
 846:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** 
 847:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** /**
 848:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 849:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 850:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 851:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 852:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 853:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  *
 854:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 855:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables input inversion for USIC channel. \n\n
 856:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  *
 857:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * Resets the input data polarity for the USIC channel input data signal.
 858:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 859:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableInputInversion()\n\n\n
 860:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  */
 861:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableInputInversion(XMC_USIC_CH_t *const channel, const XMC_USIC
 862:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** {
 863:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] &=(uint32_t)~USIC_CH_DXCR_DPOL_Msk;
 864:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** }
 865:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** 
 866:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** /**
 867:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 868:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 869:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 870:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  *
 871:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 872:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables delay compensation. \n\n
 873:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  *
 874:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * Delay compensation can be applied to the receive path.
 875:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 876:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableDelayCompensation()\n\n\n
 877:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  */
 878:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableDelayCompensation(XMC_USIC_CH_t *const channel)
 879:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** {
 880:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[1U] |= USIC_CH_DX1CR_DCEN_Msk;
 881:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** }
 882:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** 
 883:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** /**
 884:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 885:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 886:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 887:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  *
 888:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 889:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables delay compensation.. \n\n
 890:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  *
 891:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 892:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableDelayCompensation()\n\n\n
 893:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  */
 894:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableDelayCompensation(XMC_USIC_CH_t *const channel)
 895:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** {
 896:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[1U] &=(uint32_t)~USIC_CH_DX1CR_DCEN_Msk;
 897:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** }
 898:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** 
 899:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** /**
 900:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 901:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 902:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 903:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 904:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 905:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  *
 906:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 907:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the input digital filter for USIC channel input data signal. \n\n
 908:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * Input data signal from the selected multiplexer will be digitally filtered.
 909:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  *
 910:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 911:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableInputDigitalFilter()\n\n\n
 912:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  */
 913:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableInputDigitalFilter(XMC_USIC_CH_t *const channel, const XMC_U
 914:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** {
 915:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] |= (uint32_t)USIC_CH_DXCR_DFEN_Msk;
 916:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** }
 917:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** /**
 918:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 919:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 920:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 921:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 922:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 923:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  *
 924:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 925:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables the input digital filter for USIC channel input data signal. \n\n
 926:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * Input data signal from the selected multiplexer will not be digitally filtered.
 927:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  *
 928:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 929:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableInputDigitalFilter()\n\n\n
 930:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  */
 931:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableInputDigitalFilter(XMC_USIC_CH_t *const channel, const XMC_
 932:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** {
 933:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] &=(uint32_t)~USIC_CH_DXCR_DFEN_Msk;
 934:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** }
 935:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** /**
 936:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 937:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 938:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 939:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 940:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 941:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  *
 942:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 943:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables input synchronization for the USIC channel input data signal. \n\n
 944:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * Input data signal from the selected multiplexer will be synchronized with fPERIPH.
 945:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * A noisy signal can be synchronized and filtered by enabling the digital filter.
 946:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  *
 947:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 948:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableInputSync(), XMC_USIC_CH_EnableInputDigitalFilter()\n\n\n
 949:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  */
 950:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableInputSync(XMC_USIC_CH_t *const channel, const XMC_USIC_CH_IN
 951:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** {
 952:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] |=(uint32_t)USIC_CH_DXCR_DSEN_Msk;
 953:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** }
 954:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** /**
 955:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 956:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 957:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 958:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 959:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 960:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  *
 961:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 962:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables input synchronization for the USIC channel input data signal. \n\n
 963:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * Input data signal from the selected multiplexer will not be synchronized.
 964:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  *
 965:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 966:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableInputSync(), XMC_USIC_CH_DisableInputDigitalFilter() \n\n\n
 967:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  */
 968:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableInputSync(XMC_USIC_CH_t *const channel, const XMC_USIC_CH_I
 969:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** {
 970:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] &=(uint32_t)~USIC_CH_DXCR_DSEN_Msk;
 971:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** }
 972:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** /**
 973:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 974:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 975:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 976:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 977:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  sampling_freq Sampling frequency value of type \a XMC_USIC_CH_INPUT_SAMPLING_FREQ_t.
 978:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 979:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  *
 980:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 981:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets sampling frequency for USIC channel input data signal. \n\n
 982:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  *
 983:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 984:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetInputSource(), XMC_USIC_CH_EnableInputSync(), XMC_USIC_CH_EnableInputDigitalFilte
 985:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  */
 986:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetInputSamplingFreq(XMC_USIC_CH_t *const channel,
 987:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** 		                                              const XMC_USIC_CH_INPUT_t input,
 988:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** 		                                              const XMC_USIC_CH_INPUT_SAMPLING_FREQ_t sampling_fr
 989:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** {
 990:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] = (uint32_t)(channel->DXCR[input] & (~USIC_CH_DXCR_SFSEL_Msk)) |
 991:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****                          ((uint32_t)sampling_freq);
 992:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** }
 993:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** 
 994:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** /**
 995:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 996:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 997:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 998:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 999:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  combination_mode Combination mode value of type \a XMC_USIC_CH_INPUT_COMBINATION_MODE_t.
1000:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1001:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  *
1002:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1003:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * Selects which edge of the synchronized signal DXnS activates the trigger output DXnT of the inpu
1004:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  *
1005:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1006:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetInputSource(), XMC_USIC_CH_EnableInputSync(), XMC_USIC_CH_EnableInputDigitalFilte
1007:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  */
1008:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetInputTriggerCombinationMode(XMC_USIC_CH_t *const channel,
1009:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** 		                                                        const XMC_USIC_CH_INPUT_t input,
1010:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** 		                                                        const XMC_USIC_CH_INPUT_COMBINATION_MODE_
1011:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** {
  27              	 .loc 1 1011 0
  28              	 .cfi_startproc
  29              	 
  30              	 
  31              	 
  32 0000 80B4     	 push {r7}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 4
  35              	 .cfi_offset 7,-4
  36 0002 83B0     	 sub sp,sp,#12
  37              	.LCFI1:
  38              	 .cfi_def_cfa_offset 16
  39 0004 00AF     	 add r7,sp,#0
  40              	.LCFI2:
  41              	 .cfi_def_cfa_register 7
  42 0006 7860     	 str r0,[r7,#4]
  43 0008 0B46     	 mov r3,r1
  44 000a FB70     	 strb r3,[r7,#3]
  45 000c 1346     	 mov r3,r2
  46 000e BB70     	 strb r3,[r7,#2]
1012:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] = (uint32_t)(channel->DXCR[input] & (~USIC_CH_DXCR_CM_Msk)) |
  47              	 .loc 1 1012 0
  48 0010 F878     	 ldrb r0,[r7,#3]
  49 0012 FB78     	 ldrb r3,[r7,#3]
  50 0014 7A68     	 ldr r2,[r7,#4]
  51 0016 0633     	 adds r3,r3,#6
  52 0018 9B00     	 lsls r3,r3,#2
  53 001a 1344     	 add r3,r3,r2
  54 001c 5B68     	 ldr r3,[r3,#4]
  55 001e 23F44062 	 bic r2,r3,#3072
1013:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****                          ((uint32_t)combination_mode << USIC_CH_DXCR_CM_Pos);
  56              	 .loc 1 1013 0
  57 0022 BB78     	 ldrb r3,[r7,#2]
  58 0024 9B02     	 lsls r3,r3,#10
1012:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] = (uint32_t)(channel->DXCR[input] & (~USIC_CH_DXCR_CM_Msk)) |
  59              	 .loc 1 1012 0
  60 0026 1A43     	 orrs r2,r2,r3
  61 0028 7968     	 ldr r1,[r7,#4]
  62 002a 831D     	 adds r3,r0,#6
  63 002c 9B00     	 lsls r3,r3,#2
  64 002e 0B44     	 add r3,r3,r1
  65 0030 5A60     	 str r2,[r3,#4]
1014:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** }
  66              	 .loc 1 1014 0
  67 0032 0C37     	 adds r7,r7,#12
  68              	.LCFI3:
  69              	 .cfi_def_cfa_offset 4
  70 0034 BD46     	 mov sp,r7
  71              	.LCFI4:
  72              	 .cfi_def_cfa_register 13
  73              	 
  74 0036 5DF8047B 	 ldr r7,[sp],#4
  75              	.LCFI5:
  76              	 .cfi_restore 7
  77              	 .cfi_def_cfa_offset 0
  78 003a 7047     	 bx lr
  79              	 .cfi_endproc
  80              	.LFE150:
  82              	 .section .text.XMC_USIC_CH_SetBRGInputClockSource,"ax",%progbits
  83              	 .align 2
  84              	 .thumb
  85              	 .thumb_func
  87              	XMC_USIC_CH_SetBRGInputClockSource:
  88              	.LFB151:
1015:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** 
1016:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** /**
1017:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1018:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1019:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  clock_source clock source for the BRG.
1020:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1021:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  *
1022:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1023:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the clock source for the BRG. \n\n
1024:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  *
1025:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1026:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetInputTriggerCombinationMode(), XMC_USIC_CH_SetExternalClockBRGDivider()\n\n\n
1027:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****  */
1028:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetBRGInputClockSource(XMC_USIC_CH_t *const channel, const XMC_USI
1029:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** {
  89              	 .loc 1 1029 0
  90              	 .cfi_startproc
  91              	 
  92              	 
  93              	 
  94 0000 80B4     	 push {r7}
  95              	.LCFI6:
  96              	 .cfi_def_cfa_offset 4
  97              	 .cfi_offset 7,-4
  98 0002 83B0     	 sub sp,sp,#12
  99              	.LCFI7:
 100              	 .cfi_def_cfa_offset 16
 101 0004 00AF     	 add r7,sp,#0
 102              	.LCFI8:
 103              	 .cfi_def_cfa_register 7
 104 0006 7860     	 str r0,[r7,#4]
 105 0008 0B46     	 mov r3,r1
 106 000a FB70     	 strb r3,[r7,#3]
1030:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h ****   channel->BRG = (uint32_t)(channel->BRG & (~USIC_CH_BRG_CLKSEL_Msk)) | (uint32_t)(clock_source);
 107              	 .loc 1 1030 0
 108 000c 7B68     	 ldr r3,[r7,#4]
 109 000e 5B69     	 ldr r3,[r3,#20]
 110 0010 23F00302 	 bic r2,r3,#3
 111 0014 FB78     	 ldrb r3,[r7,#3]
 112 0016 1A43     	 orrs r2,r2,r3
 113 0018 7B68     	 ldr r3,[r7,#4]
 114 001a 5A61     	 str r2,[r3,#20]
1031:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_usic.h **** }
 115              	 .loc 1 1031 0
 116 001c 0C37     	 adds r7,r7,#12
 117              	.LCFI9:
 118              	 .cfi_def_cfa_offset 4
 119 001e BD46     	 mov sp,r7
 120              	.LCFI10:
 121              	 .cfi_def_cfa_register 13
 122              	 
 123 0020 5DF8047B 	 ldr r7,[sp],#4
 124              	.LCFI11:
 125              	 .cfi_restore 7
 126              	 .cfi_def_cfa_offset 0
 127 0024 7047     	 bx lr
 128              	 .cfi_endproc
 129              	.LFE151:
 131 0026 00BF     	 .section .text.XMC_USIC_CH_Enable,"ax",%progbits
 132              	 .align 2
 133              	 .global XMC_USIC_CH_Enable
 134              	 .thumb
 135              	 .thumb_func
 137              	XMC_USIC_CH_Enable:
 138              	.LFB235:
 139              	 .file 2 "../Libraries/XMCLib/src/xmc_usic.c"
   1:../Libraries/XMCLib/src/xmc_usic.c **** /**
   2:../Libraries/XMCLib/src/xmc_usic.c ****  * @file xmc_usic.c
   3:../Libraries/XMCLib/src/xmc_usic.c ****  * @date 2019-05-07
   4:../Libraries/XMCLib/src/xmc_usic.c ****  *
   5:../Libraries/XMCLib/src/xmc_usic.c ****  * @cond
   6:../Libraries/XMCLib/src/xmc_usic.c ****  **************************************************************************************************
   7:../Libraries/XMCLib/src/xmc_usic.c ****  * XMClib v2.1.22 - XMC Peripheral Driver Library 
   8:../Libraries/XMCLib/src/xmc_usic.c ****  *
   9:../Libraries/XMCLib/src/xmc_usic.c ****  * Copyright (c) 2015-2019, Infineon Technologies AG
  10:../Libraries/XMCLib/src/xmc_usic.c ****  * All rights reserved.                        
  11:../Libraries/XMCLib/src/xmc_usic.c ****  *                                             
  12:../Libraries/XMCLib/src/xmc_usic.c ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:../Libraries/XMCLib/src/xmc_usic.c ****  * following conditions are met:   
  14:../Libraries/XMCLib/src/xmc_usic.c ****  *                                                                              
  15:../Libraries/XMCLib/src/xmc_usic.c ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:../Libraries/XMCLib/src/xmc_usic.c ****  * disclaimer.                        
  17:../Libraries/XMCLib/src/xmc_usic.c ****  * 
  18:../Libraries/XMCLib/src/xmc_usic.c ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:../Libraries/XMCLib/src/xmc_usic.c ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:../Libraries/XMCLib/src/xmc_usic.c ****  * 
  21:../Libraries/XMCLib/src/xmc_usic.c ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:../Libraries/XMCLib/src/xmc_usic.c ****  * products derived from this software without specific prior written permission.                  
  23:../Libraries/XMCLib/src/xmc_usic.c ****  *                                                                              
  24:../Libraries/XMCLib/src/xmc_usic.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:../Libraries/XMCLib/src/xmc_usic.c ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:../Libraries/XMCLib/src/xmc_usic.c ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:../Libraries/XMCLib/src/xmc_usic.c ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:../Libraries/XMCLib/src/xmc_usic.c ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:../Libraries/XMCLib/src/xmc_usic.c ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:../Libraries/XMCLib/src/xmc_usic.c ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:../Libraries/XMCLib/src/xmc_usic.c ****  *                                                                              
  32:../Libraries/XMCLib/src/xmc_usic.c ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:../Libraries/XMCLib/src/xmc_usic.c ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:../Libraries/XMCLib/src/xmc_usic.c ****  **************************************************************************************************
  35:../Libraries/XMCLib/src/xmc_usic.c ****  *
  36:../Libraries/XMCLib/src/xmc_usic.c ****  * Change History
  37:../Libraries/XMCLib/src/xmc_usic.c ****  * --------------
  38:../Libraries/XMCLib/src/xmc_usic.c ****  *
  39:../Libraries/XMCLib/src/xmc_usic.c ****  * 2015-02-20:
  40:../Libraries/XMCLib/src/xmc_usic.c ****  *     - Initial draft <br>
  41:../Libraries/XMCLib/src/xmc_usic.c ****  *     - Documentation improved <br>
  42:../Libraries/XMCLib/src/xmc_usic.c ****  *
  43:../Libraries/XMCLib/src/xmc_usic.c ****  * 2015-05-08:
  44:../Libraries/XMCLib/src/xmc_usic.c ****  *     - Clearing bit fields PDIV, PCTQ, PPPEN in XMC_USIC_CH_SetBaudrate() API <br>
  45:../Libraries/XMCLib/src/xmc_usic.c ****  *      
  46:../Libraries/XMCLib/src/xmc_usic.c ****  * 2015-06-20:
  47:../Libraries/XMCLib/src/xmc_usic.c ****  *     - Removed version macros and declaration of GetDriverVersion API <br>
  48:../Libraries/XMCLib/src/xmc_usic.c ****  *
  49:../Libraries/XMCLib/src/xmc_usic.c ****  * 2015-08-27:
  50:../Libraries/XMCLib/src/xmc_usic.c ****  *     - Added APIs for external input for BRG configuration:XMC_USIC_CH_ConfigExternalInputSignalT
  51:../Libraries/XMCLib/src/xmc_usic.c ****  *
  52:../Libraries/XMCLib/src/xmc_usic.c ****  * 2015-08-28:
  53:../Libraries/XMCLib/src/xmc_usic.c ****  *     - Added asserts to XMC_USIC_CH_ConfigExternalInputSignalToBRG() <br>
  54:../Libraries/XMCLib/src/xmc_usic.c ****  *
  55:../Libraries/XMCLib/src/xmc_usic.c ****  * 2015-09-01:
  56:../Libraries/XMCLib/src/xmc_usic.c ****  *     - Fixed warning in the asserts <br>
  57:../Libraries/XMCLib/src/xmc_usic.c ****  *
  58:../Libraries/XMCLib/src/xmc_usic.c ****  * 2018-09-29:
  59:../Libraries/XMCLib/src/xmc_usic.c ****  *     - Added XMC_USIC_CH_SetBaudrateEx which uses the integer divider instead of the fractional d
  60:../Libraries/XMCLib/src/xmc_usic.c ****  * 
  61:../Libraries/XMCLib/src/xmc_usic.c ****  * 2019-03-30:
  62:../Libraries/XMCLib/src/xmc_usic.c ****  *     - Changed XMC_USIC_Enable() adding polling to check clock ungate
  63:../Libraries/XMCLib/src/xmc_usic.c ****  *
  64:../Libraries/XMCLib/src/xmc_usic.c ****  * 2019-05-07:
  65:../Libraries/XMCLib/src/xmc_usic.c ****  *     - Added XMC_USIC_CH_GetBaudrate(), XMC_USIC_CH_GetSCLKFrequency() and XMC_USIC_CH_GetMCLKFre
  66:../Libraries/XMCLib/src/xmc_usic.c ****  *
  67:../Libraries/XMCLib/src/xmc_usic.c ****  * @endcond
  68:../Libraries/XMCLib/src/xmc_usic.c ****  *
  69:../Libraries/XMCLib/src/xmc_usic.c ****  */
  70:../Libraries/XMCLib/src/xmc_usic.c **** 
  71:../Libraries/XMCLib/src/xmc_usic.c **** /*******************************************************************************
  72:../Libraries/XMCLib/src/xmc_usic.c ****  * HEADER FILES
  73:../Libraries/XMCLib/src/xmc_usic.c ****  *******************************************************************************/
  74:../Libraries/XMCLib/src/xmc_usic.c **** 
  75:../Libraries/XMCLib/src/xmc_usic.c **** #include "xmc_usic.h"
  76:../Libraries/XMCLib/src/xmc_usic.c **** #include "xmc_scu.h"
  77:../Libraries/XMCLib/src/xmc_usic.c **** 
  78:../Libraries/XMCLib/src/xmc_usic.c **** #include <stdlib.h>     /* abs */
  79:../Libraries/XMCLib/src/xmc_usic.c **** 
  80:../Libraries/XMCLib/src/xmc_usic.c **** /*******************************************************************************
  81:../Libraries/XMCLib/src/xmc_usic.c ****  * MACROS
  82:../Libraries/XMCLib/src/xmc_usic.c ****  *******************************************************************************/
  83:../Libraries/XMCLib/src/xmc_usic.c **** 
  84:../Libraries/XMCLib/src/xmc_usic.c **** #define USIC_CH_INPR_Msk       (0x7UL)
  85:../Libraries/XMCLib/src/xmc_usic.c **** 
  86:../Libraries/XMCLib/src/xmc_usic.c **** /*******************************************************************************
  87:../Libraries/XMCLib/src/xmc_usic.c ****  * API IMPLEMENTATION
  88:../Libraries/XMCLib/src/xmc_usic.c ****  *******************************************************************************/
  89:../Libraries/XMCLib/src/xmc_usic.c **** 
  90:../Libraries/XMCLib/src/xmc_usic.c **** void XMC_USIC_CH_Enable(XMC_USIC_CH_t *const channel)
  91:../Libraries/XMCLib/src/xmc_usic.c **** {
 140              	 .loc 2 91 0
 141              	 .cfi_startproc
 142              	 
 143              	 
 144 0000 80B5     	 push {r7,lr}
 145              	.LCFI12:
 146              	 .cfi_def_cfa_offset 8
 147              	 .cfi_offset 7,-8
 148              	 .cfi_offset 14,-4
 149 0002 82B0     	 sub sp,sp,#8
 150              	.LCFI13:
 151              	 .cfi_def_cfa_offset 16
 152 0004 00AF     	 add r7,sp,#0
 153              	.LCFI14:
 154              	 .cfi_def_cfa_register 7
 155 0006 7860     	 str r0,[r7,#4]
  92:../Libraries/XMCLib/src/xmc_usic.c ****   XMC_ASSERT("XMC_USIC_CH_Enable: channel not valid", XMC_USIC_IsChannelValid(channel));
  93:../Libraries/XMCLib/src/xmc_usic.c **** 
  94:../Libraries/XMCLib/src/xmc_usic.c ****   if ((channel == XMC_USIC0_CH0) || (channel == XMC_USIC0_CH1))
 156              	 .loc 2 94 0
 157 0008 7B68     	 ldr r3,[r7,#4]
 158 000a 1A4A     	 ldr r2,.L11
 159 000c 9342     	 cmp r3,r2
 160 000e 03D0     	 beq .L4
 161              	 .loc 2 94 0 is_stmt 0 discriminator 1
 162 0010 7B68     	 ldr r3,[r7,#4]
 163 0012 194A     	 ldr r2,.L11+4
 164 0014 9342     	 cmp r3,r2
 165 0016 03D1     	 bne .L5
 166              	.L4:
  95:../Libraries/XMCLib/src/xmc_usic.c ****   {
  96:../Libraries/XMCLib/src/xmc_usic.c ****     XMC_USIC_Enable(XMC_USIC0);
 167              	 .loc 2 96 0 is_stmt 1
 168 0018 1848     	 ldr r0,.L11+8
 169 001a FFF7FEFF 	 bl XMC_USIC_Enable
 170 001e 16E0     	 b .L6
 171              	.L5:
  97:../Libraries/XMCLib/src/xmc_usic.c ****   }
  98:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(USIC1)
  99:../Libraries/XMCLib/src/xmc_usic.c ****   else if((channel == XMC_USIC1_CH0) || (channel == XMC_USIC1_CH1))
 172              	 .loc 2 99 0
 173 0020 7B68     	 ldr r3,[r7,#4]
 174 0022 174A     	 ldr r2,.L11+12
 175 0024 9342     	 cmp r3,r2
 176 0026 03D0     	 beq .L7
 177              	 .loc 2 99 0 is_stmt 0 discriminator 1
 178 0028 7B68     	 ldr r3,[r7,#4]
 179 002a 164A     	 ldr r2,.L11+16
 180 002c 9342     	 cmp r3,r2
 181 002e 03D1     	 bne .L8
 182              	.L7:
 100:../Libraries/XMCLib/src/xmc_usic.c ****   {
 101:../Libraries/XMCLib/src/xmc_usic.c ****     XMC_USIC_Enable(XMC_USIC1);
 183              	 .loc 2 101 0 is_stmt 1
 184 0030 1548     	 ldr r0,.L11+20
 185 0032 FFF7FEFF 	 bl XMC_USIC_Enable
 186 0036 0AE0     	 b .L6
 187              	.L8:
 102:../Libraries/XMCLib/src/xmc_usic.c ****   }
 103:../Libraries/XMCLib/src/xmc_usic.c **** #endif
 104:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(USIC2)
 105:../Libraries/XMCLib/src/xmc_usic.c ****   else if((channel == XMC_USIC2_CH0) || (channel == XMC_USIC2_CH1))
 188              	 .loc 2 105 0
 189 0038 7B68     	 ldr r3,[r7,#4]
 190 003a 144A     	 ldr r2,.L11+24
 191 003c 9342     	 cmp r3,r2
 192 003e 03D0     	 beq .L9
 193              	 .loc 2 105 0 is_stmt 0 discriminator 1
 194 0040 7B68     	 ldr r3,[r7,#4]
 195 0042 134A     	 ldr r2,.L11+28
 196 0044 9342     	 cmp r3,r2
 197 0046 02D1     	 bne .L6
 198              	.L9:
 106:../Libraries/XMCLib/src/xmc_usic.c ****   {
 107:../Libraries/XMCLib/src/xmc_usic.c ****     XMC_USIC_Enable(XMC_USIC2);
 199              	 .loc 2 107 0 is_stmt 1
 200 0048 1248     	 ldr r0,.L11+32
 201 004a FFF7FEFF 	 bl XMC_USIC_Enable
 202              	.L6:
 108:../Libraries/XMCLib/src/xmc_usic.c ****   }
 109:../Libraries/XMCLib/src/xmc_usic.c **** #endif
 110:../Libraries/XMCLib/src/xmc_usic.c ****   else
 111:../Libraries/XMCLib/src/xmc_usic.c ****   {
 112:../Libraries/XMCLib/src/xmc_usic.c ****     XMC_ASSERT("USIC module not available", 0U/*Always*/);
 113:../Libraries/XMCLib/src/xmc_usic.c ****   }
 114:../Libraries/XMCLib/src/xmc_usic.c **** 
 115:../Libraries/XMCLib/src/xmc_usic.c ****   /* USIC channel switched on*/
 116:../Libraries/XMCLib/src/xmc_usic.c ****   channel->KSCFG = (USIC_CH_KSCFG_MODEN_Msk | USIC_CH_KSCFG_BPMODEN_Msk);
 203              	 .loc 2 116 0
 204 004e 7B68     	 ldr r3,[r7,#4]
 205 0050 0322     	 movs r2,#3
 206 0052 DA60     	 str r2,[r3,#12]
 117:../Libraries/XMCLib/src/xmc_usic.c ****   while ((channel->KSCFG & USIC_CH_KSCFG_MODEN_Msk) == 0U)
 207              	 .loc 2 117 0
 208 0054 00BF     	 nop
 209              	.L10:
 210              	 .loc 2 117 0 is_stmt 0 discriminator 1
 211 0056 7B68     	 ldr r3,[r7,#4]
 212 0058 DB68     	 ldr r3,[r3,#12]
 213 005a 03F00103 	 and r3,r3,#1
 214 005e 002B     	 cmp r3,#0
 215 0060 F9D0     	 beq .L10
 118:../Libraries/XMCLib/src/xmc_usic.c ****   {
 119:../Libraries/XMCLib/src/xmc_usic.c ****     /* Wait till the channel is enabled */
 120:../Libraries/XMCLib/src/xmc_usic.c ****   }
 121:../Libraries/XMCLib/src/xmc_usic.c **** 
 122:../Libraries/XMCLib/src/xmc_usic.c ****   /* Set USIC channel in IDLE mode */
 123:../Libraries/XMCLib/src/xmc_usic.c ****   channel->CCR &= (uint32_t)~USIC_CH_CCR_MODE_Msk;
 216              	 .loc 2 123 0 is_stmt 1
 217 0062 7B68     	 ldr r3,[r7,#4]
 218 0064 1B6C     	 ldr r3,[r3,#64]
 219 0066 23F00F02 	 bic r2,r3,#15
 220 006a 7B68     	 ldr r3,[r7,#4]
 221 006c 1A64     	 str r2,[r3,#64]
 124:../Libraries/XMCLib/src/xmc_usic.c **** }
 222              	 .loc 2 124 0
 223 006e 0837     	 adds r7,r7,#8
 224              	.LCFI15:
 225              	 .cfi_def_cfa_offset 8
 226 0070 BD46     	 mov sp,r7
 227              	.LCFI16:
 228              	 .cfi_def_cfa_register 13
 229              	 
 230 0072 80BD     	 pop {r7,pc}
 231              	.L12:
 232              	 .align 2
 233              	.L11:
 234 0074 00000340 	 .word 1073938432
 235 0078 00020340 	 .word 1073938944
 236 007c 08000340 	 .word 1073938440
 237 0080 00000248 	 .word 1208090624
 238 0084 00020248 	 .word 1208091136
 239 0088 08000248 	 .word 1208090632
 240 008c 00400248 	 .word 1208107008
 241 0090 00420248 	 .word 1208107520
 242 0094 08400248 	 .word 1208107016
 243              	 .cfi_endproc
 244              	.LFE235:
 246              	 .section .text.XMC_USIC_CH_Disable,"ax",%progbits
 247              	 .align 2
 248              	 .global XMC_USIC_CH_Disable
 249              	 .thumb
 250              	 .thumb_func
 252              	XMC_USIC_CH_Disable:
 253              	.LFB236:
 125:../Libraries/XMCLib/src/xmc_usic.c **** 
 126:../Libraries/XMCLib/src/xmc_usic.c **** void XMC_USIC_CH_Disable(XMC_USIC_CH_t *const channel)
 127:../Libraries/XMCLib/src/xmc_usic.c **** {
 254              	 .loc 2 127 0
 255              	 .cfi_startproc
 256              	 
 257              	 
 258              	 
 259 0000 80B4     	 push {r7}
 260              	.LCFI17:
 261              	 .cfi_def_cfa_offset 4
 262              	 .cfi_offset 7,-4
 263 0002 83B0     	 sub sp,sp,#12
 264              	.LCFI18:
 265              	 .cfi_def_cfa_offset 16
 266 0004 00AF     	 add r7,sp,#0
 267              	.LCFI19:
 268              	 .cfi_def_cfa_register 7
 269 0006 7860     	 str r0,[r7,#4]
 128:../Libraries/XMCLib/src/xmc_usic.c ****   channel->KSCFG = (uint32_t)((channel->KSCFG & (~USIC_CH_KSCFG_MODEN_Msk)) | USIC_CH_KSCFG_BPMODEN
 270              	 .loc 2 128 0
 271 0008 7B68     	 ldr r3,[r7,#4]
 272 000a DB68     	 ldr r3,[r3,#12]
 273 000c 23F00303 	 bic r3,r3,#3
 274 0010 43F00202 	 orr r2,r3,#2
 275 0014 7B68     	 ldr r3,[r7,#4]
 276 0016 DA60     	 str r2,[r3,#12]
 129:../Libraries/XMCLib/src/xmc_usic.c **** }
 277              	 .loc 2 129 0
 278 0018 0C37     	 adds r7,r7,#12
 279              	.LCFI20:
 280              	 .cfi_def_cfa_offset 4
 281 001a BD46     	 mov sp,r7
 282              	.LCFI21:
 283              	 .cfi_def_cfa_register 13
 284              	 
 285 001c 5DF8047B 	 ldr r7,[sp],#4
 286              	.LCFI22:
 287              	 .cfi_restore 7
 288              	 .cfi_def_cfa_offset 0
 289 0020 7047     	 bx lr
 290              	 .cfi_endproc
 291              	.LFE236:
 293 0022 00BF     	 .section .text.XMC_USIC_CH_SetBaudrate,"ax",%progbits
 294              	 .align 2
 295              	 .global XMC_USIC_CH_SetBaudrate
 296              	 .thumb
 297              	 .thumb_func
 299              	XMC_USIC_CH_SetBaudrate:
 300              	.LFB237:
 130:../Libraries/XMCLib/src/xmc_usic.c **** 
 131:../Libraries/XMCLib/src/xmc_usic.c **** XMC_USIC_CH_STATUS_t XMC_USIC_CH_SetBaudrate(XMC_USIC_CH_t *const channel, uint32_t rate, uint32_t 
 132:../Libraries/XMCLib/src/xmc_usic.c **** {
 301              	 .loc 2 132 0
 302              	 .cfi_startproc
 303              	 
 304              	 
 305 0000 80B5     	 push {r7,lr}
 306              	.LCFI23:
 307              	 .cfi_def_cfa_offset 8
 308              	 .cfi_offset 7,-8
 309              	 .cfi_offset 14,-4
 310 0002 8EB0     	 sub sp,sp,#56
 311              	.LCFI24:
 312              	 .cfi_def_cfa_offset 64
 313 0004 00AF     	 add r7,sp,#0
 314              	.LCFI25:
 315              	 .cfi_def_cfa_register 7
 316 0006 F860     	 str r0,[r7,#12]
 317 0008 B960     	 str r1,[r7,#8]
 318 000a 7A60     	 str r2,[r7,#4]
 133:../Libraries/XMCLib/src/xmc_usic.c ****   XMC_USIC_CH_STATUS_t status;
 134:../Libraries/XMCLib/src/xmc_usic.c ****   
 135:../Libraries/XMCLib/src/xmc_usic.c ****   uint32_t peripheral_clock;
 136:../Libraries/XMCLib/src/xmc_usic.c ****   
 137:../Libraries/XMCLib/src/xmc_usic.c ****   uint32_t clock_divider;
 138:../Libraries/XMCLib/src/xmc_usic.c ****   uint32_t clock_divider_min;
 139:../Libraries/XMCLib/src/xmc_usic.c **** 
 140:../Libraries/XMCLib/src/xmc_usic.c ****   uint32_t pdiv;
 141:../Libraries/XMCLib/src/xmc_usic.c ****   uint32_t pdiv_int;
 142:../Libraries/XMCLib/src/xmc_usic.c ****   uint32_t pdiv_int_min;
 143:../Libraries/XMCLib/src/xmc_usic.c ****   
 144:../Libraries/XMCLib/src/xmc_usic.c ****   uint32_t pdiv_frac;
 145:../Libraries/XMCLib/src/xmc_usic.c ****   uint32_t pdiv_frac_min;
 146:../Libraries/XMCLib/src/xmc_usic.c **** 
 147:../Libraries/XMCLib/src/xmc_usic.c ****   /* The rate and peripheral clock are divided by 100 to be able to use only 32bit arithmetic */
 148:../Libraries/XMCLib/src/xmc_usic.c ****   if ((rate >= 100U) && (oversampling != 0U))
 319              	 .loc 2 148 0
 320 000c BB68     	 ldr r3,[r7,#8]
 321 000e 632B     	 cmp r3,#99
 322 0010 58D9     	 bls .L15
 323              	 .loc 2 148 0 is_stmt 0 discriminator 1
 324 0012 7B68     	 ldr r3,[r7,#4]
 325 0014 002B     	 cmp r3,#0
 326 0016 55D0     	 beq .L15
 149:../Libraries/XMCLib/src/xmc_usic.c ****   {
 150:../Libraries/XMCLib/src/xmc_usic.c ****     peripheral_clock = XMC_SCU_CLOCK_GetPeripheralClockFrequency() / 100U;
 327              	 .loc 2 150 0 is_stmt 1
 328 0018 FFF7FEFF 	 bl XMC_SCU_CLOCK_GetPeripheralClockFrequency
 329 001c 0246     	 mov r2,r0
 330 001e 2E4B     	 ldr r3,.L21
 331 0020 A3FB0223 	 umull r2,r3,r3,r2
 332 0024 5B09     	 lsrs r3,r3,#5
 333 0026 3B62     	 str r3,[r7,#32]
 151:../Libraries/XMCLib/src/xmc_usic.c ****     rate = rate / 100U;
 334              	 .loc 2 151 0
 335 0028 BB68     	 ldr r3,[r7,#8]
 336 002a 2B4A     	 ldr r2,.L21
 337 002c A2FB0323 	 umull r2,r3,r2,r3
 338 0030 5B09     	 lsrs r3,r3,#5
 339 0032 BB60     	 str r3,[r7,#8]
 152:../Libraries/XMCLib/src/xmc_usic.c **** 
 153:../Libraries/XMCLib/src/xmc_usic.c ****     clock_divider_min = 1U;
 340              	 .loc 2 153 0
 341 0034 0123     	 movs r3,#1
 342 0036 FB62     	 str r3,[r7,#44]
 154:../Libraries/XMCLib/src/xmc_usic.c ****     pdiv_int_min = 1U;
 343              	 .loc 2 154 0
 344 0038 0123     	 movs r3,#1
 345 003a BB62     	 str r3,[r7,#40]
 155:../Libraries/XMCLib/src/xmc_usic.c ****     pdiv_frac_min = 0x3ffU;
 346              	 .loc 2 155 0
 347 003c 40F2FF33 	 movw r3,#1023
 348 0040 7B62     	 str r3,[r7,#36]
 156:../Libraries/XMCLib/src/xmc_usic.c **** 
 157:../Libraries/XMCLib/src/xmc_usic.c ****     for(clock_divider = 1023U; clock_divider > 0U; --clock_divider)
 349              	 .loc 2 157 0
 350 0042 40F2FF33 	 movw r3,#1023
 351 0046 3B63     	 str r3,[r7,#48]
 352 0048 22E0     	 b .L16
 353              	.L18:
 158:../Libraries/XMCLib/src/xmc_usic.c ****     {
 159:../Libraries/XMCLib/src/xmc_usic.c ****       pdiv = ((peripheral_clock * clock_divider) / (rate * oversampling));
 354              	 .loc 2 159 0
 355 004a 3B6A     	 ldr r3,[r7,#32]
 356 004c 3A6B     	 ldr r2,[r7,#48]
 357 004e 02FB03F2 	 mul r2,r2,r3
 358 0052 BB68     	 ldr r3,[r7,#8]
 359 0054 7968     	 ldr r1,[r7,#4]
 360 0056 01FB03F3 	 mul r3,r1,r3
 361 005a B2FBF3F3 	 udiv r3,r2,r3
 362 005e FB61     	 str r3,[r7,#28]
 160:../Libraries/XMCLib/src/xmc_usic.c ****       pdiv_int = pdiv >> 10U;
 363              	 .loc 2 160 0
 364 0060 FB69     	 ldr r3,[r7,#28]
 365 0062 9B0A     	 lsrs r3,r3,#10
 366 0064 BB61     	 str r3,[r7,#24]
 161:../Libraries/XMCLib/src/xmc_usic.c ****       pdiv_frac = pdiv & 0x3ffU;
 367              	 .loc 2 161 0
 368 0066 FB69     	 ldr r3,[r7,#28]
 369 0068 C3F30903 	 ubfx r3,r3,#0,#10
 370 006c 7B61     	 str r3,[r7,#20]
 162:../Libraries/XMCLib/src/xmc_usic.c **** 
 163:../Libraries/XMCLib/src/xmc_usic.c ****       if ((pdiv_int < 1024U) && (pdiv_frac < pdiv_frac_min))
 371              	 .loc 2 163 0
 372 006e BB69     	 ldr r3,[r7,#24]
 373 0070 B3F5806F 	 cmp r3,#1024
 374 0074 09D2     	 bcs .L17
 375              	 .loc 2 163 0 is_stmt 0 discriminator 1
 376 0076 7A69     	 ldr r2,[r7,#20]
 377 0078 7B6A     	 ldr r3,[r7,#36]
 378 007a 9A42     	 cmp r2,r3
 379 007c 05D2     	 bcs .L17
 164:../Libraries/XMCLib/src/xmc_usic.c ****       {
 165:../Libraries/XMCLib/src/xmc_usic.c ****         pdiv_frac_min = pdiv_frac;
 380              	 .loc 2 165 0 is_stmt 1
 381 007e 7B69     	 ldr r3,[r7,#20]
 382 0080 7B62     	 str r3,[r7,#36]
 166:../Libraries/XMCLib/src/xmc_usic.c ****         pdiv_int_min = pdiv_int;
 383              	 .loc 2 166 0
 384 0082 BB69     	 ldr r3,[r7,#24]
 385 0084 BB62     	 str r3,[r7,#40]
 167:../Libraries/XMCLib/src/xmc_usic.c ****         clock_divider_min = clock_divider;
 386              	 .loc 2 167 0
 387 0086 3B6B     	 ldr r3,[r7,#48]
 388 0088 FB62     	 str r3,[r7,#44]
 389              	.L17:
 157:../Libraries/XMCLib/src/xmc_usic.c ****     {
 390              	 .loc 2 157 0 discriminator 2
 391 008a 3B6B     	 ldr r3,[r7,#48]
 392 008c 013B     	 subs r3,r3,#1
 393 008e 3B63     	 str r3,[r7,#48]
 394              	.L16:
 157:../Libraries/XMCLib/src/xmc_usic.c ****     {
 395              	 .loc 2 157 0 is_stmt 0 discriminator 1
 396 0090 3B6B     	 ldr r3,[r7,#48]
 397 0092 002B     	 cmp r3,#0
 398 0094 D9D1     	 bne .L18
 168:../Libraries/XMCLib/src/xmc_usic.c ****       }
 169:../Libraries/XMCLib/src/xmc_usic.c ****     }
 170:../Libraries/XMCLib/src/xmc_usic.c **** 
 171:../Libraries/XMCLib/src/xmc_usic.c ****     channel->FDR = XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_FRACTIONAL |
 399              	 .loc 2 171 0 is_stmt 1
 400 0096 FB6A     	 ldr r3,[r7,#44]
 401 0098 43F40042 	 orr r2,r3,#32768
 402 009c FB68     	 ldr r3,[r7,#12]
 403 009e 1A61     	 str r2,[r3,#16]
 172:../Libraries/XMCLib/src/xmc_usic.c ****                    (clock_divider_min << USIC_CH_FDR_STEP_Pos);
 173:../Libraries/XMCLib/src/xmc_usic.c **** 
 174:../Libraries/XMCLib/src/xmc_usic.c ****     channel->BRG = (channel->BRG & ~(USIC_CH_BRG_DCTQ_Msk |
 404              	 .loc 2 174 0
 405 00a0 FB68     	 ldr r3,[r7,#12]
 406 00a2 5A69     	 ldr r2,[r3,#20]
 407 00a4 0D4B     	 ldr r3,.L21+4
 408 00a6 1340     	 ands r3,r3,r2
 175:../Libraries/XMCLib/src/xmc_usic.c ****                                      USIC_CH_BRG_PDIV_Msk |
 176:../Libraries/XMCLib/src/xmc_usic.c ****                                      USIC_CH_BRG_PCTQ_Msk |
 177:../Libraries/XMCLib/src/xmc_usic.c ****                                      USIC_CH_BRG_PPPEN_Msk)) |
 178:../Libraries/XMCLib/src/xmc_usic.c ****                    ((oversampling - 1U) << USIC_CH_BRG_DCTQ_Pos) |
 409              	 .loc 2 178 0
 410 00a8 7A68     	 ldr r2,[r7,#4]
 411 00aa 013A     	 subs r2,r2,#1
 412 00ac 9202     	 lsls r2,r2,#10
 177:../Libraries/XMCLib/src/xmc_usic.c ****                    ((oversampling - 1U) << USIC_CH_BRG_DCTQ_Pos) |
 413              	 .loc 2 177 0
 414 00ae 1A43     	 orrs r2,r2,r3
 179:../Libraries/XMCLib/src/xmc_usic.c ****                    ((pdiv_int_min - 1U) << USIC_CH_BRG_PDIV_Pos);
 415              	 .loc 2 179 0
 416 00b0 BB6A     	 ldr r3,[r7,#40]
 417 00b2 013B     	 subs r3,r3,#1
 418 00b4 1B04     	 lsls r3,r3,#16
 178:../Libraries/XMCLib/src/xmc_usic.c ****                    ((pdiv_int_min - 1U) << USIC_CH_BRG_PDIV_Pos);
 419              	 .loc 2 178 0
 420 00b6 1A43     	 orrs r2,r2,r3
 174:../Libraries/XMCLib/src/xmc_usic.c ****                                      USIC_CH_BRG_PDIV_Msk |
 421              	 .loc 2 174 0
 422 00b8 FB68     	 ldr r3,[r7,#12]
 423 00ba 5A61     	 str r2,[r3,#20]
 180:../Libraries/XMCLib/src/xmc_usic.c ****                     
 181:../Libraries/XMCLib/src/xmc_usic.c ****     status = XMC_USIC_CH_STATUS_OK;
 424              	 .loc 2 181 0
 425 00bc 0023     	 movs r3,#0
 426 00be 87F83730 	 strb r3,[r7,#55]
 427 00c2 02E0     	 b .L19
 428              	.L15:
 182:../Libraries/XMCLib/src/xmc_usic.c ****   }
 183:../Libraries/XMCLib/src/xmc_usic.c ****   else 
 184:../Libraries/XMCLib/src/xmc_usic.c ****   {
 185:../Libraries/XMCLib/src/xmc_usic.c ****     status = XMC_USIC_CH_STATUS_ERROR;
 429              	 .loc 2 185 0
 430 00c4 0123     	 movs r3,#1
 431 00c6 87F83730 	 strb r3,[r7,#55]
 432              	.L19:
 186:../Libraries/XMCLib/src/xmc_usic.c ****   }
 187:../Libraries/XMCLib/src/xmc_usic.c ****   
 188:../Libraries/XMCLib/src/xmc_usic.c ****   return status;
 433              	 .loc 2 188 0
 434 00ca 97F83730 	 ldrb r3,[r7,#55]
 189:../Libraries/XMCLib/src/xmc_usic.c **** }
 435              	 .loc 2 189 0
 436 00ce 1846     	 mov r0,r3
 437 00d0 3837     	 adds r7,r7,#56
 438              	.LCFI26:
 439              	 .cfi_def_cfa_offset 8
 440 00d2 BD46     	 mov sp,r7
 441              	.LCFI27:
 442              	 .cfi_def_cfa_register 13
 443              	 
 444 00d4 80BD     	 pop {r7,pc}
 445              	.L22:
 446 00d6 00BF     	 .align 2
 447              	.L21:
 448 00d8 1F85EB51 	 .word 1374389535
 449 00dc EF8000FC 	 .word -67075857
 450              	 .cfi_endproc
 451              	.LFE237:
 453              	 .section .text.XMC_USIC_CH_SetBaudrateEx,"ax",%progbits
 454              	 .align 2
 455              	 .global XMC_USIC_CH_SetBaudrateEx
 456              	 .thumb
 457              	 .thumb_func
 459              	XMC_USIC_CH_SetBaudrateEx:
 460              	.LFB238:
 190:../Libraries/XMCLib/src/xmc_usic.c **** 
 191:../Libraries/XMCLib/src/xmc_usic.c **** XMC_USIC_CH_STATUS_t XMC_USIC_CH_SetBaudrateEx(XMC_USIC_CH_t *const channel, uint32_t rate, uint32_
 192:../Libraries/XMCLib/src/xmc_usic.c **** {
 461              	 .loc 2 192 0
 462              	 .cfi_startproc
 463              	 
 464              	 
 465 0000 80B5     	 push {r7,lr}
 466              	.LCFI28:
 467              	 .cfi_def_cfa_offset 8
 468              	 .cfi_offset 7,-8
 469              	 .cfi_offset 14,-4
 470 0002 8CB0     	 sub sp,sp,#48
 471              	.LCFI29:
 472              	 .cfi_def_cfa_offset 56
 473 0004 00AF     	 add r7,sp,#0
 474              	.LCFI30:
 475              	 .cfi_def_cfa_register 7
 476 0006 F860     	 str r0,[r7,#12]
 477 0008 B960     	 str r1,[r7,#8]
 478 000a 7A60     	 str r2,[r7,#4]
 193:../Libraries/XMCLib/src/xmc_usic.c ****   uint32_t peripheral_clock = XMC_SCU_CLOCK_GetPeripheralClockFrequency();
 479              	 .loc 2 193 0
 480 000c FFF7FEFF 	 bl XMC_SCU_CLOCK_GetPeripheralClockFrequency
 481 0010 3862     	 str r0,[r7,#32]
 194:../Libraries/XMCLib/src/xmc_usic.c ****   uint32_t brg_clock = rate * oversampling;
 482              	 .loc 2 194 0
 483 0012 BB68     	 ldr r3,[r7,#8]
 484 0014 7A68     	 ldr r2,[r7,#4]
 485 0016 02FB03F3 	 mul r3,r2,r3
 486 001a FB61     	 str r3,[r7,#28]
 195:../Libraries/XMCLib/src/xmc_usic.c ****   uint32_t divider_step;
 196:../Libraries/XMCLib/src/xmc_usic.c ****   uint32_t actual_rate_upper;
 197:../Libraries/XMCLib/src/xmc_usic.c ****   uint32_t actual_rate_lower;
 198:../Libraries/XMCLib/src/xmc_usic.c ****   XMC_USIC_CH_STATUS_t status;
 199:../Libraries/XMCLib/src/xmc_usic.c ****   uint32_t pdiv = 1;
 487              	 .loc 2 199 0
 488 001c 0123     	 movs r3,#1
 489 001e 7B62     	 str r3,[r7,#36]
 200:../Libraries/XMCLib/src/xmc_usic.c **** 
 201:../Libraries/XMCLib/src/xmc_usic.c ****   if (peripheral_clock > brg_clock)
 490              	 .loc 2 201 0
 491 0020 3A6A     	 ldr r2,[r7,#32]
 492 0022 FB69     	 ldr r3,[r7,#28]
 493 0024 9A42     	 cmp r2,r3
 494 0026 5ED9     	 bls .L24
 202:../Libraries/XMCLib/src/xmc_usic.c ****   {
 203:../Libraries/XMCLib/src/xmc_usic.c ****     divider_step = peripheral_clock / brg_clock; // integer division gets truncated
 495              	 .loc 2 203 0
 496 0028 3A6A     	 ldr r2,[r7,#32]
 497 002a FB69     	 ldr r3,[r7,#28]
 498 002c B2FBF3F3 	 udiv r3,r2,r3
 499 0030 FB62     	 str r3,[r7,#44]
 204:../Libraries/XMCLib/src/xmc_usic.c ****     while (divider_step >= 1023)
 500              	 .loc 2 204 0
 501 0032 0FE0     	 b .L25
 502              	.L26:
 205:../Libraries/XMCLib/src/xmc_usic.c ****     {
 206:../Libraries/XMCLib/src/xmc_usic.c ****       pdiv++;
 503              	 .loc 2 206 0
 504 0034 7B6A     	 ldr r3,[r7,#36]
 505 0036 0133     	 adds r3,r3,#1
 506 0038 7B62     	 str r3,[r7,#36]
 207:../Libraries/XMCLib/src/xmc_usic.c ****       brg_clock = rate * oversampling * pdiv;
 507              	 .loc 2 207 0
 508 003a BB68     	 ldr r3,[r7,#8]
 509 003c 7A68     	 ldr r2,[r7,#4]
 510 003e 02FB03F3 	 mul r3,r2,r3
 511 0042 7A6A     	 ldr r2,[r7,#36]
 512 0044 02FB03F3 	 mul r3,r2,r3
 513 0048 FB61     	 str r3,[r7,#28]
 208:../Libraries/XMCLib/src/xmc_usic.c ****       divider_step = peripheral_clock / brg_clock; // integer division gets truncated
 514              	 .loc 2 208 0
 515 004a 3A6A     	 ldr r2,[r7,#32]
 516 004c FB69     	 ldr r3,[r7,#28]
 517 004e B2FBF3F3 	 udiv r3,r2,r3
 518 0052 FB62     	 str r3,[r7,#44]
 519              	.L25:
 204:../Libraries/XMCLib/src/xmc_usic.c ****     {
 520              	 .loc 2 204 0
 521 0054 FB6A     	 ldr r3,[r7,#44]
 522 0056 40F2FE32 	 movw r2,#1022
 523 005a 9342     	 cmp r3,r2
 524 005c EAD8     	 bhi .L26
 209:../Libraries/XMCLib/src/xmc_usic.c ****     }
 210:../Libraries/XMCLib/src/xmc_usic.c ****     actual_rate_upper = peripheral_clock / (divider_step * oversampling * pdiv);
 525              	 .loc 2 210 0
 526 005e FB6A     	 ldr r3,[r7,#44]
 527 0060 7A68     	 ldr r2,[r7,#4]
 528 0062 02FB03F3 	 mul r3,r2,r3
 529 0066 7A6A     	 ldr r2,[r7,#36]
 530 0068 02FB03F3 	 mul r3,r2,r3
 531 006c 3A6A     	 ldr r2,[r7,#32]
 532 006e B2FBF3F3 	 udiv r3,r2,r3
 533 0072 BB61     	 str r3,[r7,#24]
 211:../Libraries/XMCLib/src/xmc_usic.c ****     actual_rate_lower = peripheral_clock / ((divider_step + 1) * oversampling * pdiv);
 534              	 .loc 2 211 0
 535 0074 FB6A     	 ldr r3,[r7,#44]
 536 0076 0133     	 adds r3,r3,#1
 537 0078 7A68     	 ldr r2,[r7,#4]
 538 007a 02FB03F3 	 mul r3,r2,r3
 539 007e 7A6A     	 ldr r2,[r7,#36]
 540 0080 02FB03F3 	 mul r3,r2,r3
 541 0084 3A6A     	 ldr r2,[r7,#32]
 542 0086 B2FBF3F3 	 udiv r3,r2,r3
 543 008a 7B61     	 str r3,[r7,#20]
 212:../Libraries/XMCLib/src/xmc_usic.c **** 
 213:../Libraries/XMCLib/src/xmc_usic.c ****     // choose better approximation if the peripheral frequency is not a multiple of the baudrate
 214:../Libraries/XMCLib/src/xmc_usic.c ****     if (abs(rate - actual_rate_lower) < abs(rate - actual_rate_upper))
 544              	 .loc 2 214 0
 545 008c BA68     	 ldr r2,[r7,#8]
 546 008e 7B69     	 ldr r3,[r7,#20]
 547 0090 D31A     	 subs r3,r2,r3
 548 0092 83EAE372 	 eor r2,r3,r3,asr#31
 549 0096 A2EBE372 	 sub r2,r2,r3,asr#31
 550 009a B968     	 ldr r1,[r7,#8]
 551 009c BB69     	 ldr r3,[r7,#24]
 552 009e CB1A     	 subs r3,r1,r3
 553 00a0 002B     	 cmp r3,#0
 554 00a2 B8BF     	 it lt
 555 00a4 5B42     	 rsblt r3,r3,#0
 556 00a6 9A42     	 cmp r2,r3
 557 00a8 02DA     	 bge .L27
 215:../Libraries/XMCLib/src/xmc_usic.c ****     {
 216:../Libraries/XMCLib/src/xmc_usic.c ****       divider_step += 1;
 558              	 .loc 2 216 0
 559 00aa FB6A     	 ldr r3,[r7,#44]
 560 00ac 0133     	 adds r3,r3,#1
 561 00ae FB62     	 str r3,[r7,#44]
 562              	.L27:
 217:../Libraries/XMCLib/src/xmc_usic.c ****     }
 218:../Libraries/XMCLib/src/xmc_usic.c **** 
 219:../Libraries/XMCLib/src/xmc_usic.c ****     divider_step = 1024 - divider_step;
 563              	 .loc 2 219 0
 564 00b0 FB6A     	 ldr r3,[r7,#44]
 565 00b2 C3F58063 	 rsb r3,r3,#1024
 566 00b6 FB62     	 str r3,[r7,#44]
 220:../Libraries/XMCLib/src/xmc_usic.c **** 
 221:../Libraries/XMCLib/src/xmc_usic.c **** 
 222:../Libraries/XMCLib/src/xmc_usic.c ****     channel->FDR = XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_NORMAL |
 567              	 .loc 2 222 0
 568 00b8 FB6A     	 ldr r3,[r7,#44]
 569 00ba 43F48042 	 orr r2,r3,#16384
 570 00be FB68     	 ldr r3,[r7,#12]
 571 00c0 1A61     	 str r2,[r3,#16]
 223:../Libraries/XMCLib/src/xmc_usic.c ****                    (divider_step << USIC_CH_FDR_STEP_Pos);
 224:../Libraries/XMCLib/src/xmc_usic.c **** 
 225:../Libraries/XMCLib/src/xmc_usic.c ****     channel->BRG = (channel->BRG & ~(USIC_CH_BRG_DCTQ_Msk |
 572              	 .loc 2 225 0
 573 00c2 FB68     	 ldr r3,[r7,#12]
 574 00c4 5A69     	 ldr r2,[r3,#20]
 575 00c6 0C4B     	 ldr r3,.L30
 576 00c8 1340     	 ands r3,r3,r2
 226:../Libraries/XMCLib/src/xmc_usic.c ****                                      USIC_CH_BRG_PDIV_Msk |
 227:../Libraries/XMCLib/src/xmc_usic.c ****                                      USIC_CH_BRG_PCTQ_Msk |
 228:../Libraries/XMCLib/src/xmc_usic.c ****                                      USIC_CH_BRG_PPPEN_Msk)) |
 229:../Libraries/XMCLib/src/xmc_usic.c ****                    ((oversampling - 1U) << USIC_CH_BRG_DCTQ_Pos) |
 577              	 .loc 2 229 0
 578 00ca 7A68     	 ldr r2,[r7,#4]
 579 00cc 013A     	 subs r2,r2,#1
 580 00ce 9202     	 lsls r2,r2,#10
 228:../Libraries/XMCLib/src/xmc_usic.c ****                    ((oversampling - 1U) << USIC_CH_BRG_DCTQ_Pos) |
 581              	 .loc 2 228 0
 582 00d0 1A43     	 orrs r2,r2,r3
 230:../Libraries/XMCLib/src/xmc_usic.c **** 				   ((pdiv -1) << USIC_CH_BRG_PDIV_Pos);
 583              	 .loc 2 230 0
 584 00d2 7B6A     	 ldr r3,[r7,#36]
 585 00d4 013B     	 subs r3,r3,#1
 586 00d6 1B04     	 lsls r3,r3,#16
 229:../Libraries/XMCLib/src/xmc_usic.c **** 				   ((pdiv -1) << USIC_CH_BRG_PDIV_Pos);
 587              	 .loc 2 229 0
 588 00d8 1A43     	 orrs r2,r2,r3
 225:../Libraries/XMCLib/src/xmc_usic.c ****                                      USIC_CH_BRG_PDIV_Msk |
 589              	 .loc 2 225 0
 590 00da FB68     	 ldr r3,[r7,#12]
 591 00dc 5A61     	 str r2,[r3,#20]
 231:../Libraries/XMCLib/src/xmc_usic.c **** 
 232:../Libraries/XMCLib/src/xmc_usic.c ****     status = XMC_USIC_CH_STATUS_OK;
 592              	 .loc 2 232 0
 593 00de 0023     	 movs r3,#0
 594 00e0 87F82B30 	 strb r3,[r7,#43]
 595 00e4 02E0     	 b .L28
 596              	.L24:
 233:../Libraries/XMCLib/src/xmc_usic.c ****   }
 234:../Libraries/XMCLib/src/xmc_usic.c ****   else
 235:../Libraries/XMCLib/src/xmc_usic.c ****   {
 236:../Libraries/XMCLib/src/xmc_usic.c ****     status = XMC_USIC_CH_STATUS_ERROR;
 597              	 .loc 2 236 0
 598 00e6 0123     	 movs r3,#1
 599 00e8 87F82B30 	 strb r3,[r7,#43]
 600              	.L28:
 237:../Libraries/XMCLib/src/xmc_usic.c ****   }
 238:../Libraries/XMCLib/src/xmc_usic.c **** 
 239:../Libraries/XMCLib/src/xmc_usic.c ****   return status;
 601              	 .loc 2 239 0
 602 00ec 97F82B30 	 ldrb r3,[r7,#43]
 240:../Libraries/XMCLib/src/xmc_usic.c **** }
 603              	 .loc 2 240 0
 604 00f0 1846     	 mov r0,r3
 605 00f2 3037     	 adds r7,r7,#48
 606              	.LCFI31:
 607              	 .cfi_def_cfa_offset 8
 608 00f4 BD46     	 mov sp,r7
 609              	.LCFI32:
 610              	 .cfi_def_cfa_register 13
 611              	 
 612 00f6 80BD     	 pop {r7,pc}
 613              	.L31:
 614              	 .align 2
 615              	.L30:
 616 00f8 EF8000FC 	 .word -67075857
 617              	 .cfi_endproc
 618              	.LFE238:
 620              	 .section .text.XMC_USIC_CH_GetBaudrate,"ax",%progbits
 621              	 .align 2
 622              	 .global XMC_USIC_CH_GetBaudrate
 623              	 .thumb
 624              	 .thumb_func
 626              	XMC_USIC_CH_GetBaudrate:
 627              	.LFB239:
 241:../Libraries/XMCLib/src/xmc_usic.c **** 
 242:../Libraries/XMCLib/src/xmc_usic.c **** uint32_t XMC_USIC_CH_GetBaudrate(XMC_USIC_CH_t *const channel)
 243:../Libraries/XMCLib/src/xmc_usic.c **** {
 628              	 .loc 2 243 0
 629              	 .cfi_startproc
 630              	 
 631              	 
 632 0000 80B5     	 push {r7,lr}
 633              	.LCFI33:
 634              	 .cfi_def_cfa_offset 8
 635              	 .cfi_offset 7,-8
 636              	 .cfi_offset 14,-4
 637 0002 86B0     	 sub sp,sp,#24
 638              	.LCFI34:
 639              	 .cfi_def_cfa_offset 32
 640 0004 00AF     	 add r7,sp,#0
 641              	.LCFI35:
 642              	 .cfi_def_cfa_register 7
 643 0006 7860     	 str r0,[r7,#4]
 244:../Libraries/XMCLib/src/xmc_usic.c ****   uint32_t divider;
 245:../Libraries/XMCLib/src/xmc_usic.c ****   if ((channel->BRG & USIC_CH_BRG_CTQSEL_Msk) == USIC_CH_BRG_CTQSEL_Msk)
 644              	 .loc 2 245 0
 645 0008 7B68     	 ldr r3,[r7,#4]
 646 000a 5B69     	 ldr r3,[r3,#20]
 647 000c 03F0C003 	 and r3,r3,#192
 648 0010 C02B     	 cmp r3,#192
 649 0012 02D1     	 bne .L33
 246:../Libraries/XMCLib/src/xmc_usic.c ****   {
 247:../Libraries/XMCLib/src/xmc_usic.c **** 	// CTQSEL = 3
 248:../Libraries/XMCLib/src/xmc_usic.c ****     divider = 2;
 650              	 .loc 2 248 0
 651 0014 0223     	 movs r3,#2
 652 0016 7B61     	 str r3,[r7,#20]
 653 0018 22E0     	 b .L34
 654              	.L33:
 249:../Libraries/XMCLib/src/xmc_usic.c ****   }
 250:../Libraries/XMCLib/src/xmc_usic.c ****   else
 251:../Libraries/XMCLib/src/xmc_usic.c ****   {
 252:../Libraries/XMCLib/src/xmc_usic.c **** 	// CTQSEL = 0, 1, or 2
 253:../Libraries/XMCLib/src/xmc_usic.c ****     divider = (channel->BRG & USIC_CH_BRG_PPPEN_Msk) ? 2 : 1;
 655              	 .loc 2 253 0
 656 001a 7B68     	 ldr r3,[r7,#4]
 657 001c 5B69     	 ldr r3,[r3,#20]
 658 001e 03F01003 	 and r3,r3,#16
 659 0022 002B     	 cmp r3,#0
 660 0024 01D0     	 beq .L35
 661              	 .loc 2 253 0 is_stmt 0 discriminator 1
 662 0026 0223     	 movs r3,#2
 663 0028 00E0     	 b .L36
 664              	.L35:
 665              	 .loc 2 253 0 discriminator 2
 666 002a 0123     	 movs r3,#1
 667              	.L36:
 668              	 .loc 2 253 0 discriminator 4
 669 002c 7B61     	 str r3,[r7,#20]
 254:../Libraries/XMCLib/src/xmc_usic.c ****   
 255:../Libraries/XMCLib/src/xmc_usic.c ****     if ((((channel->BRG & USIC_CH_BRG_CTQSEL_Msk) >> USIC_CH_BRG_CTQSEL_Pos) & 0x1) == 0)
 670              	 .loc 2 255 0 is_stmt 1 discriminator 4
 671 002e 7B68     	 ldr r3,[r7,#4]
 672 0030 5B69     	 ldr r3,[r3,#20]
 673 0032 03F04003 	 and r3,r3,#64
 674 0036 002B     	 cmp r3,#0
 675 0038 12D1     	 bne .L34
 256:../Libraries/XMCLib/src/xmc_usic.c ****     {
 257:../Libraries/XMCLib/src/xmc_usic.c **** 	  // CTQSEL = 0 or 2
 258:../Libraries/XMCLib/src/xmc_usic.c ****       divider *= ((channel->BRG & USIC_CH_BRG_PDIV_Msk) >> USIC_CH_BRG_PDIV_Pos) + 1;
 676              	 .loc 2 258 0
 677 003a 7B68     	 ldr r3,[r7,#4]
 678 003c 5A69     	 ldr r2,[r3,#20]
 679 003e 384B     	 ldr r3,.L40
 680 0040 1340     	 ands r3,r3,r2
 681 0042 1B0C     	 lsrs r3,r3,#16
 682 0044 5A1C     	 adds r2,r3,#1
 683 0046 7B69     	 ldr r3,[r7,#20]
 684 0048 02FB03F3 	 mul r3,r2,r3
 685 004c 7B61     	 str r3,[r7,#20]
 259:../Libraries/XMCLib/src/xmc_usic.c ****       if ((((channel->BRG & USIC_CH_BRG_CTQSEL_Msk) >> USIC_CH_BRG_CTQSEL_Pos) & 0x2) != 0)
 686              	 .loc 2 259 0
 687 004e 7B68     	 ldr r3,[r7,#4]
 688 0050 5B69     	 ldr r3,[r3,#20]
 689 0052 03F08003 	 and r3,r3,#128
 690 0056 002B     	 cmp r3,#0
 691 0058 02D0     	 beq .L34
 260:../Libraries/XMCLib/src/xmc_usic.c ****       {
 261:../Libraries/XMCLib/src/xmc_usic.c ****         // CTQSEL = 2
 262:../Libraries/XMCLib/src/xmc_usic.c ****         divider *= 2;
 692              	 .loc 2 262 0
 693 005a 7B69     	 ldr r3,[r7,#20]
 694 005c 5B00     	 lsls r3,r3,#1
 695 005e 7B61     	 str r3,[r7,#20]
 696              	.L34:
 263:../Libraries/XMCLib/src/xmc_usic.c ****       }
 264:../Libraries/XMCLib/src/xmc_usic.c ****     }
 265:../Libraries/XMCLib/src/xmc_usic.c ****   }
 266:../Libraries/XMCLib/src/xmc_usic.c **** 
 267:../Libraries/XMCLib/src/xmc_usic.c ****   divider *= ((channel->BRG & USIC_CH_BRG_PCTQ_Msk) >> USIC_CH_BRG_PCTQ_Pos) + 1;
 697              	 .loc 2 267 0
 698 0060 7B68     	 ldr r3,[r7,#4]
 699 0062 5B69     	 ldr r3,[r3,#20]
 700 0064 03F44073 	 and r3,r3,#768
 701 0068 1B0A     	 lsrs r3,r3,#8
 702 006a 5A1C     	 adds r2,r3,#1
 703 006c 7B69     	 ldr r3,[r7,#20]
 704 006e 02FB03F3 	 mul r3,r2,r3
 705 0072 7B61     	 str r3,[r7,#20]
 268:../Libraries/XMCLib/src/xmc_usic.c ****   divider *= ((channel->BRG & USIC_CH_BRG_DCTQ_Msk) >> USIC_CH_BRG_DCTQ_Pos) + 1;
 706              	 .loc 2 268 0
 707 0074 7B68     	 ldr r3,[r7,#4]
 708 0076 5B69     	 ldr r3,[r3,#20]
 709 0078 03F4F843 	 and r3,r3,#31744
 710 007c 9B0A     	 lsrs r3,r3,#10
 711 007e 5A1C     	 adds r2,r3,#1
 712 0080 7B69     	 ldr r3,[r7,#20]
 713 0082 02FB03F3 	 mul r3,r2,r3
 714 0086 7B61     	 str r3,[r7,#20]
 269:../Libraries/XMCLib/src/xmc_usic.c **** 
 270:../Libraries/XMCLib/src/xmc_usic.c ****   uint32_t fperi = XMC_SCU_CLOCK_GetPeripheralClockFrequency();
 715              	 .loc 2 270 0
 716 0088 FFF7FEFF 	 bl XMC_SCU_CLOCK_GetPeripheralClockFrequency
 717 008c F860     	 str r0,[r7,#12]
 271:../Libraries/XMCLib/src/xmc_usic.c ****   float baudrate;
 272:../Libraries/XMCLib/src/xmc_usic.c ****   if ((channel->FDR & USIC_CH_FDR_DM_Msk) == XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_FRACTIONAL)
 718              	 .loc 2 272 0
 719 008e 7B68     	 ldr r3,[r7,#4]
 720 0090 1B69     	 ldr r3,[r3,#16]
 721 0092 03F44043 	 and r3,r3,#49152
 722 0096 B3F5004F 	 cmp r3,#32768
 723 009a 15D1     	 bne .L37
 273:../Libraries/XMCLib/src/xmc_usic.c ****   {
 274:../Libraries/XMCLib/src/xmc_usic.c **** 	baudrate = fperi * (((channel->FDR & USIC_CH_FDR_STEP_Msk) >> USIC_CH_FDR_STEP_Pos) / 1024.0F);
 724              	 .loc 2 274 0
 725 009c FB68     	 ldr r3,[r7,#12]
 726 009e 07EE903A 	 fmsr s15,r3
 727 00a2 B8EE677A 	 fuitos s14,s15
 728 00a6 7B68     	 ldr r3,[r7,#4]
 729 00a8 1B69     	 ldr r3,[r3,#16]
 730 00aa C3F30903 	 ubfx r3,r3,#0,#10
 731 00ae 07EE903A 	 fmsr s15,r3
 732 00b2 F8EE677A 	 fuitos s15,s15
 733 00b6 DFED1B6A 	 flds s13,.L40+4
 734 00ba C7EEA67A 	 fdivs s15,s15,s13
 735 00be 67EE277A 	 fmuls s15,s14,s15
 736 00c2 C7ED047A 	 fsts s15,[r7,#16]
 737 00c6 16E0     	 b .L38
 738              	.L37:
 275:../Libraries/XMCLib/src/xmc_usic.c ****   }
 276:../Libraries/XMCLib/src/xmc_usic.c ****   else
 277:../Libraries/XMCLib/src/xmc_usic.c ****   {
 278:../Libraries/XMCLib/src/xmc_usic.c ****     /* Normal divider mode */
 279:../Libraries/XMCLib/src/xmc_usic.c ****     baudrate = fperi * (1.0F / (1024 - ((channel->FDR & USIC_CH_FDR_STEP_Msk) >> USIC_CH_FDR_STEP_P
 739              	 .loc 2 279 0
 740 00c8 FB68     	 ldr r3,[r7,#12]
 741 00ca 07EE903A 	 fmsr s15,r3
 742 00ce B8EE677A 	 fuitos s14,s15
 743 00d2 7B68     	 ldr r3,[r7,#4]
 744 00d4 1B69     	 ldr r3,[r3,#16]
 745 00d6 C3F30903 	 ubfx r3,r3,#0,#10
 746 00da C3F58063 	 rsb r3,r3,#1024
 747 00de 07EE903A 	 fmsr s15,r3
 748 00e2 F8EE677A 	 fuitos s15,s15
 749 00e6 F7EE006A 	 fconsts s13,#112
 750 00ea C6EEA77A 	 fdivs s15,s13,s15
 751 00ee 67EE277A 	 fmuls s15,s14,s15
 752 00f2 C7ED047A 	 fsts s15,[r7,#16]
 753              	.L38:
 280:../Libraries/XMCLib/src/xmc_usic.c ****   }
 281:../Libraries/XMCLib/src/xmc_usic.c **** 
 282:../Libraries/XMCLib/src/xmc_usic.c ****   baudrate /= divider;
 754              	 .loc 2 282 0
 755 00f6 7B69     	 ldr r3,[r7,#20]
 756 00f8 07EE903A 	 fmsr s15,r3
 757 00fc F8EE677A 	 fuitos s15,s15
 758 0100 97ED047A 	 flds s14,[r7,#16]
 759 0104 C7EE277A 	 fdivs s15,s14,s15
 760 0108 C7ED047A 	 fsts s15,[r7,#16]
 283:../Libraries/XMCLib/src/xmc_usic.c **** 
 284:../Libraries/XMCLib/src/xmc_usic.c ****   return baudrate;
 761              	 .loc 2 284 0
 762 010c D7ED047A 	 flds s15,[r7,#16]
 763 0110 FCEEE77A 	 ftouizs s15,s15
 764 0114 17EE903A 	 fmrs r3,s15
 285:../Libraries/XMCLib/src/xmc_usic.c **** }
 765              	 .loc 2 285 0
 766 0118 1846     	 mov r0,r3
 767 011a 1837     	 adds r7,r7,#24
 768              	.LCFI36:
 769              	 .cfi_def_cfa_offset 8
 770 011c BD46     	 mov sp,r7
 771              	.LCFI37:
 772              	 .cfi_def_cfa_register 13
 773              	 
 774 011e 80BD     	 pop {r7,pc}
 775              	.L41:
 776              	 .align 2
 777              	.L40:
 778 0120 0000FF03 	 .word 67043328
 779 0124 00008044 	 .word 1149239296
 780              	 .cfi_endproc
 781              	.LFE239:
 783              	 .section .text.XMC_USIC_CH_GetSCLKFrequency,"ax",%progbits
 784              	 .align 2
 785              	 .global XMC_USIC_CH_GetSCLKFrequency
 786              	 .thumb
 787              	 .thumb_func
 789              	XMC_USIC_CH_GetSCLKFrequency:
 790              	.LFB240:
 286:../Libraries/XMCLib/src/xmc_usic.c **** 
 287:../Libraries/XMCLib/src/xmc_usic.c **** uint32_t XMC_USIC_CH_GetSCLKFrequency(XMC_USIC_CH_t *const channel)
 288:../Libraries/XMCLib/src/xmc_usic.c **** {
 791              	 .loc 2 288 0
 792              	 .cfi_startproc
 793              	 
 794              	 
 795 0000 80B5     	 push {r7,lr}
 796              	.LCFI38:
 797              	 .cfi_def_cfa_offset 8
 798              	 .cfi_offset 7,-8
 799              	 .cfi_offset 14,-4
 800 0002 86B0     	 sub sp,sp,#24
 801              	.LCFI39:
 802              	 .cfi_def_cfa_offset 32
 803 0004 00AF     	 add r7,sp,#0
 804              	.LCFI40:
 805              	 .cfi_def_cfa_register 7
 806 0006 7860     	 str r0,[r7,#4]
 289:../Libraries/XMCLib/src/xmc_usic.c ****   uint32_t divider;
 290:../Libraries/XMCLib/src/xmc_usic.c ****   divider = (channel->BRG & USIC_CH_BRG_PPPEN_Msk) ? 2 : 1;
 807              	 .loc 2 290 0
 808 0008 7B68     	 ldr r3,[r7,#4]
 809 000a 5B69     	 ldr r3,[r3,#20]
 810 000c 03F01003 	 and r3,r3,#16
 811 0010 002B     	 cmp r3,#0
 812 0012 01D0     	 beq .L43
 813              	 .loc 2 290 0 is_stmt 0 discriminator 1
 814 0014 0223     	 movs r3,#2
 815 0016 00E0     	 b .L44
 816              	.L43:
 817              	 .loc 2 290 0 discriminator 2
 818 0018 0123     	 movs r3,#1
 819              	.L44:
 820              	 .loc 2 290 0 discriminator 4
 821 001a 3B61     	 str r3,[r7,#16]
 291:../Libraries/XMCLib/src/xmc_usic.c ****   divider *= ((channel->BRG & USIC_CH_BRG_PDIV_Msk) >> USIC_CH_BRG_PDIV_Pos) + 1;
 822              	 .loc 2 291 0 is_stmt 1 discriminator 4
 823 001c 7B68     	 ldr r3,[r7,#4]
 824 001e 5A69     	 ldr r2,[r3,#20]
 825 0020 2B4B     	 ldr r3,.L48
 826 0022 1340     	 ands r3,r3,r2
 827 0024 1B0C     	 lsrs r3,r3,#16
 828 0026 5A1C     	 adds r2,r3,#1
 829 0028 3B69     	 ldr r3,[r7,#16]
 830 002a 02FB03F3 	 mul r3,r2,r3
 831 002e 3B61     	 str r3,[r7,#16]
 292:../Libraries/XMCLib/src/xmc_usic.c ****   divider *= 2;
 832              	 .loc 2 292 0 discriminator 4
 833 0030 3B69     	 ldr r3,[r7,#16]
 834 0032 5B00     	 lsls r3,r3,#1
 835 0034 3B61     	 str r3,[r7,#16]
 293:../Libraries/XMCLib/src/xmc_usic.c **** 
 294:../Libraries/XMCLib/src/xmc_usic.c ****   uint32_t fperi = XMC_SCU_CLOCK_GetPeripheralClockFrequency();
 836              	 .loc 2 294 0 discriminator 4
 837 0036 FFF7FEFF 	 bl XMC_SCU_CLOCK_GetPeripheralClockFrequency
 838 003a F860     	 str r0,[r7,#12]
 295:../Libraries/XMCLib/src/xmc_usic.c ****   float baudrate;
 296:../Libraries/XMCLib/src/xmc_usic.c ****   if ((channel->FDR & USIC_CH_FDR_DM_Msk) == XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_FRACTIONAL)
 839              	 .loc 2 296 0 discriminator 4
 840 003c 7B68     	 ldr r3,[r7,#4]
 841 003e 1B69     	 ldr r3,[r3,#16]
 842 0040 03F44043 	 and r3,r3,#49152
 843 0044 B3F5004F 	 cmp r3,#32768
 844 0048 15D1     	 bne .L45
 297:../Libraries/XMCLib/src/xmc_usic.c ****   {
 298:../Libraries/XMCLib/src/xmc_usic.c ****     /* Fractional divider mode */
 299:../Libraries/XMCLib/src/xmc_usic.c ****     baudrate = fperi * (((channel->FDR & USIC_CH_FDR_STEP_Msk) >> USIC_CH_FDR_STEP_Pos) / 1024.0F);
 845              	 .loc 2 299 0
 846 004a FB68     	 ldr r3,[r7,#12]
 847 004c 07EE903A 	 fmsr s15,r3
 848 0050 B8EE677A 	 fuitos s14,s15
 849 0054 7B68     	 ldr r3,[r7,#4]
 850 0056 1B69     	 ldr r3,[r3,#16]
 851 0058 C3F30903 	 ubfx r3,r3,#0,#10
 852 005c 07EE903A 	 fmsr s15,r3
 853 0060 F8EE677A 	 fuitos s15,s15
 854 0064 DFED1B6A 	 flds s13,.L48+4
 855 0068 C7EEA67A 	 fdivs s15,s15,s13
 856 006c 67EE277A 	 fmuls s15,s14,s15
 857 0070 C7ED057A 	 fsts s15,[r7,#20]
 858 0074 16E0     	 b .L46
 859              	.L45:
 300:../Libraries/XMCLib/src/xmc_usic.c ****   }
 301:../Libraries/XMCLib/src/xmc_usic.c ****   else
 302:../Libraries/XMCLib/src/xmc_usic.c ****   {
 303:../Libraries/XMCLib/src/xmc_usic.c ****     /* Normal divider mode */
 304:../Libraries/XMCLib/src/xmc_usic.c ****     baudrate = fperi * (1.0F / (1024 - ((channel->FDR & USIC_CH_FDR_STEP_Msk) >> USIC_CH_FDR_STEP_P
 860              	 .loc 2 304 0
 861 0076 FB68     	 ldr r3,[r7,#12]
 862 0078 07EE903A 	 fmsr s15,r3
 863 007c B8EE677A 	 fuitos s14,s15
 864 0080 7B68     	 ldr r3,[r7,#4]
 865 0082 1B69     	 ldr r3,[r3,#16]
 866 0084 C3F30903 	 ubfx r3,r3,#0,#10
 867 0088 C3F58063 	 rsb r3,r3,#1024
 868 008c 07EE903A 	 fmsr s15,r3
 869 0090 F8EE677A 	 fuitos s15,s15
 870 0094 F7EE006A 	 fconsts s13,#112
 871 0098 C6EEA77A 	 fdivs s15,s13,s15
 872 009c 67EE277A 	 fmuls s15,s14,s15
 873 00a0 C7ED057A 	 fsts s15,[r7,#20]
 874              	.L46:
 305:../Libraries/XMCLib/src/xmc_usic.c ****   }
 306:../Libraries/XMCLib/src/xmc_usic.c **** 
 307:../Libraries/XMCLib/src/xmc_usic.c ****   baudrate /= divider;
 875              	 .loc 2 307 0
 876 00a4 3B69     	 ldr r3,[r7,#16]
 877 00a6 07EE903A 	 fmsr s15,r3
 878 00aa F8EE677A 	 fuitos s15,s15
 879 00ae 97ED057A 	 flds s14,[r7,#20]
 880 00b2 C7EE277A 	 fdivs s15,s14,s15
 881 00b6 C7ED057A 	 fsts s15,[r7,#20]
 308:../Libraries/XMCLib/src/xmc_usic.c **** 
 309:../Libraries/XMCLib/src/xmc_usic.c ****   return baudrate;
 882              	 .loc 2 309 0
 883 00ba D7ED057A 	 flds s15,[r7,#20]
 884 00be FCEEE77A 	 ftouizs s15,s15
 885 00c2 17EE903A 	 fmrs r3,s15
 310:../Libraries/XMCLib/src/xmc_usic.c **** }
 886              	 .loc 2 310 0
 887 00c6 1846     	 mov r0,r3
 888 00c8 1837     	 adds r7,r7,#24
 889              	.LCFI41:
 890              	 .cfi_def_cfa_offset 8
 891 00ca BD46     	 mov sp,r7
 892              	.LCFI42:
 893              	 .cfi_def_cfa_register 13
 894              	 
 895 00cc 80BD     	 pop {r7,pc}
 896              	.L49:
 897 00ce 00BF     	 .align 2
 898              	.L48:
 899 00d0 0000FF03 	 .word 67043328
 900 00d4 00008044 	 .word 1149239296
 901              	 .cfi_endproc
 902              	.LFE240:
 904              	 .section .text.XMC_USIC_CH_GetMCLKFrequency,"ax",%progbits
 905              	 .align 2
 906              	 .global XMC_USIC_CH_GetMCLKFrequency
 907              	 .thumb
 908              	 .thumb_func
 910              	XMC_USIC_CH_GetMCLKFrequency:
 911              	.LFB241:
 311:../Libraries/XMCLib/src/xmc_usic.c **** 
 312:../Libraries/XMCLib/src/xmc_usic.c **** uint32_t XMC_USIC_CH_GetMCLKFrequency(XMC_USIC_CH_t *const channel)
 313:../Libraries/XMCLib/src/xmc_usic.c **** {
 912              	 .loc 2 313 0
 913              	 .cfi_startproc
 914              	 
 915              	 
 916 0000 80B5     	 push {r7,lr}
 917              	.LCFI43:
 918              	 .cfi_def_cfa_offset 8
 919              	 .cfi_offset 7,-8
 920              	 .cfi_offset 14,-4
 921 0002 84B0     	 sub sp,sp,#16
 922              	.LCFI44:
 923              	 .cfi_def_cfa_offset 24
 924 0004 00AF     	 add r7,sp,#0
 925              	.LCFI45:
 926              	 .cfi_def_cfa_register 7
 927 0006 7860     	 str r0,[r7,#4]
 314:../Libraries/XMCLib/src/xmc_usic.c ****   uint32_t fperi = XMC_SCU_CLOCK_GetPeripheralClockFrequency();
 928              	 .loc 2 314 0
 929 0008 FFF7FEFF 	 bl XMC_SCU_CLOCK_GetPeripheralClockFrequency
 930 000c B860     	 str r0,[r7,#8]
 315:../Libraries/XMCLib/src/xmc_usic.c **** 
 316:../Libraries/XMCLib/src/xmc_usic.c ****   float baudrate;
 317:../Libraries/XMCLib/src/xmc_usic.c ****   if ((channel->FDR & USIC_CH_FDR_DM_Msk) == XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_FRACTIONAL)
 931              	 .loc 2 317 0
 932 000e 7B68     	 ldr r3,[r7,#4]
 933 0010 1B69     	 ldr r3,[r3,#16]
 934 0012 03F44043 	 and r3,r3,#49152
 935 0016 B3F5004F 	 cmp r3,#32768
 936 001a 17D1     	 bne .L51
 318:../Libraries/XMCLib/src/xmc_usic.c ****   {
 319:../Libraries/XMCLib/src/xmc_usic.c ****     /* Fractional divider mode */
 320:../Libraries/XMCLib/src/xmc_usic.c ****     baudrate = fperi * (1.0F / (1024 - ((channel->FDR & USIC_CH_FDR_STEP_Msk) >> USIC_CH_FDR_STEP_P
 937              	 .loc 2 320 0
 938 001c BB68     	 ldr r3,[r7,#8]
 939 001e 07EE903A 	 fmsr s15,r3
 940 0022 B8EE677A 	 fuitos s14,s15
 941 0026 7B68     	 ldr r3,[r7,#4]
 942 0028 1B69     	 ldr r3,[r3,#16]
 943 002a C3F30903 	 ubfx r3,r3,#0,#10
 944 002e C3F58063 	 rsb r3,r3,#1024
 945 0032 07EE903A 	 fmsr s15,r3
 946 0036 F8EE677A 	 fuitos s15,s15
 947 003a F7EE006A 	 fconsts s13,#112
 948 003e C6EEA77A 	 fdivs s15,s13,s15
 949 0042 67EE277A 	 fmuls s15,s14,s15
 950 0046 C7ED037A 	 fsts s15,[r7,#12]
 951 004a 14E0     	 b .L52
 952              	.L51:
 321:../Libraries/XMCLib/src/xmc_usic.c ****   }
 322:../Libraries/XMCLib/src/xmc_usic.c ****   else
 323:../Libraries/XMCLib/src/xmc_usic.c ****   {
 324:../Libraries/XMCLib/src/xmc_usic.c ****     /* Normal divider mode */
 325:../Libraries/XMCLib/src/xmc_usic.c ****     baudrate = fperi / (((channel->FDR & USIC_CH_FDR_STEP_Msk) >> USIC_CH_FDR_STEP_Pos) / 1024.0F);
 953              	 .loc 2 325 0
 954 004c BB68     	 ldr r3,[r7,#8]
 955 004e 07EE903A 	 fmsr s15,r3
 956 0052 B8EE677A 	 fuitos s14,s15
 957 0056 7B68     	 ldr r3,[r7,#4]
 958 0058 1B69     	 ldr r3,[r3,#16]
 959 005a C3F30903 	 ubfx r3,r3,#0,#10
 960 005e 07EE903A 	 fmsr s15,r3
 961 0062 F8EE677A 	 fuitos s15,s15
 962 0066 DFED0D6A 	 flds s13,.L54
 963 006a C7EEA67A 	 fdivs s15,s15,s13
 964 006e C7EE277A 	 fdivs s15,s14,s15
 965 0072 C7ED037A 	 fsts s15,[r7,#12]
 966              	.L52:
 326:../Libraries/XMCLib/src/xmc_usic.c ****   }
 327:../Libraries/XMCLib/src/xmc_usic.c **** 
 328:../Libraries/XMCLib/src/xmc_usic.c ****   baudrate /= 2;
 967              	 .loc 2 328 0
 968 0076 D7ED037A 	 flds s15,[r7,#12]
 969 007a B0EE007A 	 fconsts s14,#0
 970 007e C7EE877A 	 fdivs s15,s15,s14
 971 0082 C7ED037A 	 fsts s15,[r7,#12]
 329:../Libraries/XMCLib/src/xmc_usic.c **** 
 330:../Libraries/XMCLib/src/xmc_usic.c ****   return baudrate;
 972              	 .loc 2 330 0
 973 0086 D7ED037A 	 flds s15,[r7,#12]
 974 008a FCEEE77A 	 ftouizs s15,s15
 975 008e 17EE903A 	 fmrs r3,s15
 331:../Libraries/XMCLib/src/xmc_usic.c **** }
 976              	 .loc 2 331 0
 977 0092 1846     	 mov r0,r3
 978 0094 1037     	 adds r7,r7,#16
 979              	.LCFI46:
 980              	 .cfi_def_cfa_offset 8
 981 0096 BD46     	 mov sp,r7
 982              	.LCFI47:
 983              	 .cfi_def_cfa_register 13
 984              	 
 985 0098 80BD     	 pop {r7,pc}
 986              	.L55:
 987 009a 00BF     	 .align 2
 988              	.L54:
 989 009c 00008044 	 .word 1149239296
 990              	 .cfi_endproc
 991              	.LFE241:
 993              	 .section .text.XMC_USIC_CH_ConfigExternalInputSignalToBRG,"ax",%progbits
 994              	 .align 2
 995              	 .global XMC_USIC_CH_ConfigExternalInputSignalToBRG
 996              	 .thumb
 997              	 .thumb_func
 999              	XMC_USIC_CH_ConfigExternalInputSignalToBRG:
 1000              	.LFB242:
 332:../Libraries/XMCLib/src/xmc_usic.c **** 
 333:../Libraries/XMCLib/src/xmc_usic.c **** 
 334:../Libraries/XMCLib/src/xmc_usic.c **** void XMC_USIC_CH_ConfigExternalInputSignalToBRG(XMC_USIC_CH_t *const channel,
 335:../Libraries/XMCLib/src/xmc_usic.c **** 		                                        const uint16_t pdiv,
 336:../Libraries/XMCLib/src/xmc_usic.c **** 												const uint32_t oversampling,
 337:../Libraries/XMCLib/src/xmc_usic.c **** 												const XMC_USIC_CH_INPUT_COMBINATION_MODE_t combination_mode)
 338:../Libraries/XMCLib/src/xmc_usic.c **** {
 1001              	 .loc 2 338 0
 1002              	 .cfi_startproc
 1003              	 
 1004              	 
 1005 0000 80B5     	 push {r7,lr}
 1006              	.LCFI48:
 1007              	 .cfi_def_cfa_offset 8
 1008              	 .cfi_offset 7,-8
 1009              	 .cfi_offset 14,-4
 1010 0002 84B0     	 sub sp,sp,#16
 1011              	.LCFI49:
 1012              	 .cfi_def_cfa_offset 24
 1013 0004 00AF     	 add r7,sp,#0
 1014              	.LCFI50:
 1015              	 .cfi_def_cfa_register 7
 1016 0006 F860     	 str r0,[r7,#12]
 1017 0008 7A60     	 str r2,[r7,#4]
 1018 000a 1A46     	 mov r2,r3
 1019 000c 0B46     	 mov r3,r1
 1020 000e 7B81     	 strh r3,[r7,#10]
 1021 0010 1346     	 mov r3,r2
 1022 0012 7B72     	 strb r3,[r7,#9]
 339:../Libraries/XMCLib/src/xmc_usic.c ****   XMC_ASSERT("XMC_USIC_CH_ConfigExternalInputSignalToBRG: Divider out of range", ((1U < pdiv) || (p
 340:../Libraries/XMCLib/src/xmc_usic.c ****   XMC_ASSERT("XMC_USIC_CH_ConfigExternalInputSignalToBRG: Oversampling out of range", ((1U < oversa
 341:../Libraries/XMCLib/src/xmc_usic.c **** 
 342:../Libraries/XMCLib/src/xmc_usic.c ****   /* Setting the external input frequency source through DX1 */
 343:../Libraries/XMCLib/src/xmc_usic.c ****   XMC_USIC_CH_SetBRGInputClockSource(channel, XMC_USIC_CH_BRG_CLOCK_SOURCE_DX1T);
 1023              	 .loc 2 343 0
 1024 0014 F868     	 ldr r0,[r7,#12]
 1025 0016 0221     	 movs r1,#2
 1026 0018 FFF7FEFF 	 bl XMC_USIC_CH_SetBRGInputClockSource
 344:../Libraries/XMCLib/src/xmc_usic.c **** 
 345:../Libraries/XMCLib/src/xmc_usic.c ****   /* Setting the trigger combination mode */
 346:../Libraries/XMCLib/src/xmc_usic.c ****   XMC_USIC_CH_SetInputTriggerCombinationMode(channel,XMC_USIC_CH_INPUT_DX1,combination_mode);
 1027              	 .loc 2 346 0
 1028 001c 7B7A     	 ldrb r3,[r7,#9]
 1029 001e F868     	 ldr r0,[r7,#12]
 1030 0020 0121     	 movs r1,#1
 1031 0022 1A46     	 mov r2,r3
 1032 0024 FFF7FEFF 	 bl XMC_USIC_CH_SetInputTriggerCombinationMode
 347:../Libraries/XMCLib/src/xmc_usic.c **** 
 348:../Libraries/XMCLib/src/xmc_usic.c ****   /* Configuring the dividers and oversampling */
 349:../Libraries/XMCLib/src/xmc_usic.c ****   channel->BRG = (channel->BRG & ~(USIC_CH_BRG_DCTQ_Msk |
 1033              	 .loc 2 349 0
 1034 0028 FB68     	 ldr r3,[r7,#12]
 1035 002a 5A69     	 ldr r2,[r3,#20]
 1036 002c 074B     	 ldr r3,.L57
 1037 002e 1340     	 ands r3,r3,r2
 350:../Libraries/XMCLib/src/xmc_usic.c ****                                    USIC_CH_BRG_PDIV_Msk |
 351:../Libraries/XMCLib/src/xmc_usic.c ****                                    USIC_CH_BRG_PCTQ_Msk |
 352:../Libraries/XMCLib/src/xmc_usic.c ****                                    USIC_CH_BRG_PPPEN_Msk)) |
 353:../Libraries/XMCLib/src/xmc_usic.c ****                   (((oversampling) - 1U) << USIC_CH_BRG_DCTQ_Pos) |
 1038              	 .loc 2 353 0
 1039 0030 7A68     	 ldr r2,[r7,#4]
 1040 0032 013A     	 subs r2,r2,#1
 1041 0034 9202     	 lsls r2,r2,#10
 352:../Libraries/XMCLib/src/xmc_usic.c ****                   (((oversampling) - 1U) << USIC_CH_BRG_DCTQ_Pos) |
 1042              	 .loc 2 352 0
 1043 0036 1A43     	 orrs r2,r2,r3
 354:../Libraries/XMCLib/src/xmc_usic.c ****                   (((pdiv) - 1U) << USIC_CH_BRG_PDIV_Pos);
 1044              	 .loc 2 354 0
 1045 0038 7B89     	 ldrh r3,[r7,#10]
 1046 003a 013B     	 subs r3,r3,#1
 1047 003c 1B04     	 lsls r3,r3,#16
 353:../Libraries/XMCLib/src/xmc_usic.c ****                   (((pdiv) - 1U) << USIC_CH_BRG_PDIV_Pos);
 1048              	 .loc 2 353 0
 1049 003e 1A43     	 orrs r2,r2,r3
 349:../Libraries/XMCLib/src/xmc_usic.c ****                                    USIC_CH_BRG_PDIV_Msk |
 1050              	 .loc 2 349 0
 1051 0040 FB68     	 ldr r3,[r7,#12]
 1052 0042 5A61     	 str r2,[r3,#20]
 355:../Libraries/XMCLib/src/xmc_usic.c **** }
 1053              	 .loc 2 355 0
 1054 0044 1037     	 adds r7,r7,#16
 1055              	.LCFI51:
 1056              	 .cfi_def_cfa_offset 8
 1057 0046 BD46     	 mov sp,r7
 1058              	.LCFI52:
 1059              	 .cfi_def_cfa_register 13
 1060              	 
 1061 0048 80BD     	 pop {r7,pc}
 1062              	.L58:
 1063 004a 00BF     	 .align 2
 1064              	.L57:
 1065 004c EF8000FC 	 .word -67075857
 1066              	 .cfi_endproc
 1067              	.LFE242:
 1069              	 .section .text.XMC_USIC_CH_TXFIFO_Configure,"ax",%progbits
 1070              	 .align 2
 1071              	 .global XMC_USIC_CH_TXFIFO_Configure
 1072              	 .thumb
 1073              	 .thumb_func
 1075              	XMC_USIC_CH_TXFIFO_Configure:
 1076              	.LFB243:
 356:../Libraries/XMCLib/src/xmc_usic.c **** 
 357:../Libraries/XMCLib/src/xmc_usic.c **** void XMC_USIC_CH_TXFIFO_Configure(XMC_USIC_CH_t *const channel,
 358:../Libraries/XMCLib/src/xmc_usic.c ****                                   const uint32_t data_pointer,
 359:../Libraries/XMCLib/src/xmc_usic.c ****                                   const XMC_USIC_CH_FIFO_SIZE_t size,
 360:../Libraries/XMCLib/src/xmc_usic.c ****                                   const uint32_t limit)
 361:../Libraries/XMCLib/src/xmc_usic.c **** {
 1077              	 .loc 2 361 0
 1078              	 .cfi_startproc
 1079              	 
 1080              	 
 1081              	 
 1082 0000 80B4     	 push {r7}
 1083              	.LCFI53:
 1084              	 .cfi_def_cfa_offset 4
 1085              	 .cfi_offset 7,-4
 1086 0002 85B0     	 sub sp,sp,#20
 1087              	.LCFI54:
 1088              	 .cfi_def_cfa_offset 24
 1089 0004 00AF     	 add r7,sp,#0
 1090              	.LCFI55:
 1091              	 .cfi_def_cfa_register 7
 1092 0006 F860     	 str r0,[r7,#12]
 1093 0008 B960     	 str r1,[r7,#8]
 1094 000a 3B60     	 str r3,[r7]
 1095 000c 1346     	 mov r3,r2
 1096 000e FB71     	 strb r3,[r7,#7]
 362:../Libraries/XMCLib/src/xmc_usic.c ****   /* Disable FIFO */
 363:../Libraries/XMCLib/src/xmc_usic.c ****   channel->TBCTR &= (uint32_t)~USIC_CH_TBCTR_SIZE_Msk;
 1097              	 .loc 2 363 0
 1098 0010 FB68     	 ldr r3,[r7,#12]
 1099 0012 D3F80831 	 ldr r3,[r3,#264]
 1100 0016 23F0E062 	 bic r2,r3,#117440512
 1101 001a FB68     	 ldr r3,[r7,#12]
 1102 001c C3F80821 	 str r2,[r3,#264]
 364:../Libraries/XMCLib/src/xmc_usic.c **** 
 365:../Libraries/XMCLib/src/xmc_usic.c ****   /* LOF = 0, A standard transmit buffer event occurs when the filling level equals the limit value
 366:../Libraries/XMCLib/src/xmc_usic.c ****    * lower due to transmission of a data word
 367:../Libraries/XMCLib/src/xmc_usic.c ****    * STBTEN = 0, the trigger of the standard transmit buffer event is based on the transition of th
 368:../Libraries/XMCLib/src/xmc_usic.c ****    *  from equal to below the limit, not the fact being below
 369:../Libraries/XMCLib/src/xmc_usic.c ****    */
 370:../Libraries/XMCLib/src/xmc_usic.c ****   channel->TBCTR = (uint32_t)(channel->TBCTR & (uint32_t)~(USIC_CH_TBCTR_LIMIT_Msk |
 1103              	 .loc 2 370 0
 1104 0020 FB68     	 ldr r3,[r7,#12]
 1105 0022 D3F80821 	 ldr r2,[r3,#264]
 1106 0026 094B     	 ldr r3,.L60
 1107 0028 1340     	 ands r3,r3,r2
 371:../Libraries/XMCLib/src/xmc_usic.c ****                                                            USIC_CH_TBCTR_DPTR_Msk |
 372:../Libraries/XMCLib/src/xmc_usic.c ****                                                            USIC_CH_TBCTR_SIZE_Msk)) |
 373:../Libraries/XMCLib/src/xmc_usic.c ****                    (uint32_t)((limit << USIC_CH_TBCTR_LIMIT_Pos) |
 1108              	 .loc 2 373 0
 1109 002a 3A68     	 ldr r2,[r7]
 1110 002c 1102     	 lsls r1,r2,#8
 1111 002e BA68     	 ldr r2,[r7,#8]
 1112 0030 1143     	 orrs r1,r1,r2
 374:../Libraries/XMCLib/src/xmc_usic.c ****                    (data_pointer << USIC_CH_TBCTR_DPTR_Pos) |
 375:../Libraries/XMCLib/src/xmc_usic.c ****                    ((uint32_t)size << USIC_CH_TBCTR_SIZE_Pos));
 1113              	 .loc 2 375 0
 1114 0032 FA79     	 ldrb r2,[r7,#7]
 1115 0034 1206     	 lsls r2,r2,#24
 373:../Libraries/XMCLib/src/xmc_usic.c ****                    (data_pointer << USIC_CH_TBCTR_DPTR_Pos) |
 1116              	 .loc 2 373 0
 1117 0036 0A43     	 orrs r2,r2,r1
 372:../Libraries/XMCLib/src/xmc_usic.c ****                    (uint32_t)((limit << USIC_CH_TBCTR_LIMIT_Pos) |
 1118              	 .loc 2 372 0
 1119 0038 1A43     	 orrs r2,r2,r3
 370:../Libraries/XMCLib/src/xmc_usic.c ****                                                            USIC_CH_TBCTR_DPTR_Msk |
 1120              	 .loc 2 370 0
 1121 003a FB68     	 ldr r3,[r7,#12]
 1122 003c C3F80821 	 str r2,[r3,#264]
 376:../Libraries/XMCLib/src/xmc_usic.c **** }
 1123              	 .loc 2 376 0
 1124 0040 1437     	 adds r7,r7,#20
 1125              	.LCFI56:
 1126              	 .cfi_def_cfa_offset 4
 1127 0042 BD46     	 mov sp,r7
 1128              	.LCFI57:
 1129              	 .cfi_def_cfa_register 13
 1130              	 
 1131 0044 5DF8047B 	 ldr r7,[sp],#4
 1132              	.LCFI58:
 1133              	 .cfi_restore 7
 1134              	 .cfi_def_cfa_offset 0
 1135 0048 7047     	 bx lr
 1136              	.L61:
 1137 004a 00BF     	 .align 2
 1138              	.L60:
 1139 004c C0C0FFF8 	 .word -117456704
 1140              	 .cfi_endproc
 1141              	.LFE243:
 1143              	 .section .text.XMC_USIC_CH_RXFIFO_Configure,"ax",%progbits
 1144              	 .align 2
 1145              	 .global XMC_USIC_CH_RXFIFO_Configure
 1146              	 .thumb
 1147              	 .thumb_func
 1149              	XMC_USIC_CH_RXFIFO_Configure:
 1150              	.LFB244:
 377:../Libraries/XMCLib/src/xmc_usic.c **** 
 378:../Libraries/XMCLib/src/xmc_usic.c **** 
 379:../Libraries/XMCLib/src/xmc_usic.c **** void XMC_USIC_CH_RXFIFO_Configure(XMC_USIC_CH_t *const channel,
 380:../Libraries/XMCLib/src/xmc_usic.c ****                                   const uint32_t data_pointer,
 381:../Libraries/XMCLib/src/xmc_usic.c ****                                   const XMC_USIC_CH_FIFO_SIZE_t size,
 382:../Libraries/XMCLib/src/xmc_usic.c ****                                   const uint32_t limit)
 383:../Libraries/XMCLib/src/xmc_usic.c **** {
 1151              	 .loc 2 383 0
 1152              	 .cfi_startproc
 1153              	 
 1154              	 
 1155              	 
 1156 0000 80B4     	 push {r7}
 1157              	.LCFI59:
 1158              	 .cfi_def_cfa_offset 4
 1159              	 .cfi_offset 7,-4
 1160 0002 85B0     	 sub sp,sp,#20
 1161              	.LCFI60:
 1162              	 .cfi_def_cfa_offset 24
 1163 0004 00AF     	 add r7,sp,#0
 1164              	.LCFI61:
 1165              	 .cfi_def_cfa_register 7
 1166 0006 F860     	 str r0,[r7,#12]
 1167 0008 B960     	 str r1,[r7,#8]
 1168 000a 3B60     	 str r3,[r7]
 1169 000c 1346     	 mov r3,r2
 1170 000e FB71     	 strb r3,[r7,#7]
 384:../Libraries/XMCLib/src/xmc_usic.c ****   /* Disable FIFO */
 385:../Libraries/XMCLib/src/xmc_usic.c ****   channel->RBCTR &= (uint32_t)~USIC_CH_RBCTR_SIZE_Msk;
 1171              	 .loc 2 385 0
 1172 0010 FB68     	 ldr r3,[r7,#12]
 1173 0012 D3F80C31 	 ldr r3,[r3,#268]
 1174 0016 23F0E062 	 bic r2,r3,#117440512
 1175 001a FB68     	 ldr r3,[r7,#12]
 1176 001c C3F80C21 	 str r2,[r3,#268]
 386:../Libraries/XMCLib/src/xmc_usic.c **** 
 387:../Libraries/XMCLib/src/xmc_usic.c ****   /* LOF = 1, A standard receive buffer event occurs when the filling level equals the limit value 
 388:../Libraries/XMCLib/src/xmc_usic.c ****    *  due to the reception of a new data word
 389:../Libraries/XMCLib/src/xmc_usic.c ****    */
 390:../Libraries/XMCLib/src/xmc_usic.c ****   channel->RBCTR = (uint32_t)((channel->RBCTR & (uint32_t)~(USIC_CH_RBCTR_LIMIT_Msk |
 1177              	 .loc 2 390 0
 1178 0020 FB68     	 ldr r3,[r7,#12]
 1179 0022 D3F80C21 	 ldr r2,[r3,#268]
 1180 0026 0A4B     	 ldr r3,.L63
 1181 0028 1340     	 ands r3,r3,r2
 391:../Libraries/XMCLib/src/xmc_usic.c ****                                                             USIC_CH_RBCTR_DPTR_Msk |
 392:../Libraries/XMCLib/src/xmc_usic.c ****                                                             USIC_CH_RBCTR_LOF_Msk)) |
 393:../Libraries/XMCLib/src/xmc_usic.c ****                    ((limit << USIC_CH_RBCTR_LIMIT_Pos) |
 1182              	 .loc 2 393 0
 1183 002a 3A68     	 ldr r2,[r7]
 1184 002c 1102     	 lsls r1,r2,#8
 1185 002e BA68     	 ldr r2,[r7,#8]
 1186 0030 1143     	 orrs r1,r1,r2
 394:../Libraries/XMCLib/src/xmc_usic.c ****                    (data_pointer << USIC_CH_RBCTR_DPTR_Pos) |
 395:../Libraries/XMCLib/src/xmc_usic.c ****                    ((uint32_t)size << USIC_CH_RBCTR_SIZE_Pos) |
 1187              	 .loc 2 395 0
 1188 0032 FA79     	 ldrb r2,[r7,#7]
 1189 0034 1206     	 lsls r2,r2,#24
 394:../Libraries/XMCLib/src/xmc_usic.c ****                    (data_pointer << USIC_CH_RBCTR_DPTR_Pos) |
 1190              	 .loc 2 394 0
 1191 0036 0A43     	 orrs r2,r2,r1
 390:../Libraries/XMCLib/src/xmc_usic.c ****                                                             USIC_CH_RBCTR_DPTR_Msk |
 1192              	 .loc 2 390 0
 1193 0038 1343     	 orrs r3,r3,r2
 1194 003a 43F08052 	 orr r2,r3,#268435456
 1195 003e FB68     	 ldr r3,[r7,#12]
 1196 0040 C3F80C21 	 str r2,[r3,#268]
 396:../Libraries/XMCLib/src/xmc_usic.c ****                    (uint32_t)USIC_CH_RBCTR_LOF_Msk));
 397:../Libraries/XMCLib/src/xmc_usic.c **** }
 1197              	 .loc 2 397 0
 1198 0044 1437     	 adds r7,r7,#20
 1199              	.LCFI62:
 1200              	 .cfi_def_cfa_offset 4
 1201 0046 BD46     	 mov sp,r7
 1202              	.LCFI63:
 1203              	 .cfi_def_cfa_register 13
 1204              	 
 1205 0048 5DF8047B 	 ldr r7,[sp],#4
 1206              	.LCFI64:
 1207              	 .cfi_restore 7
 1208              	 .cfi_def_cfa_offset 0
 1209 004c 7047     	 bx lr
 1210              	.L64:
 1211 004e 00BF     	 .align 2
 1212              	.L63:
 1213 0050 C0C0FFEF 	 .word -268451648
 1214              	 .cfi_endproc
 1215              	.LFE244:
 1217              	 .section .text.XMC_USIC_CH_TXFIFO_SetSizeTriggerLimit,"ax",%progbits
 1218              	 .align 2
 1219              	 .global XMC_USIC_CH_TXFIFO_SetSizeTriggerLimit
 1220              	 .thumb
 1221              	 .thumb_func
 1223              	XMC_USIC_CH_TXFIFO_SetSizeTriggerLimit:
 1224              	.LFB245:
 398:../Libraries/XMCLib/src/xmc_usic.c **** 
 399:../Libraries/XMCLib/src/xmc_usic.c **** void XMC_USIC_CH_TXFIFO_SetSizeTriggerLimit(XMC_USIC_CH_t *const channel,
 400:../Libraries/XMCLib/src/xmc_usic.c ****                                             const XMC_USIC_CH_FIFO_SIZE_t size,
 401:../Libraries/XMCLib/src/xmc_usic.c ****                                             const uint32_t limit)
 402:../Libraries/XMCLib/src/xmc_usic.c **** {
 1225              	 .loc 2 402 0
 1226              	 .cfi_startproc
 1227              	 
 1228              	 
 1229              	 
 1230 0000 80B4     	 push {r7}
 1231              	.LCFI65:
 1232              	 .cfi_def_cfa_offset 4
 1233              	 .cfi_offset 7,-4
 1234 0002 85B0     	 sub sp,sp,#20
 1235              	.LCFI66:
 1236              	 .cfi_def_cfa_offset 24
 1237 0004 00AF     	 add r7,sp,#0
 1238              	.LCFI67:
 1239              	 .cfi_def_cfa_register 7
 1240 0006 F860     	 str r0,[r7,#12]
 1241 0008 0B46     	 mov r3,r1
 1242 000a 7A60     	 str r2,[r7,#4]
 1243 000c FB72     	 strb r3,[r7,#11]
 403:../Libraries/XMCLib/src/xmc_usic.c ****   /* Disable FIFO */
 404:../Libraries/XMCLib/src/xmc_usic.c ****   channel->TBCTR &= (uint32_t)~USIC_CH_TBCTR_SIZE_Msk;
 1244              	 .loc 2 404 0
 1245 000e FB68     	 ldr r3,[r7,#12]
 1246 0010 D3F80831 	 ldr r3,[r3,#264]
 1247 0014 23F0E062 	 bic r2,r3,#117440512
 1248 0018 FB68     	 ldr r3,[r7,#12]
 1249 001a C3F80821 	 str r2,[r3,#264]
 405:../Libraries/XMCLib/src/xmc_usic.c **** 
 406:../Libraries/XMCLib/src/xmc_usic.c ****   /* STBTEN = 0, the trigger of the standard transmit buffer event is based on the transition of th
 407:../Libraries/XMCLib/src/xmc_usic.c ****    *  from equal to below the limit, not the fact being below
 408:../Libraries/XMCLib/src/xmc_usic.c ****    */
 409:../Libraries/XMCLib/src/xmc_usic.c ****   channel->TBCTR = (uint32_t)((uint32_t)(channel->TBCTR & (uint32_t)~USIC_CH_TBCTR_LIMIT_Msk) |
 1250              	 .loc 2 409 0
 1251 001e FB68     	 ldr r3,[r7,#12]
 1252 0020 D3F80831 	 ldr r3,[r3,#264]
 1253 0024 23F47C52 	 bic r2,r3,#16128
 410:../Libraries/XMCLib/src/xmc_usic.c ****                    (limit << USIC_CH_TBCTR_LIMIT_Pos) |
 1254              	 .loc 2 410 0
 1255 0028 7B68     	 ldr r3,[r7,#4]
 1256 002a 1B02     	 lsls r3,r3,#8
 409:../Libraries/XMCLib/src/xmc_usic.c ****                    (limit << USIC_CH_TBCTR_LIMIT_Pos) |
 1257              	 .loc 2 409 0
 1258 002c 1A43     	 orrs r2,r2,r3
 411:../Libraries/XMCLib/src/xmc_usic.c ****                    ((uint32_t)size << USIC_CH_TBCTR_SIZE_Pos));
 1259              	 .loc 2 411 0
 1260 002e FB7A     	 ldrb r3,[r7,#11]
 1261 0030 1B06     	 lsls r3,r3,#24
 409:../Libraries/XMCLib/src/xmc_usic.c ****                    (limit << USIC_CH_TBCTR_LIMIT_Pos) |
 1262              	 .loc 2 409 0
 1263 0032 1A43     	 orrs r2,r2,r3
 1264 0034 FB68     	 ldr r3,[r7,#12]
 1265 0036 C3F80821 	 str r2,[r3,#264]
 412:../Libraries/XMCLib/src/xmc_usic.c **** }
 1266              	 .loc 2 412 0
 1267 003a 1437     	 adds r7,r7,#20
 1268              	.LCFI68:
 1269              	 .cfi_def_cfa_offset 4
 1270 003c BD46     	 mov sp,r7
 1271              	.LCFI69:
 1272              	 .cfi_def_cfa_register 13
 1273              	 
 1274 003e 5DF8047B 	 ldr r7,[sp],#4
 1275              	.LCFI70:
 1276              	 .cfi_restore 7
 1277              	 .cfi_def_cfa_offset 0
 1278 0042 7047     	 bx lr
 1279              	 .cfi_endproc
 1280              	.LFE245:
 1282              	 .section .text.XMC_USIC_CH_RXFIFO_SetSizeTriggerLimit,"ax",%progbits
 1283              	 .align 2
 1284              	 .global XMC_USIC_CH_RXFIFO_SetSizeTriggerLimit
 1285              	 .thumb
 1286              	 .thumb_func
 1288              	XMC_USIC_CH_RXFIFO_SetSizeTriggerLimit:
 1289              	.LFB246:
 413:../Libraries/XMCLib/src/xmc_usic.c **** 
 414:../Libraries/XMCLib/src/xmc_usic.c **** void XMC_USIC_CH_RXFIFO_SetSizeTriggerLimit(XMC_USIC_CH_t *const channel,
 415:../Libraries/XMCLib/src/xmc_usic.c ****                                             const XMC_USIC_CH_FIFO_SIZE_t size,
 416:../Libraries/XMCLib/src/xmc_usic.c ****                                             const uint32_t limit)
 417:../Libraries/XMCLib/src/xmc_usic.c **** {
 1290              	 .loc 2 417 0
 1291              	 .cfi_startproc
 1292              	 
 1293              	 
 1294              	 
 1295 0000 80B4     	 push {r7}
 1296              	.LCFI71:
 1297              	 .cfi_def_cfa_offset 4
 1298              	 .cfi_offset 7,-4
 1299 0002 85B0     	 sub sp,sp,#20
 1300              	.LCFI72:
 1301              	 .cfi_def_cfa_offset 24
 1302 0004 00AF     	 add r7,sp,#0
 1303              	.LCFI73:
 1304              	 .cfi_def_cfa_register 7
 1305 0006 F860     	 str r0,[r7,#12]
 1306 0008 0B46     	 mov r3,r1
 1307 000a 7A60     	 str r2,[r7,#4]
 1308 000c FB72     	 strb r3,[r7,#11]
 418:../Libraries/XMCLib/src/xmc_usic.c ****   /* Disable FIFO */
 419:../Libraries/XMCLib/src/xmc_usic.c ****   channel->RBCTR &= (uint32_t)~USIC_CH_RBCTR_SIZE_Msk;
 1309              	 .loc 2 419 0
 1310 000e FB68     	 ldr r3,[r7,#12]
 1311 0010 D3F80C31 	 ldr r3,[r3,#268]
 1312 0014 23F0E062 	 bic r2,r3,#117440512
 1313 0018 FB68     	 ldr r3,[r7,#12]
 1314 001a C3F80C21 	 str r2,[r3,#268]
 420:../Libraries/XMCLib/src/xmc_usic.c **** 
 421:../Libraries/XMCLib/src/xmc_usic.c ****   channel->RBCTR = (uint32_t)((uint32_t)(channel->RBCTR & (uint32_t)~USIC_CH_RBCTR_LIMIT_Msk) |
 1315              	 .loc 2 421 0
 1316 001e FB68     	 ldr r3,[r7,#12]
 1317 0020 D3F80C31 	 ldr r3,[r3,#268]
 1318 0024 23F47C52 	 bic r2,r3,#16128
 422:../Libraries/XMCLib/src/xmc_usic.c ****                    (limit << USIC_CH_RBCTR_LIMIT_Pos) |
 1319              	 .loc 2 422 0
 1320 0028 7B68     	 ldr r3,[r7,#4]
 1321 002a 1B02     	 lsls r3,r3,#8
 421:../Libraries/XMCLib/src/xmc_usic.c ****                    (limit << USIC_CH_RBCTR_LIMIT_Pos) |
 1322              	 .loc 2 421 0
 1323 002c 1A43     	 orrs r2,r2,r3
 423:../Libraries/XMCLib/src/xmc_usic.c ****                    ((uint32_t)size << USIC_CH_RBCTR_SIZE_Pos));
 1324              	 .loc 2 423 0
 1325 002e FB7A     	 ldrb r3,[r7,#11]
 1326 0030 1B06     	 lsls r3,r3,#24
 421:../Libraries/XMCLib/src/xmc_usic.c ****                    (limit << USIC_CH_RBCTR_LIMIT_Pos) |
 1327              	 .loc 2 421 0
 1328 0032 1A43     	 orrs r2,r2,r3
 1329 0034 FB68     	 ldr r3,[r7,#12]
 1330 0036 C3F80C21 	 str r2,[r3,#268]
 424:../Libraries/XMCLib/src/xmc_usic.c **** }
 1331              	 .loc 2 424 0
 1332 003a 1437     	 adds r7,r7,#20
 1333              	.LCFI74:
 1334              	 .cfi_def_cfa_offset 4
 1335 003c BD46     	 mov sp,r7
 1336              	.LCFI75:
 1337              	 .cfi_def_cfa_register 13
 1338              	 
 1339 003e 5DF8047B 	 ldr r7,[sp],#4
 1340              	.LCFI76:
 1341              	 .cfi_restore 7
 1342              	 .cfi_def_cfa_offset 0
 1343 0042 7047     	 bx lr
 1344              	 .cfi_endproc
 1345              	.LFE246:
 1347              	 .section .text.XMC_USIC_CH_SetInterruptNodePointer,"ax",%progbits
 1348              	 .align 2
 1349              	 .global XMC_USIC_CH_SetInterruptNodePointer
 1350              	 .thumb
 1351              	 .thumb_func
 1353              	XMC_USIC_CH_SetInterruptNodePointer:
 1354              	.LFB247:
 425:../Libraries/XMCLib/src/xmc_usic.c **** 
 426:../Libraries/XMCLib/src/xmc_usic.c **** void XMC_USIC_CH_SetInterruptNodePointer(XMC_USIC_CH_t *const channel,
 427:../Libraries/XMCLib/src/xmc_usic.c ****                                          const XMC_USIC_CH_INTERRUPT_NODE_POINTER_t interrupt_node,
 428:../Libraries/XMCLib/src/xmc_usic.c ****                                          const uint32_t service_request)
 429:../Libraries/XMCLib/src/xmc_usic.c **** {
 1355              	 .loc 2 429 0
 1356              	 .cfi_startproc
 1357              	 
 1358              	 
 1359              	 
 1360 0000 80B4     	 push {r7}
 1361              	.LCFI77:
 1362              	 .cfi_def_cfa_offset 4
 1363              	 .cfi_offset 7,-4
 1364 0002 85B0     	 sub sp,sp,#20
 1365              	.LCFI78:
 1366              	 .cfi_def_cfa_offset 24
 1367 0004 00AF     	 add r7,sp,#0
 1368              	.LCFI79:
 1369              	 .cfi_def_cfa_register 7
 1370 0006 F860     	 str r0,[r7,#12]
 1371 0008 0B46     	 mov r3,r1
 1372 000a 7A60     	 str r2,[r7,#4]
 1373 000c FB72     	 strb r3,[r7,#11]
 430:../Libraries/XMCLib/src/xmc_usic.c ****   channel->INPR = (uint32_t)((channel->INPR & (~(uint32_t)(USIC_CH_INPR_Msk << (uint32_t)interrupt_
 1374              	 .loc 2 430 0
 1375 000e FB68     	 ldr r3,[r7,#12]
 1376 0010 9A69     	 ldr r2,[r3,#24]
 1377 0012 FB7A     	 ldrb r3,[r7,#11]
 1378 0014 0721     	 movs r1,#7
 1379 0016 01FA03F3 	 lsl r3,r1,r3
 1380 001a DB43     	 mvns r3,r3
 1381 001c 1A40     	 ands r2,r2,r3
 431:../Libraries/XMCLib/src/xmc_usic.c ****                   (service_request << (uint32_t)interrupt_node));
 1382              	 .loc 2 431 0
 1383 001e FB7A     	 ldrb r3,[r7,#11]
 1384 0020 7968     	 ldr r1,[r7,#4]
 1385 0022 01FA03F3 	 lsl r3,r1,r3
 430:../Libraries/XMCLib/src/xmc_usic.c ****   channel->INPR = (uint32_t)((channel->INPR & (~(uint32_t)(USIC_CH_INPR_Msk << (uint32_t)interrupt_
 1386              	 .loc 2 430 0
 1387 0026 1A43     	 orrs r2,r2,r3
 1388 0028 FB68     	 ldr r3,[r7,#12]
 1389 002a 9A61     	 str r2,[r3,#24]
 432:../Libraries/XMCLib/src/xmc_usic.c **** }
 1390              	 .loc 2 432 0
 1391 002c 1437     	 adds r7,r7,#20
 1392              	.LCFI80:
 1393              	 .cfi_def_cfa_offset 4
 1394 002e BD46     	 mov sp,r7
 1395              	.LCFI81:
 1396              	 .cfi_def_cfa_register 13
 1397              	 
 1398 0030 5DF8047B 	 ldr r7,[sp],#4
 1399              	.LCFI82:
 1400              	 .cfi_restore 7
 1401              	 .cfi_def_cfa_offset 0
 1402 0034 7047     	 bx lr
 1403              	 .cfi_endproc
 1404              	.LFE247:
 1406 0036 00BF     	 .section .text.XMC_USIC_CH_TXFIFO_SetInterruptNodePointer,"ax",%progbits
 1407              	 .align 2
 1408              	 .global XMC_USIC_CH_TXFIFO_SetInterruptNodePointer
 1409              	 .thumb
 1410              	 .thumb_func
 1412              	XMC_USIC_CH_TXFIFO_SetInterruptNodePointer:
 1413              	.LFB248:
 433:../Libraries/XMCLib/src/xmc_usic.c **** 
 434:../Libraries/XMCLib/src/xmc_usic.c **** void XMC_USIC_CH_TXFIFO_SetInterruptNodePointer(XMC_USIC_CH_t *const channel,
 435:../Libraries/XMCLib/src/xmc_usic.c ****                                                 const XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER_t i
 436:../Libraries/XMCLib/src/xmc_usic.c ****                                                 const uint32_t service_request)
 437:../Libraries/XMCLib/src/xmc_usic.c **** {
 1414              	 .loc 2 437 0
 1415              	 .cfi_startproc
 1416              	 
 1417              	 
 1418              	 
 1419 0000 80B4     	 push {r7}
 1420              	.LCFI83:
 1421              	 .cfi_def_cfa_offset 4
 1422              	 .cfi_offset 7,-4
 1423 0002 85B0     	 sub sp,sp,#20
 1424              	.LCFI84:
 1425              	 .cfi_def_cfa_offset 24
 1426 0004 00AF     	 add r7,sp,#0
 1427              	.LCFI85:
 1428              	 .cfi_def_cfa_register 7
 1429 0006 F860     	 str r0,[r7,#12]
 1430 0008 0B46     	 mov r3,r1
 1431 000a 7A60     	 str r2,[r7,#4]
 1432 000c FB72     	 strb r3,[r7,#11]
 438:../Libraries/XMCLib/src/xmc_usic.c ****   channel->TBCTR = (uint32_t)((channel->TBCTR & (~(uint32_t)(USIC_CH_INPR_Msk << (uint32_t)interrup
 1433              	 .loc 2 438 0
 1434 000e FB68     	 ldr r3,[r7,#12]
 1435 0010 D3F80821 	 ldr r2,[r3,#264]
 1436 0014 FB7A     	 ldrb r3,[r7,#11]
 1437 0016 0721     	 movs r1,#7
 1438 0018 01FA03F3 	 lsl r3,r1,r3
 1439 001c DB43     	 mvns r3,r3
 1440 001e 1A40     	 ands r2,r2,r3
 439:../Libraries/XMCLib/src/xmc_usic.c ****                    (service_request << (uint32_t)interrupt_node));
 1441              	 .loc 2 439 0
 1442 0020 FB7A     	 ldrb r3,[r7,#11]
 1443 0022 7968     	 ldr r1,[r7,#4]
 1444 0024 01FA03F3 	 lsl r3,r1,r3
 438:../Libraries/XMCLib/src/xmc_usic.c ****   channel->TBCTR = (uint32_t)((channel->TBCTR & (~(uint32_t)(USIC_CH_INPR_Msk << (uint32_t)interrup
 1445              	 .loc 2 438 0
 1446 0028 1A43     	 orrs r2,r2,r3
 1447 002a FB68     	 ldr r3,[r7,#12]
 1448 002c C3F80821 	 str r2,[r3,#264]
 440:../Libraries/XMCLib/src/xmc_usic.c **** }
 1449              	 .loc 2 440 0
 1450 0030 1437     	 adds r7,r7,#20
 1451              	.LCFI86:
 1452              	 .cfi_def_cfa_offset 4
 1453 0032 BD46     	 mov sp,r7
 1454              	.LCFI87:
 1455              	 .cfi_def_cfa_register 13
 1456              	 
 1457 0034 5DF8047B 	 ldr r7,[sp],#4
 1458              	.LCFI88:
 1459              	 .cfi_restore 7
 1460              	 .cfi_def_cfa_offset 0
 1461 0038 7047     	 bx lr
 1462              	 .cfi_endproc
 1463              	.LFE248:
 1465 003a 00BF     	 .section .text.XMC_USIC_CH_RXFIFO_SetInterruptNodePointer,"ax",%progbits
 1466              	 .align 2
 1467              	 .global XMC_USIC_CH_RXFIFO_SetInterruptNodePointer
 1468              	 .thumb
 1469              	 .thumb_func
 1471              	XMC_USIC_CH_RXFIFO_SetInterruptNodePointer:
 1472              	.LFB249:
 441:../Libraries/XMCLib/src/xmc_usic.c **** 
 442:../Libraries/XMCLib/src/xmc_usic.c **** void XMC_USIC_CH_RXFIFO_SetInterruptNodePointer(XMC_USIC_CH_t *const channel,
 443:../Libraries/XMCLib/src/xmc_usic.c ****                                                 const XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER_t i
 444:../Libraries/XMCLib/src/xmc_usic.c ****                                                 const uint32_t service_request)
 445:../Libraries/XMCLib/src/xmc_usic.c **** {
 1473              	 .loc 2 445 0
 1474              	 .cfi_startproc
 1475              	 
 1476              	 
 1477              	 
 1478 0000 80B4     	 push {r7}
 1479              	.LCFI89:
 1480              	 .cfi_def_cfa_offset 4
 1481              	 .cfi_offset 7,-4
 1482 0002 85B0     	 sub sp,sp,#20
 1483              	.LCFI90:
 1484              	 .cfi_def_cfa_offset 24
 1485 0004 00AF     	 add r7,sp,#0
 1486              	.LCFI91:
 1487              	 .cfi_def_cfa_register 7
 1488 0006 F860     	 str r0,[r7,#12]
 1489 0008 0B46     	 mov r3,r1
 1490 000a 7A60     	 str r2,[r7,#4]
 1491 000c FB72     	 strb r3,[r7,#11]
 446:../Libraries/XMCLib/src/xmc_usic.c ****   channel->RBCTR = (uint32_t)((channel->RBCTR & (~(uint32_t)(USIC_CH_INPR_Msk << (uint32_t)interrup
 1492              	 .loc 2 446 0
 1493 000e FB68     	 ldr r3,[r7,#12]
 1494 0010 D3F80C21 	 ldr r2,[r3,#268]
 1495 0014 FB7A     	 ldrb r3,[r7,#11]
 1496 0016 0721     	 movs r1,#7
 1497 0018 01FA03F3 	 lsl r3,r1,r3
 1498 001c DB43     	 mvns r3,r3
 1499 001e 1A40     	 ands r2,r2,r3
 447:../Libraries/XMCLib/src/xmc_usic.c ****                    (service_request << (uint32_t)interrupt_node));
 1500              	 .loc 2 447 0
 1501 0020 FB7A     	 ldrb r3,[r7,#11]
 1502 0022 7968     	 ldr r1,[r7,#4]
 1503 0024 01FA03F3 	 lsl r3,r1,r3
 446:../Libraries/XMCLib/src/xmc_usic.c ****   channel->RBCTR = (uint32_t)((channel->RBCTR & (~(uint32_t)(USIC_CH_INPR_Msk << (uint32_t)interrup
 1504              	 .loc 2 446 0
 1505 0028 1A43     	 orrs r2,r2,r3
 1506 002a FB68     	 ldr r3,[r7,#12]
 1507 002c C3F80C21 	 str r2,[r3,#268]
 448:../Libraries/XMCLib/src/xmc_usic.c **** }
 1508              	 .loc 2 448 0
 1509 0030 1437     	 adds r7,r7,#20
 1510              	.LCFI92:
 1511              	 .cfi_def_cfa_offset 4
 1512 0032 BD46     	 mov sp,r7
 1513              	.LCFI93:
 1514              	 .cfi_def_cfa_register 13
 1515              	 
 1516 0034 5DF8047B 	 ldr r7,[sp],#4
 1517              	.LCFI94:
 1518              	 .cfi_restore 7
 1519              	 .cfi_def_cfa_offset 0
 1520 0038 7047     	 bx lr
 1521              	 .cfi_endproc
 1522              	.LFE249:
 1524 003a 00BF     	 .section .text.XMC_USIC_Enable,"ax",%progbits
 1525              	 .align 2
 1526              	 .global XMC_USIC_Enable
 1527              	 .thumb
 1528              	 .thumb_func
 1530              	XMC_USIC_Enable:
 1531              	.LFB250:
 449:../Libraries/XMCLib/src/xmc_usic.c **** 
 450:../Libraries/XMCLib/src/xmc_usic.c **** void XMC_USIC_Enable(XMC_USIC_t *const usic)
 451:../Libraries/XMCLib/src/xmc_usic.c **** {
 1532              	 .loc 2 451 0
 1533              	 .cfi_startproc
 1534              	 
 1535              	 
 1536 0000 80B5     	 push {r7,lr}
 1537              	.LCFI95:
 1538              	 .cfi_def_cfa_offset 8
 1539              	 .cfi_offset 7,-8
 1540              	 .cfi_offset 14,-4
 1541 0002 82B0     	 sub sp,sp,#8
 1542              	.LCFI96:
 1543              	 .cfi_def_cfa_offset 16
 1544 0004 00AF     	 add r7,sp,#0
 1545              	.LCFI97:
 1546              	 .cfi_def_cfa_register 7
 1547 0006 7860     	 str r0,[r7,#4]
 452:../Libraries/XMCLib/src/xmc_usic.c ****   if (usic == USIC0)
 1548              	 .loc 2 452 0
 1549 0008 7B68     	 ldr r3,[r7,#4]
 1550 000a 184A     	 ldr r2,.L77
 1551 000c 9342     	 cmp r3,r2
 1552 000e 0CD1     	 bne .L71
 453:../Libraries/XMCLib/src/xmc_usic.c ****   {
 454:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(CLOCK_GATING_SUPPORTED)
 455:../Libraries/XMCLib/src/xmc_usic.c ****     XMC_SCU_CLOCK_UngatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_USIC0);
 456:../Libraries/XMCLib/src/xmc_usic.c ****     while (XMC_SCU_CLOCK_IsPeripheralClockGated(XMC_SCU_PERIPHERAL_CLOCK_USIC0));
 457:../Libraries/XMCLib/src/xmc_usic.c **** #endif
 458:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(PERIPHERAL_RESET_SUPPORTED)
 459:../Libraries/XMCLib/src/xmc_usic.c ****     XMC_SCU_RESET_DeassertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_USIC0);
 1553              	 .loc 2 459 0
 1554 0010 4FF40060 	 mov r0,#2048
 1555 0014 FFF7FEFF 	 bl XMC_SCU_RESET_DeassertPeripheralReset
 460:../Libraries/XMCLib/src/xmc_usic.c ****     while (XMC_SCU_RESET_IsPeripheralResetAsserted(XMC_SCU_PERIPHERAL_RESET_USIC0));
 1556              	 .loc 2 460 0
 1557 0018 00BF     	 nop
 1558              	.L72:
 1559              	 .loc 2 460 0 is_stmt 0 discriminator 1
 1560 001a 4FF40060 	 mov r0,#2048
 1561 001e FFF7FEFF 	 bl XMC_SCU_RESET_IsPeripheralResetAsserted
 1562 0022 0346     	 mov r3,r0
 1563 0024 002B     	 cmp r3,#0
 1564 0026 F8D1     	 bne .L72
 1565 0028 1CE0     	 b .L70
 1566              	.L71:
 461:../Libraries/XMCLib/src/xmc_usic.c **** #endif 
 462:../Libraries/XMCLib/src/xmc_usic.c ****   }
 463:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(USIC1)  
 464:../Libraries/XMCLib/src/xmc_usic.c ****   else if (usic == USIC1)
 1567              	 .loc 2 464 0 is_stmt 1
 1568 002a 7B68     	 ldr r3,[r7,#4]
 1569 002c 104A     	 ldr r2,.L77+4
 1570 002e 9342     	 cmp r3,r2
 1571 0030 0AD1     	 bne .L74
 465:../Libraries/XMCLib/src/xmc_usic.c ****   {
 466:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(CLOCK_GATING_SUPPORTED)
 467:../Libraries/XMCLib/src/xmc_usic.c ****     XMC_SCU_CLOCK_UngatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_USIC1);
 468:../Libraries/XMCLib/src/xmc_usic.c ****     while (XMC_SCU_CLOCK_IsPeripheralClockGated(XMC_SCU_PERIPHERAL_CLOCK_USIC1));
 469:../Libraries/XMCLib/src/xmc_usic.c **** #endif 
 470:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(PERIPHERAL_RESET_SUPPORTED)
 471:../Libraries/XMCLib/src/xmc_usic.c ****     XMC_SCU_RESET_DeassertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_USIC1);
 1572              	 .loc 2 471 0
 1573 0032 1048     	 ldr r0,.L77+8
 1574 0034 FFF7FEFF 	 bl XMC_SCU_RESET_DeassertPeripheralReset
 472:../Libraries/XMCLib/src/xmc_usic.c ****     while (XMC_SCU_RESET_IsPeripheralResetAsserted(XMC_SCU_PERIPHERAL_RESET_USIC1));
 1575              	 .loc 2 472 0
 1576 0038 00BF     	 nop
 1577              	.L75:
 1578              	 .loc 2 472 0 is_stmt 0 discriminator 1
 1579 003a 0E48     	 ldr r0,.L77+8
 1580 003c FFF7FEFF 	 bl XMC_SCU_RESET_IsPeripheralResetAsserted
 1581 0040 0346     	 mov r3,r0
 1582 0042 002B     	 cmp r3,#0
 1583 0044 F9D1     	 bne .L75
 1584 0046 0DE0     	 b .L70
 1585              	.L74:
 473:../Libraries/XMCLib/src/xmc_usic.c **** #endif 
 474:../Libraries/XMCLib/src/xmc_usic.c ****   }
 475:../Libraries/XMCLib/src/xmc_usic.c **** #endif  
 476:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(USIC2)  
 477:../Libraries/XMCLib/src/xmc_usic.c ****   else if (usic == USIC2)
 1586              	 .loc 2 477 0 is_stmt 1
 1587 0048 7B68     	 ldr r3,[r7,#4]
 1588 004a 0B4A     	 ldr r2,.L77+12
 1589 004c 9342     	 cmp r3,r2
 1590 004e 09D1     	 bne .L70
 478:../Libraries/XMCLib/src/xmc_usic.c ****   {
 479:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(CLOCK_GATING_SUPPORTED) 
 480:../Libraries/XMCLib/src/xmc_usic.c ****     XMC_SCU_CLOCK_UngatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_USIC2);
 481:../Libraries/XMCLib/src/xmc_usic.c ****     while (XMC_SCU_CLOCK_IsPeripheralClockGated(XMC_SCU_PERIPHERAL_CLOCK_USIC2));
 482:../Libraries/XMCLib/src/xmc_usic.c **** #endif
 483:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(PERIPHERAL_RESET_SUPPORTED)
 484:../Libraries/XMCLib/src/xmc_usic.c ****     XMC_SCU_RESET_DeassertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_USIC2);
 1591              	 .loc 2 484 0
 1592 0050 0A48     	 ldr r0,.L77+16
 1593 0052 FFF7FEFF 	 bl XMC_SCU_RESET_DeassertPeripheralReset
 485:../Libraries/XMCLib/src/xmc_usic.c ****     while (XMC_SCU_RESET_IsPeripheralResetAsserted(XMC_SCU_PERIPHERAL_RESET_USIC2));
 1594              	 .loc 2 485 0
 1595 0056 00BF     	 nop
 1596              	.L76:
 1597              	 .loc 2 485 0 is_stmt 0 discriminator 1
 1598 0058 0848     	 ldr r0,.L77+16
 1599 005a FFF7FEFF 	 bl XMC_SCU_RESET_IsPeripheralResetAsserted
 1600 005e 0346     	 mov r3,r0
 1601 0060 002B     	 cmp r3,#0
 1602 0062 F9D1     	 bne .L76
 1603              	.L70:
 486:../Libraries/XMCLib/src/xmc_usic.c **** #endif 
 487:../Libraries/XMCLib/src/xmc_usic.c ****   }
 488:../Libraries/XMCLib/src/xmc_usic.c **** #endif  
 489:../Libraries/XMCLib/src/xmc_usic.c ****   else
 490:../Libraries/XMCLib/src/xmc_usic.c ****   {
 491:../Libraries/XMCLib/src/xmc_usic.c ****     XMC_ASSERT("USIC module not available", 0/*Always*/);
 492:../Libraries/XMCLib/src/xmc_usic.c ****   }
 493:../Libraries/XMCLib/src/xmc_usic.c **** }
 1604              	 .loc 2 493 0 is_stmt 1
 1605 0064 0837     	 adds r7,r7,#8
 1606              	.LCFI98:
 1607              	 .cfi_def_cfa_offset 8
 1608 0066 BD46     	 mov sp,r7
 1609              	.LCFI99:
 1610              	 .cfi_def_cfa_register 13
 1611              	 
 1612 0068 80BD     	 pop {r7,pc}
 1613              	.L78:
 1614 006a 00BF     	 .align 2
 1615              	.L77:
 1616 006c 08000340 	 .word 1073938440
 1617 0070 08000248 	 .word 1208090632
 1618 0074 80000010 	 .word 268435584
 1619 0078 08400248 	 .word 1208107016
 1620 007c 00010010 	 .word 268435712
 1621              	 .cfi_endproc
 1622              	.LFE250:
 1624              	 .section .text.XMC_USIC_Disable,"ax",%progbits
 1625              	 .align 2
 1626              	 .global XMC_USIC_Disable
 1627              	 .thumb
 1628              	 .thumb_func
 1630              	XMC_USIC_Disable:
 1631              	.LFB251:
 494:../Libraries/XMCLib/src/xmc_usic.c **** 
 495:../Libraries/XMCLib/src/xmc_usic.c **** void XMC_USIC_Disable(XMC_USIC_t *const usic)
 496:../Libraries/XMCLib/src/xmc_usic.c **** {
 1632              	 .loc 2 496 0
 1633              	 .cfi_startproc
 1634              	 
 1635              	 
 1636 0000 80B5     	 push {r7,lr}
 1637              	.LCFI100:
 1638              	 .cfi_def_cfa_offset 8
 1639              	 .cfi_offset 7,-8
 1640              	 .cfi_offset 14,-4
 1641 0002 82B0     	 sub sp,sp,#8
 1642              	.LCFI101:
 1643              	 .cfi_def_cfa_offset 16
 1644 0004 00AF     	 add r7,sp,#0
 1645              	.LCFI102:
 1646              	 .cfi_def_cfa_register 7
 1647 0006 7860     	 str r0,[r7,#4]
 497:../Libraries/XMCLib/src/xmc_usic.c ****   if (usic == (XMC_USIC_t *)USIC0)
 1648              	 .loc 2 497 0
 1649 0008 7B68     	 ldr r3,[r7,#4]
 1650 000a 0D4A     	 ldr r2,.L83
 1651 000c 9342     	 cmp r3,r2
 1652 000e 04D1     	 bne .L80
 498:../Libraries/XMCLib/src/xmc_usic.c ****   {
 499:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(PERIPHERAL_RESET_SUPPORTED)  
 500:../Libraries/XMCLib/src/xmc_usic.c ****     XMC_SCU_RESET_AssertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_USIC0);
 1653              	 .loc 2 500 0
 1654 0010 4FF40060 	 mov r0,#2048
 1655 0014 FFF7FEFF 	 bl XMC_SCU_RESET_AssertPeripheralReset
 1656 0018 0EE0     	 b .L79
 1657              	.L80:
 501:../Libraries/XMCLib/src/xmc_usic.c **** #endif	
 502:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(CLOCK_GATING_SUPPORTED) 
 503:../Libraries/XMCLib/src/xmc_usic.c ****     XMC_SCU_CLOCK_GatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_USIC0);
 504:../Libraries/XMCLib/src/xmc_usic.c **** #endif
 505:../Libraries/XMCLib/src/xmc_usic.c ****   }
 506:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(USIC1)  
 507:../Libraries/XMCLib/src/xmc_usic.c ****   else if (usic == (XMC_USIC_t *)USIC1)
 1658              	 .loc 2 507 0
 1659 001a 7B68     	 ldr r3,[r7,#4]
 1660 001c 094A     	 ldr r2,.L83+4
 1661 001e 9342     	 cmp r3,r2
 1662 0020 03D1     	 bne .L82
 508:../Libraries/XMCLib/src/xmc_usic.c ****   {
 509:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(PERIPHERAL_RESET_SUPPORTED)  
 510:../Libraries/XMCLib/src/xmc_usic.c ****     XMC_SCU_RESET_AssertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_USIC1);
 1663              	 .loc 2 510 0
 1664 0022 0948     	 ldr r0,.L83+8
 1665 0024 FFF7FEFF 	 bl XMC_SCU_RESET_AssertPeripheralReset
 1666 0028 06E0     	 b .L79
 1667              	.L82:
 511:../Libraries/XMCLib/src/xmc_usic.c **** #endif	
 512:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(CLOCK_GATING_SUPPORTED) 
 513:../Libraries/XMCLib/src/xmc_usic.c ****     XMC_SCU_CLOCK_GatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_USIC1);
 514:../Libraries/XMCLib/src/xmc_usic.c **** #endif
 515:../Libraries/XMCLib/src/xmc_usic.c ****   }
 516:../Libraries/XMCLib/src/xmc_usic.c **** #endif  
 517:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(USIC2)  
 518:../Libraries/XMCLib/src/xmc_usic.c ****   else if (usic == (XMC_USIC_t *)USIC2)
 1668              	 .loc 2 518 0
 1669 002a 7B68     	 ldr r3,[r7,#4]
 1670 002c 074A     	 ldr r2,.L83+12
 1671 002e 9342     	 cmp r3,r2
 1672 0030 02D1     	 bne .L79
 519:../Libraries/XMCLib/src/xmc_usic.c ****   {
 520:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(PERIPHERAL_RESET_SUPPORTED)  
 521:../Libraries/XMCLib/src/xmc_usic.c ****     XMC_SCU_RESET_AssertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_USIC2);
 1673              	 .loc 2 521 0
 1674 0032 0748     	 ldr r0,.L83+16
 1675 0034 FFF7FEFF 	 bl XMC_SCU_RESET_AssertPeripheralReset
 1676              	.L79:
 522:../Libraries/XMCLib/src/xmc_usic.c **** #endif	
 523:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(CLOCK_GATING_SUPPORTED) 
 524:../Libraries/XMCLib/src/xmc_usic.c ****     XMC_SCU_CLOCK_GatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_USIC2);
 525:../Libraries/XMCLib/src/xmc_usic.c **** #endif
 526:../Libraries/XMCLib/src/xmc_usic.c ****   }
 527:../Libraries/XMCLib/src/xmc_usic.c **** #endif  
 528:../Libraries/XMCLib/src/xmc_usic.c ****   else
 529:../Libraries/XMCLib/src/xmc_usic.c ****   {
 530:../Libraries/XMCLib/src/xmc_usic.c **** 	  XMC_ASSERT("USIC module not available", 0/*Always*/);
 531:../Libraries/XMCLib/src/xmc_usic.c ****   }
 532:../Libraries/XMCLib/src/xmc_usic.c ****   
 533:../Libraries/XMCLib/src/xmc_usic.c **** }
 1677              	 .loc 2 533 0
 1678 0038 0837     	 adds r7,r7,#8
 1679              	.LCFI103:
 1680              	 .cfi_def_cfa_offset 8
 1681 003a BD46     	 mov sp,r7
 1682              	.LCFI104:
 1683              	 .cfi_def_cfa_register 13
 1684              	 
 1685 003c 80BD     	 pop {r7,pc}
 1686              	.L84:
 1687 003e 00BF     	 .align 2
 1688              	.L83:
 1689 0040 08000340 	 .word 1073938440
 1690 0044 08000248 	 .word 1208090632
 1691 0048 80000010 	 .word 268435584
 1692 004c 08400248 	 .word 1208107016
 1693 0050 00010010 	 .word 268435712
 1694              	 .cfi_endproc
 1695              	.LFE251:
 1697              	 .text
 1698              	.Letext0:
 1699              	 .file 3 "c:\\users\\va40036139\\desktop\\dave_4-4-2_64bit_2018-02-23\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 1700              	 .file 4 "c:\\users\\va40036139\\desktop\\dave_4-4-2_64bit_2018-02-23\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 1701              	 .file 5 "D:/practica/proiect/DaveCan/Libraries/CMSIS/Infineon/XMC4500_series/Include/XMC4500.h"
 1702              	 .file 6 "D:/practica/proiect/DaveCan/Libraries/XMCLib/inc/xmc4_scu.h"
 1703              	 .file 7 "D:/practica/proiect/DaveCan/Libraries/CMSIS/Include/core_cm4.h"
 1704              	 .file 8 "D:/practica/proiect/DaveCan/Libraries/CMSIS/Infineon/XMC4500_series/Include/system_XMC4500.h"
DEFINED SYMBOLS
                            *ABS*:00000000 xmc_usic.c
    {standard input}:20     .text.XMC_USIC_CH_SetInputTriggerCombinationMode:00000000 $t
    {standard input}:24     .text.XMC_USIC_CH_SetInputTriggerCombinationMode:00000000 XMC_USIC_CH_SetInputTriggerCombinationMode
    {standard input}:83     .text.XMC_USIC_CH_SetBRGInputClockSource:00000000 $t
    {standard input}:87     .text.XMC_USIC_CH_SetBRGInputClockSource:00000000 XMC_USIC_CH_SetBRGInputClockSource
    {standard input}:132    .text.XMC_USIC_CH_Enable:00000000 $t
    {standard input}:137    .text.XMC_USIC_CH_Enable:00000000 XMC_USIC_CH_Enable
    {standard input}:1530   .text.XMC_USIC_Enable:00000000 XMC_USIC_Enable
    {standard input}:234    .text.XMC_USIC_CH_Enable:00000074 $d
    {standard input}:247    .text.XMC_USIC_CH_Disable:00000000 $t
    {standard input}:252    .text.XMC_USIC_CH_Disable:00000000 XMC_USIC_CH_Disable
    {standard input}:294    .text.XMC_USIC_CH_SetBaudrate:00000000 $t
    {standard input}:299    .text.XMC_USIC_CH_SetBaudrate:00000000 XMC_USIC_CH_SetBaudrate
    {standard input}:448    .text.XMC_USIC_CH_SetBaudrate:000000d8 $d
    {standard input}:454    .text.XMC_USIC_CH_SetBaudrateEx:00000000 $t
    {standard input}:459    .text.XMC_USIC_CH_SetBaudrateEx:00000000 XMC_USIC_CH_SetBaudrateEx
    {standard input}:616    .text.XMC_USIC_CH_SetBaudrateEx:000000f8 $d
    {standard input}:621    .text.XMC_USIC_CH_GetBaudrate:00000000 $t
    {standard input}:626    .text.XMC_USIC_CH_GetBaudrate:00000000 XMC_USIC_CH_GetBaudrate
    {standard input}:778    .text.XMC_USIC_CH_GetBaudrate:00000120 $d
    {standard input}:784    .text.XMC_USIC_CH_GetSCLKFrequency:00000000 $t
    {standard input}:789    .text.XMC_USIC_CH_GetSCLKFrequency:00000000 XMC_USIC_CH_GetSCLKFrequency
    {standard input}:899    .text.XMC_USIC_CH_GetSCLKFrequency:000000d0 $d
    {standard input}:905    .text.XMC_USIC_CH_GetMCLKFrequency:00000000 $t
    {standard input}:910    .text.XMC_USIC_CH_GetMCLKFrequency:00000000 XMC_USIC_CH_GetMCLKFrequency
    {standard input}:989    .text.XMC_USIC_CH_GetMCLKFrequency:0000009c $d
    {standard input}:994    .text.XMC_USIC_CH_ConfigExternalInputSignalToBRG:00000000 $t
    {standard input}:999    .text.XMC_USIC_CH_ConfigExternalInputSignalToBRG:00000000 XMC_USIC_CH_ConfigExternalInputSignalToBRG
    {standard input}:1065   .text.XMC_USIC_CH_ConfigExternalInputSignalToBRG:0000004c $d
    {standard input}:1070   .text.XMC_USIC_CH_TXFIFO_Configure:00000000 $t
    {standard input}:1075   .text.XMC_USIC_CH_TXFIFO_Configure:00000000 XMC_USIC_CH_TXFIFO_Configure
    {standard input}:1139   .text.XMC_USIC_CH_TXFIFO_Configure:0000004c $d
    {standard input}:1144   .text.XMC_USIC_CH_RXFIFO_Configure:00000000 $t
    {standard input}:1149   .text.XMC_USIC_CH_RXFIFO_Configure:00000000 XMC_USIC_CH_RXFIFO_Configure
    {standard input}:1213   .text.XMC_USIC_CH_RXFIFO_Configure:00000050 $d
    {standard input}:1218   .text.XMC_USIC_CH_TXFIFO_SetSizeTriggerLimit:00000000 $t
    {standard input}:1223   .text.XMC_USIC_CH_TXFIFO_SetSizeTriggerLimit:00000000 XMC_USIC_CH_TXFIFO_SetSizeTriggerLimit
    {standard input}:1283   .text.XMC_USIC_CH_RXFIFO_SetSizeTriggerLimit:00000000 $t
    {standard input}:1288   .text.XMC_USIC_CH_RXFIFO_SetSizeTriggerLimit:00000000 XMC_USIC_CH_RXFIFO_SetSizeTriggerLimit
    {standard input}:1348   .text.XMC_USIC_CH_SetInterruptNodePointer:00000000 $t
    {standard input}:1353   .text.XMC_USIC_CH_SetInterruptNodePointer:00000000 XMC_USIC_CH_SetInterruptNodePointer
    {standard input}:1407   .text.XMC_USIC_CH_TXFIFO_SetInterruptNodePointer:00000000 $t
    {standard input}:1412   .text.XMC_USIC_CH_TXFIFO_SetInterruptNodePointer:00000000 XMC_USIC_CH_TXFIFO_SetInterruptNodePointer
    {standard input}:1466   .text.XMC_USIC_CH_RXFIFO_SetInterruptNodePointer:00000000 $t
    {standard input}:1471   .text.XMC_USIC_CH_RXFIFO_SetInterruptNodePointer:00000000 XMC_USIC_CH_RXFIFO_SetInterruptNodePointer
    {standard input}:1525   .text.XMC_USIC_Enable:00000000 $t
    {standard input}:1616   .text.XMC_USIC_Enable:0000006c $d
    {standard input}:1625   .text.XMC_USIC_Disable:00000000 $t
    {standard input}:1630   .text.XMC_USIC_Disable:00000000 XMC_USIC_Disable
    {standard input}:1689   .text.XMC_USIC_Disable:00000040 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
XMC_SCU_CLOCK_GetPeripheralClockFrequency
XMC_SCU_RESET_DeassertPeripheralReset
XMC_SCU_RESET_IsPeripheralResetAsserted
XMC_SCU_RESET_AssertPeripheralReset
