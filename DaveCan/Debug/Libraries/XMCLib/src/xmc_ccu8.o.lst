   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "xmc_ccu8.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.XMC_CCU8_StartPrescaler,"ax",%progbits
  20              	 .align 2
  21              	 .thumb
  22              	 .thumb_func
  24              	XMC_CCU8_StartPrescaler:
  25              	.LFB138:
  26              	 .file 1 "D:/practica/proiect/DaveCan/Libraries/XMCLib/inc/xmc_ccu8.h"
   1:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
   2:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @file xmc_ccu8.h
   3:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @date 2019-03-30
   4:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
   5:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @cond
   6:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  **************************************************************************************************
   7:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMClib v2.1.22 - XMC Peripheral Driver Library 
   8:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
   9:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Copyright (c) 2015-2019, Infineon Technologies AG
  10:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * All rights reserved.                        
  11:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                                             
  12:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * following conditions are met:   
  14:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                                                                              
  15:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * disclaimer.                        
  17:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 
  18:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 
  21:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * products derived from this software without specific prior written permission.                  
  23:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                                                                              
  24:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                                                                              
  32:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  **************************************************************************************************
  35:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  36:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Change History
  37:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * --------------
  38:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  39:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 2015-02-20:
  40:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - Initial <br>
  41:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - Documentation updates <br>
  42:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  43:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 2015-06-20:
  44:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - Removed version macros and declaration of GetDriverVersion API <br>
  45:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - Added XMC_CCU8_SLICE_LoadSelector() API, to select which compare register value has to be 
  46:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *       during external load event.
  47:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  48:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 2015-07-01:
  49:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - In XMC_CCU8_SLICE_CHECK_INTERRUPT macro, fixed the missing item for compare match down for
  50:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  51:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 2015-07-24:
  52:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent() is updated to support XMC14 device. <br>
  53:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  54:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 2015-08-17:
  55:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - XMC_CCU8_SLICE_PRESCALER_t enum is added to set the prescaler divider. <br>
  56:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - XMC_CCU8_SLICE_SHADOW_TRANSFER_MODE_t is added for all the devices except XMC45 devices, t
  57:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *       shadow transfer has to happen. <br>
  58:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - XMC_CCU8_SOURCE_OUT0_t, XMC_CCU8_SOURCE_OUT1_t, XMC_CCU8_SOURCE_OUT2_t, XMC_CCU8_SOURCE_OU
  59:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *       to maps one of the ST to OUT0, OUT1, OUT3, OUT4 signals.
  60:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - In XMC_CCU8_SLICE_COMPARE_CONFIG_t structure, selector_out0, selector_out1, selector_out2,
  61:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *       added to support XMC14 devices.
  62:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - XMC_CCU8_EnableShadowTransfer() API is made as inline, to improve the speed. <br>
  63:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - XMC_CCU8_SLICE_EnableCascadedShadowTransfer(), XMC_CCU8_SLICE_DisableCascadedShadowTransfe
  64:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *       XMC_CCU8_SLICE_SetShadowTransferMode() API are supported for all the devices except XMC45.
  65:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  66:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 2015-09-29:
  67:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - In XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY_t, two more enum items are added to support exte
  68:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *       settings.
  69:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  70:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 2015-10-07:
  71:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - XMC_CCU8_SLICE_SetTimerCompareMatchChannel1(), XMC_CCU8_SLICE_SetTimerCompareMatchChannel2
  72:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *       added to update the respective compare registers directly.
  73:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - XMC_CCU8_SLICE_GetEvent() is made as inline.
  74:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - XMC_CCU8_SLICE_MULTI_IRQ_ID_t is added to support the XMC_CCU8_SLICE_EnableMultipleEvents(
  75:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *       XMC_CCU8_SLICE_DisableMultipleEvents() APIs.
  76:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - DOC updates for the newly added APIs.
  77:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  78:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 2016-03-09:
  79:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - Optimization of write only registers
  80:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  81:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 2016-05-20:
  82:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - Added XMC_CCU8_SLICE_StopClearTimer()
  83:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - Changed XMC_CCU8_SLICE_StopTimer() and XMC_CCU8_SLICE_ClearTimer() 
  84:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  85:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 2017-04-27:
  86:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - XMC_CCU8_SLICE_SetPrescaler() changed div_val parameter to type XMC_CCU8_SLICE_PRESCALER_t
  87:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  88:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 2017-09-15:
  89:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - Fix XMC_CCU8_SLICE_SetShadowTransferMode()
  90:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - Added parity checking functionality
  91:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  92:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 2019-03-30:
  93:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - Changed XMC_CCU8_StartPrescaler(), XMC_CCU8_StartParityChecker(), XMC_CCU8_StopPrescaler()
  94:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *       XMC_CCU8_EnableMultipleClocks(), XMC_CCU8_EnableClock(), XMC_CCU8_DisableClock() to avoid 
  95:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - Changed XMC_CCU8_SLICE_SetEvent(), XMC_CCU8_SLICE_ClearEvent() to avoid RMW access
  96:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - Added XMC_CCU8_SetSuspendMode(), XMC_CCU8_SLICE_GetPrescaler()
  97:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - Added XMC_CCU8_SLICE_GetTimerCompareMatchChannel1() and XMC_CCU8_SLICE_GetTimerCompareMatc
  98:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 
  99:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @endcond
 100:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 101:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 102:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** #ifndef XMC_CCU8_H
 103:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** #define XMC_CCU8_H
 104:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 105:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** /**************************************************************************************************
 106:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * HEADER FILES
 107:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  **************************************************************************************************
 108:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** #include "xmc_common.h"
 109:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 110:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(CCU80)
 111:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 112:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** #if UC_FAMILY == XMC1
 113:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  #include "xmc1_ccu8_map.h"
 114:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
 115:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 116:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** #if UC_FAMILY == XMC4
 117:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  #include "xmc4_ccu8_map.h"
 118:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
 119:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 120:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 121:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @addtogroup XMClib XMC Peripheral Library
 122:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @{
 123:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 124:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 125:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 126:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @addtogroup CCU8
 127:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
 128:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @brief Capture Compare Unit 8 (CCU8) low level driver for XMC family of microcontrollers<br>
 129:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
 130:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The CCU8 peripheral functions play a major role in applications that need complex Pulse Width Mo
 131:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * generation, with complementary high side and low side switches, multi phase control. These funct
 132:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * with a very flexible and programmable signal conditioning scheme, make the CCU8 the must have pe
 133:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * of the art motor control, multi phase and multi level power electronics systems.\n
 134:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Each CCU8 module is comprised of four identical 16 bit Capture/Compare Timer slices, CC8y (where
 135:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * timer slice can work in compare mode or in capture mode.
 136:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
 137:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * APIs provided in this file cover the following functional blocks of CCU8:
 138:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -- Timer configuration, Capture configuration, Function/Event configuration, Interrupt configura
 139:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par Note:
 140:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 1. SLICE (APIs prefixed with e.g. XMC_CCU8_SLICE_)
 141:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 2. Module (APIs are not having any prefix e.g. XMC_CCU8_)
 142:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
 143:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par Timer(Compare mode) configuration:
 144:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This section of the LLD provides the configuration structure XMC_CCU8_SLICE_COMPARE_CONFIG_t, 
 145:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_SLICE_DEAD_TIME_CONFIG_t and the initialization functions XMC_CCU8_SLICE_CompareInit(),
 146:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
 147:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * It can be used to:
 148:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -# Start and Stop the timer. (XMC_CCU8_SLICE_StartTimer(), XMC_CCU8_SLICE_StopTimer())
 149:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -# Update the period, compare, Dither, Prescaler  and Passive values. (XMC_CCU8_SLICE_SetTimerPe
 150:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    XMC_CCU8_SLICE_SetTimerCompareMatch(), XMC_CCU8_SLICE_SetPrescaler(), XMC_CCU8_SLICE_SetDithe
 151:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    XMC_CCU8_SLICE_SetPassiveLevel())
 152:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -# Configure the dead time.(XMC_CCU8_SLICE_SetDeadTimeValue(), XMC_CCU8_SLICE_SetDeadTimePrescal
 153:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -# Enable the slices to support multichannel mode. (XMC_CCU8_SLICE_EnableMultiChannelMode())
 154:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 
 155:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par Capture configuration:
 156:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This section of the LLD provides the configuration structure XMC_CCU8_SLICE_CAPTURE_CONFIG_t and
 157:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * function XMC_CCU8_SLICE_CaptureInit().
 158:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
 159:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * It can be used to:
 160:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -# Configure the capture functionality. (XMC_CCU8_SLICE_Capture0Config(), XMC_CCU8_SLICE_Capture
 161:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -# Read the captured values along with the status, which indicate the value is latest or not.
 162:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    (XMC_CCU8_SLICE_GetCaptureRegisterValue())
 163:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 
 164:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par Function/Event configuration:
 165:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This section of the LLD provides the configuration structure XMC_CCU8_SLICE_EVENT_CONFIG_t.
 166:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 
 167:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * It can be used to:
 168:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -# Enable and Disable the events. (XMC_CCU8_SLICE_EnableEvent(), XMC_CCU8_SLICE_DisableEvent())
 169:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -# Configure to start and stop the timer on external events.(XMC_CCU8_SLICE_StartConfig(), XMC_C
 170:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -# Modulation, external load and Gating of the timer output.(XMC_CCU8_SLICE_ModulationConfig(), 
 171:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    XMC_CCU8_SLICE_LoadConfig(), XMC_CCU8_SLICE_GateConfig())
 172:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -# Control the count direction of the timer based on the external event. (XMC_CCU8_SLICE_Directi
 173:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -# Count the external events.(XMC_CCU8_SLICE_CountConfig())
 174:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -# External Trap. Which can be used as protective feature.(XMC_CCU8_SLICE_EnableTrap(), XMC_CCU8
 175:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    XMC_CCU8_SLICE_TrapConfig())
 176:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
 177:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par Interrupt configuration:
 178:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This section of the LLD provides the function to configure the interrupt node to each event (XMC
 179:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
 180:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @{
 181:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 182:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 183:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** /**************************************************************************************************
 184:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * MACROS
 185:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  **************************************************************************************************
 186:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** #define XMC_CCU8_SLICE_CHECK_INTERRUPT(interrupt) \
 187:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****     ((interrupt == XMC_CCU8_SLICE_IRQ_ID_PERIOD_MATCH)           || \
 188:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****      (interrupt == XMC_CCU8_SLICE_IRQ_ID_ONE_MATCH)              || \
 189:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****      (interrupt == XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_UP_CH_1)  || \
 190:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****      (interrupt == XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_DOWN_CH_1)|| \
 191:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****      (interrupt == XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_UP_CH_2)  || \
 192:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****      (interrupt == XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_DOWN_CH_2)|| \
 193:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****      (interrupt == XMC_CCU8_SLICE_IRQ_ID_EVENT0)                 || \
 194:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****      (interrupt == XMC_CCU8_SLICE_IRQ_ID_EVENT1)                 || \
 195:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****      (interrupt == XMC_CCU8_SLICE_IRQ_ID_EVENT2)                 || \
 196:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****      (interrupt == XMC_CCU8_SLICE_IRQ_ID_TRAP))
 197:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****      
 198:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** /* Macro to check if the slice ptr passed is valid */
 199:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** #define XMC_CCU8_SLICE_CHECK_COMP_CHANNEL(cmp_channel) \
 200:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****     ((cmp_channel == XMC_CCU8_SLICE_COMPARE_CHANNEL_1) || \
 201:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****      (cmp_channel == XMC_CCU8_SLICE_COMPARE_CHANNEL_2))
 202:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 203:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** /**************************************************************************************************
 204:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * ENUMS
 205:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  **************************************************************************************************
 206:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 207:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 208:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Typedef for CCU8 Global data structure
 209:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 210:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef CCU8_GLOBAL_TypeDef XMC_CCU8_MODULE_t;
 211:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 212:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 213:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Typedef for CCU8 Slice data structure
 214:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 215:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef CCU8_CC8_TypeDef XMC_CCU8_SLICE_t;
 216:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 217:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 218:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Return Value of an API
 219:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 220:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_STATUS
 221:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 222:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_STATUS_OK      = 0U, /**< API fulfils request */
 223:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_STATUS_ERROR       , /**< API cannot fulfil request */
 224:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_STATUS_RUNNING     , /**< The timer slice is currently running */
 225:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_STATUS_IDLE          /**< The timer slice is currently idle */
 226:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_STATUS_t;
 227:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 228:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 229:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * CCU8 module clock
 230:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 231:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_CLOCK
 232:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 233:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_CLOCK_SCU        = 0U, /**< Select the fCCU as the clock */
 234:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_CLOCK_EXTERNAL_A     , /**< External clock-A */
 235:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_CLOCK_EXTERNAL_B     , /**< External clock-B */
 236:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_CLOCK_EXTERNAL_C       /**< External clock-C */
 237:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_CLOCK_t;
 238:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 239:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 240:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * CCU8 set the shadow transfer type for multichannel mode
 241:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 242:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER
 243:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 244:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER_SW_SLICE0       = (uint32_t)0x4000000, /**< Shadow transfe
 245:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                      only for slice
 246:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER_SW_MCSS_SLICE0  = (uint32_t)0x4000400, /**< Shadow transfe
 247:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                      and hardware f
 248:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER_SW_SLICE1       = (uint32_t)0x8000000, /**< Shadow transfe
 249:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                      only for slice
 250:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER_SW_MCSS_SLICE1  = (uint32_t)0x8000800, /**< Shadow transfe
 251:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                      and hardware f
 252:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER_SW_SLICE2       = (uint32_t)0x10000000, /**< Shadow transf
 253:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                       only for slic
 254:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER_SW_MCSS_SLICE2  = (uint32_t)0x10001000, /**< Shadow transf
 255:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                       and hardware 
 256:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER_SW_SLICE3       = (uint32_t)0x20000000, /**< Shadow transf
 257:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                       only for slic
 258:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER_SW_MCSS_SLICE3  = (uint32_t)0x20002000  /**< Shadow transf
 259:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                       and hardware 
 260:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER_t;
 261:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 262:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 263:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Operational modes of CCU8 slice
 264:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 265:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_MODE
 266:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 267:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MODE_COMPARE  = 0U, /**< slice(CC8y) operates in Compare Mode */
 268:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MODE_CAPTURE        /**< slice(CC8y) operates in Capture Mode */
 269:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_MODE_t;
 270:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 271:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 272:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Slice Output selection
 273:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 274:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_OUTPUT
 275:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 276:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_OUTPUT_0  = 1U, /**< Slice Output-0 */
 277:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_OUTPUT_1  = 2U, /**< Slice Output-1 */
 278:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_OUTPUT_2  = 4U, /**< Slice Output-2 */
 279:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_OUTPUT_3  = 8U  /**< Slice Output-3 */
 280:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_OUTPUT_t;
 281:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 282:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 283:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Timer counting modes for the slice
 284:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 285:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_TIMER_COUNT_MODE
 286:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 287:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TIMER_COUNT_MODE_EA  = 0U, /**< Edge Aligned Mode */
 288:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TIMER_COUNT_MODE_CA        /**< Centre Aligned Mode */
 289:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_TIMER_COUNT_MODE_t;
 290:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 291:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 292:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Timer repetition mode for the slice
 293:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 294:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_TIMER_REPEAT_MODE
 295:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 296:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TIMER_REPEAT_MODE_REPEAT = 0U, /**< Repetitive mode: continuous mode of operation 
 297:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TIMER_REPEAT_MODE_SINGLE       /**< Single shot mode: Once a Period match/One matc
 298:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                      occurs timer goes to idle state */
 299:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_TIMER_REPEAT_MODE_t;
 300:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 301:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 302:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Timer counting direction for the CCU8 slice
 303:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 304:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_TIMER_COUNT_DIR
 305:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 306:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TIMER_COUNT_DIR_UP   = 0U, /**< Counting up */
 307:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TIMER_COUNT_DIR_DOWN       /**< Counting down */
 308:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_TIMER_COUNT_DIR_t;
 309:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 310:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 311:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Capture mode register sets
 312:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 313:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_CAP_REG_SET
 314:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 315:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_CAP_REG_SET_LOW  = 0U, /**< Capture register-0, Capture register-1 used */
 316:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_CAP_REG_SET_HIGH       /**< Capture register-0, Capture register-1 used */
 317:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_CAP_REG_SET_t;
 318:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 319:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 320:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Prescaler mode
 321:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 322:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_PRESCALER_MODE
 323:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 324:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_MODE_NORMAL = 0U, /**< Fixed division of module clock */
 325:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_MODE_FLOAT        /**< Floating divider */
 326:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_PRESCALER_MODE_t;
 327:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 328:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 329:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Timer output passive level
 330:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 331:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_OUTPUT_PASSIVE_LEVEL
 332:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 333:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_OUTPUT_PASSIVE_LEVEL_LOW  = 0U, /**< Passive level = Low */
 334:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_OUTPUT_PASSIVE_LEVEL_HIGH       /**< Passive level = High */
 335:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_OUTPUT_PASSIVE_LEVEL_t;
 336:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 337:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 338:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Compare Channel selection
 339:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 340:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_COMPARE_CHANNEL
 341:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 342:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_COMPARE_CHANNEL_1  = 0U, /**< Compare Channel-1 */
 343:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_COMPARE_CHANNEL_2        /**< Compare Channel-2 */
 344:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_COMPARE_CHANNEL_t;
 345:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 346:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 347:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Timer clock Divider
 348:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 349:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_PRESCALER
 350:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 351:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_1  = 0U, /**< Slice Clock = fccu8 */
 352:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_2      , /**< Slice Clock = fccu8/2 */
 353:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_4      , /**< Slice Clock = fccu8/4 */
 354:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_8      , /**< Slice Clock = fccu8/8 */
 355:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_16     , /**< Slice Clock = fccu8/16 */
 356:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_32     , /**< Slice Clock = fccu8/32 */
 357:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_64     , /**< Slice Clock = fccu8/64 */
 358:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_128    , /**< Slice Clock = fccu8/128 */
 359:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_256    , /**< Slice Clock = fccu8/256 */
 360:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_512    , /**< Slice Clock = fccu8/512 */
 361:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_1024   , /**< Slice Clock = fccu8/1024 */
 362:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_2048   , /**< Slice Clock = fccu8/2048 */
 363:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_4096   , /**< Slice Clock = fccu8/4096 */
 364:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_8192   , /**< Slice Clock = fccu8/8192 */
 365:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_16384  , /**< Slice Clock = fccu8/16384 */
 366:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_32768    /**< Slice Clock = fccu8/32768 */
 367:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_PRESCALER_t;
 368:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 369:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 370:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Dead Time Generator Clock Divider
 371:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 372:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_DTC_DIV
 373:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 374:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_DTC_DIV_1  = 0U, /**< DTC clock = Slice Clock */
 375:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_DTC_DIV_2      , /**< DTC clock = Slice Clock/2 */
 376:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_DTC_DIV_4      , /**< DTC clock = Slice Clock/4 */
 377:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_DTC_DIV_8        /**< DTC clock = Slice Clock/8 */
 378:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_DTC_DIV_t;
 379:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 380:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 381:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 382:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  The compare channel output which is routed to the slice output signal(STy).
 383:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 384:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_STATUS
 385:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 386:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_STATUS_CHANNEL_1        = 0U, /**< Channel-1 status connected to Slice Status */
 387:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_STATUS_CHANNEL_2            , /**< Channel-2 status connected to Slice Status */
 388:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_STATUS_CHANNEL_1_AND_2      , /**< \b Wired \b AND of Channel-1 and Channel-2 stat
 389:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                     Slice status */
 390:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** #if ((UC_SERIES == XMC13) || (UC_SERIES == XMC14)) || defined(DOXYGEN)
 391:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_STATUS_CHANNEL_1_OR_2         /**< \b Wired \b OR of Channel-1 and Channel-2 statu
 392:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                     status. @note Only available for XMC1300 and XM
 393:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
 394:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_STATUS_t;
 395:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 396:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 397:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Compare channel for which modulation has to be applied
 398:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 399:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_MODULATION_CHANNEL
 400:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 401:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MODULATION_CHANNEL_NONE  = 0U, /**< No modulation */
 402:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MODULATION_CHANNEL_1         , /**< Modulation for Compare Channel-1 */
 403:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MODULATION_CHANNEL_2         , /**< Modulation for Compare Channel-2 */
 404:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MODULATION_CHANNEL_1_AND_2     /**< Modulation for Compare Channel-1 and Compare C
 405:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_MODULATION_CHANNEL_t;
 406:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 407:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 408:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  External Function list
 409:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 410:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_FUNCTION
 411:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 412:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_START           = 0U, /**< Start function */
 413:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_STOP                , /**< Stop function */
 414:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_CAPTURE_EVENT0      , /**< Capture Event-0 function, CCycapt0 signal is u
 415:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                      generation */
 416:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_CAPTURE_EVENT1      , /**< Capture Event-1 function, CCycapt1 signal is u
 417:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                      generation */
 418:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_GATING              , /**< Gating function */
 419:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_DIRECTION           , /**< Direction function */
 420:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_LOAD                , /**< Load function */
 421:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_COUNT               , /**< Counting function */
 422:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_OVERRIDE            , /**< Override function */
 423:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_MODULATION          , /**< Modulation function */
 424:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_TRAP                  /**< Trap function */
 425:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_FUNCTION_t;
 426:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 427:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 428:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  External Event list
 429:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 430:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_EVENT
 431:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 432:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_NONE  = 0U, /**< None */
 433:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_0         , /**< Event-0 */
 434:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_1         , /**< Event-1 */
 435:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_2           /**< Event-2 */
 436:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_EVENT_t;
 437:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 438:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 439:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  External Event trigger criteria  - Edge sensitivity
 440:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 441:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_EVENT_EDGE_SENSITIVITY
 442:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 443:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_EDGE_SENSITIVITY_NONE          = 0U, /**< None */
 444:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_EDGE_SENSITIVITY_RISING_EDGE       , /**< Rising Edge of the input signal ge
 445:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                  event trigger */
 446:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_EDGE_SENSITIVITY_FALLING_EDGE      , /**< Falling Edge of the input signal g
 447:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                  trigger */
 448:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_EDGE_SENSITIVITY_DUAL_EDGE           /**< Both Rising and Falling edges caus
 449:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_EVENT_EDGE_SENSITIVITY_t;
 450:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 451:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 452:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  External Event trigger criteria  - Level sensitivity
 453:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 454:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY
 455:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 456:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY_ACTIVE_HIGH = 0U, /**< Level sensitive functions react to 
 457:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY_ACTIVE_LOW  = 1U, /**< Level sensitive functions react to 
 458:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****     /* Below enum items can be utilised specific to the functionality */
 459:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY_COUNT_UP_ON_LOW = 0U, /**< Timer counts up, during Low sta
 460:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY_COUNT_UP_ON_HIGH = 1U /**< Timer counts up, during High st
 461:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY_t;
 462:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 463:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 464:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Low pass filter Configuration. The External Event input should be stable for a selected number 
 465:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 466:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_EVENT_FILTER
 467:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 468:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_FILTER_DISABLED  = 0U, /**< No Low Pass Filtering is applied */
 469:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_FILTER_3_CYCLES      , /**< Input should be stable for 3 clock cycles */
 470:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_FILTER_5_CYCLES      , /**< Input should be stable for 5 clock cycles */
 471:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_FILTER_7_CYCLES        /**< Input should be stable for 7 clock cycles */
 472:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_EVENT_FILTER_t;
 473:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 474:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 475:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  External Event Input list. This list depicts the possible input connections to the CCU8 slice.
 476:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Interconnects are specific to each device.
 477:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 478:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef uint8_t XMC_CCU8_SLICE_INPUT_t;
 479:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 480:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 481:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 482:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Actions that can be performed upon detection of an external Timer STOP event
 483:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 484:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_END_MODE
 485:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 486:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_END_MODE_TIMER_STOP       = 0U, /**< Stops the timer, without clearing TIMER regis
 487:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_END_MODE_TIMER_CLEAR          , /**< Without stopping timer, clears the TIMER regi
 488:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_END_MODE_TIMER_STOP_CLEAR       /**< Stops the timer and clears the TIMER register
 489:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_END_MODE_t;
 490:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 491:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 492:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Actions that can be performed upon detection of an external Timer START event
 493:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 494:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_START_MODE
 495:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 496:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_START_MODE_TIMER_START       = 0U, /**< Start the timer from the current count of 
 497:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_START_MODE_TIMER_START_CLEAR       /**< Clears the TIMER register and start the ti
 498:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_START_MODE_t;
 499:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 500:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 501:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Modulation of timer output signals
 502:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 503:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_MODULATION_MODE
 504:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 505:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MODULATION_MODE_CLEAR_ST_OUT  = 0U, /**< Clear ST and OUT signals */
 506:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MODULATION_MODE_CLEAR_OUT           /**< Clear only the OUT signal */
 507:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_MODULATION_MODE_t;
 508:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 509:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 510:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Trap exit mode
 511:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 512:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_TRAP_EXIT_MODE
 513:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 514:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TRAP_EXIT_MODE_AUTOMATIC = 0U, /**< Clear trap state as soon as the trap signal is
 515:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TRAP_EXIT_MODE_SW              /**< Clear only when acknowledged by software */
 516:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_TRAP_EXIT_MODE_t;
 517:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 518:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 519:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Timer clear on capture
 520:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 521:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_TIMER_CLEAR_MODE
 522:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 523:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TIMER_CLEAR_MODE_NEVER    = 0U, /**< Never clear the timer on any capture event */
 524:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TIMER_CLEAR_MODE_CAP_HIGH     , /**< Clear only when timer value has been captured
 525:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TIMER_CLEAR_MODE_CAP_LOW      , /**< Clear only when timer value has been captured
 526:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TIMER_CLEAR_MODE_ALWAYS         /**< Always clear the timer upon detection of any 
 527:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_TIMER_CLEAR_MODE_t;
 528:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 529:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 530:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Multi Channel Shadow transfer request configuration options
 531:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 532:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_MCMS_ACTION
 533:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 534:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MCMS_ACTION_TRANSFER_PR_CR          = 0U, /**< Transfer Compare and Period Shadow 
 535:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                 the actual registers upon MCS xfer 
 536:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MCMS_ACTION_TRANSFER_PR_CR_PCMP     = 1U, /**< Transfer Compare, Period and Presca
 537:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                 register values to the actual regis
 538:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                 request */
 539:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MCMS_ACTION_TRANSFER_PR_CR_PCMP_DIT = 3U  /**< Transfer Compare, Period ,Prescaler
 540:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                 Compare register values to the actu
 541:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                 MCS xfer request */
 542:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_MCMS_ACTION_t;
 543:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 544:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 545:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Available Interrupt Event Ids
 546:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 547:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_IRQ_ID
 548:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 549:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_IRQ_ID_PERIOD_MATCH            = 0U , /**< Period match counting up */
 550:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_IRQ_ID_ONE_MATCH               = 1U , /**< One match counting down */
 551:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_UP_CH_1   = 2U , /**< Compare match counting up for channel 1
 552:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_DOWN_CH_1 = 3U , /**< Compare match counting down for channel
 553:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_UP_CH_2   = 4U , /**< Compare match counting up for channel 2
 554:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_DOWN_CH_2 = 5U , /**< Compare match counting down for channel
 555:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_IRQ_ID_EVENT0                  = 8U , /**< Event-0 occurrence */
 556:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_IRQ_ID_EVENT1                  = 9U , /**< Event-1 occurrence */
 557:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_IRQ_ID_EVENT2                  = 10U, /**< Event-2 occurrence */
 558:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_IRQ_ID_TRAP                    = 11U  /**< Trap occurrence */
 559:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_IRQ_ID_t;
 560:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 561:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 562:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Available Interrupt Event Ids, which is added to support multi event APIs
 563:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 564:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_MULTI_IRQ_ID
 565:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 566:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MULTI_IRQ_ID_PERIOD_MATCH            = 0x1U,   /**< Period match counting up */
 567:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MULTI_IRQ_ID_ONE_MATCH               = 0x2U,   /**< One match counting down */
 568:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MULTI_IRQ_ID_COMPARE_MATCH_UP_CH_1   = 0x4U,   /**< Compare match counting up for 
 569:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MULTI_IRQ_ID_COMPARE_MATCH_DOWN_CH_1 = 0x8U,   /**< Compare match counting down fo
 570:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MULTI_IRQ_ID_COMPARE_MATCH_UP_CH_2   = 0x10U,  /**< Compare match counting up for 
 571:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MULTI_IRQ_ID_COMPARE_MATCH_DOWN_CH_2 = 0x20U,  /**< Compare match counting down fo
 572:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MULTI_IRQ_ID_EVENT0                  = 0x100U, /**< Event-0 occurrence */
 573:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MULTI_IRQ_ID_EVENT1                  = 0x200U, /**< Event-1 occurrence */
 574:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MULTI_IRQ_ID_EVENT2                  = 0x400U, /**< Event-2 occurrence */
 575:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_MULTI_IRQ_ID_t;
 576:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 577:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 578:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Service Request Lines for CCU8. Event are mapped to these SR lines and these are used to generat
 579:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 580:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_SR_ID
 581:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 582:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_SR_ID_0    = 0U, /**< Service Request Line-0 selected  */
 583:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_SR_ID_1        , /**< Service Request Line-1 selected  */
 584:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_SR_ID_2        , /**< Service Request Line-2 selected  */
 585:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_SR_ID_3          /**< Service Request Line-3 selected  */
 586:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_SR_ID_t;
 587:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 588:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 589:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 590:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Slice shadow transfer options.
 591:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 592:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SHADOW_TRANSFER
 593:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 594:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_SLICE_0            = CCU8_GCSS_S0SE_Msk,  /**< Transfer Period, Compare 
 595:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           shadow register values to
 596:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           SLICE-0 */
 597:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_DITHER_SLICE_0     = CCU8_GCSS_S0DSE_Msk, /**< Transfer Dither compare s
 598:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           to actual register for SL
 599:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_PRESCALER_SLICE_0  = CCU8_GCSS_S0PSE_Msk, /**< Transfer Prescaler shadow
 600:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           actual register for SLICE
 601:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_SLICE_1            = CCU8_GCSS_S1SE_Msk,  /**< Transfer Period, Compare 
 602:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           shadow register values to
 603:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           SLICE-1 */
 604:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_DITHER_SLICE_1     = CCU8_GCSS_S1DSE_Msk, /**< Transfer Dither compare s
 605:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           to actual registers for S
 606:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_PRESCALER_SLICE_1  = CCU8_GCSS_S1PSE_Msk, /**< Transfer Prescaler shadow
 607:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           actual register for SLICE
 608:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_SLICE_2            = CCU8_GCSS_S2SE_Msk,  /**< Transfer Period, Compare 
 609:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           shadow register values to
 610:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           SLICE-2 */
 611:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_DITHER_SLICE_2     = CCU8_GCSS_S2DSE_Msk, /**< Transfer Dither compare s
 612:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           to actual register for SL
 613:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_PRESCALER_SLICE_2  = CCU8_GCSS_S2PSE_Msk, /**< Transfer Prescaler shadow
 614:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           actual register for SLICE
 615:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_SLICE_3            = CCU8_GCSS_S3SE_Msk,  /**< Transfer Period, Compare 
 616:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           shadow register values to
 617:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           SLICE-3 */
 618:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_DITHER_SLICE_3     = CCU8_GCSS_S3DSE_Msk, /**< Transfer Dither compare s
 619:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           to actual register for SL
 620:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_PRESCALER_SLICE_3  = CCU8_GCSS_S3PSE_Msk  /**< Transfer Prescaler shadow
 621:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           actual register for SLICE
 622:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SHADOW_TRANSFER_t;
 623:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 624:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** #if (UC_SERIES != XMC45) || defined(DOXYGEN)
 625:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 626:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Slice shadow transfer mode options.
 627:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @note Not available for XMC4500 series
 628:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 629:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_SHADOW_TRANSFER_MODE
 630:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 631:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_SHADOW_TRANSFER_MODE_IN_PERIOD_MATCH_AND_ONE_MATCH = 0U, /**< Shadow transfer is d
 632:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                One match. */
 633:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_SHADOW_TRANSFER_MODE_ONLY_IN_PERIOD_MATCH = 1U,  /**< Shadow transfer is done only
 634:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_SHADOW_TRANSFER_MODE_ONLY_IN_ONE_MATCH = 2U  /**< Shadow transfer is done only in 
 635:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_SHADOW_TRANSFER_MODE_t;
 636:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
 637:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 638:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(CCU8V3) || defined(DOXYGEN) /* Defined for XMC1400 devices only */
 639:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 640:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Output sources for OUTy0 signal
 641:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @note Only available for XMC1400 series
 642:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 643:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  typedef enum XMC_CCU8_SOURCE_OUT0
 644:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 645:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT0_ST1      = (uint32_t)0x0, /**< CCU8yST1 signal path is connected the CCU8x.O
 646:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT0_INV_ST1  = (uint32_t)0x1, /**< Inverted CCU8yST1 signal path is connected th
 647:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT0_ST2      = (uint32_t)0x2, /**< CCU8yST2 signal path is connected the CCU8x.O
 648:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT0_INV_ST2  = (uint32_t)0x3  /**< Inverted CCU8yST2 signal path is connected th
 649:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SOURCE_OUT0_t;
 650:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 651:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 652:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Output sources for OUTy1 signal
 653:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  @note Only available for XMC1400 series
 654:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 655:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  typedef enum XMC_CCU8_SOURCE_OUT1
 656:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 657:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT1_ST1      = (uint32_t)0x1, /**< CCU8yST1 signal path is connected the CCU8x.O
 658:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT1_INV_ST1  = (uint32_t)0x0, /**< Inverted CCU8yST1 signal path is connected th
 659:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT1_ST2      = (uint32_t)0x3, /**< CCU8yST2 signal path is connected the CCU8x.O
 660:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT1_INV_ST2  = (uint32_t)0x2  /**< Inverted CCU8yST2 signal path is connected th
 661:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SOURCE_OUT1_t;
 662:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 663:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 664:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Output sources for OUTy2 signal
 665:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @note Only available for XMC1400 series
 666:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 667:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  typedef enum XMC_CCU8_SOURCE_OUT2
 668:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 669:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT2_ST2      = (uint32_t)0x0, /**< CCU8yST2 signal path is connected the CCU8x.O
 670:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT2_INV_ST2  = (uint32_t)0x1, /**< Inverted CCU8yST2 signal path is connected th
 671:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT2_ST1      = (uint32_t)0x2, /**< CCU8yST1 signal path is connected the CCU8x.O
 672:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT2_INV_ST1  = (uint32_t)0x3  /**< Inverted CCU8yST1 signal path is connected th
 673:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SOURCE_OUT2_t;
 674:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 675:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 676:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Output sources for OUTy3 signal
 677:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  @note Only available for XMC1400 series
 678:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 679:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  typedef enum XMC_CCU8_SOURCE_OUT3
 680:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 681:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT3_ST2      = (uint32_t)0x1, /**< CCU8yST2 signal path is connected the CCU8x.O
 682:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT3_INV_ST2  = (uint32_t)0x0, /**< Inverted CCU8yST2 signal path is connected th
 683:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT3_ST1      = (uint32_t)0x3, /**< CCU8yST1 signal path is connected the CCU8x.O
 684:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT3_INV_ST1  = (uint32_t)0x2  /**< Inverted CCU8yST1 signal path is connected th
 685:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SOURCE_OUT3_t;
 686:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
 687:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 688:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 689:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 690:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Output selector for CCU8x.OUT0-3
 691:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 692:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** #if !defined(CCU8V3) /* Defined for all devices except XMC1400 */
 693:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_OUT_PATH
 694:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 695:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT0_ST1      = (uint32_t)0x20000, /**< CCU8yST1 signal path is connected the C
 696:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT0_INV_ST1  = (uint32_t)0x20002, /**< Inverted CCU8yST1 signal path is connec
 697:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT1_ST1      = (uint32_t)0x40000, /**< CCU8yST1 signal path is connected the C
 698:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT1_INV_ST1  = (uint32_t)0x40004, /**< Inverted CCU8yST1 signal path is connec
 699:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT2_ST2      = (uint32_t)0x80000, /**< CCU8yST2 signal path is connected the C
 700:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT2_INV_ST2  = (uint32_t)0x80008, /**< Inverted CCU8yST2 signal path is connec
 701:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT3_ST2      = (uint32_t)0x100000,/**< CCU8yST2 signal path is connected the C
 702:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT3_INV_ST1  = (uint32_t)0x100010 /**< Inverted CCU8yST2 signal path is connec
 703:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_OUT_PATH_t;
 704:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** #else
 705:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_OUT_PATH
 706:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 707:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT0_ST1      = (uint32_t)0x000C0, /**< CCU8yST1 signal path is connected the C
 708:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT0_INV_ST1  = (uint32_t)0x000D0, /**< Inverted CCU8yST1 signal path is connec
 709:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT0_ST2      = (uint32_t)0x000E0, /**< CCU8yST2 signal path is connected the C
 710:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT0_INV_ST2  = (uint32_t)0x000F0, /**< Inverted CCU8yST2 signal path is connec
 711:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT1_ST1      = (uint32_t)0x00D00, /**< CCU8yST1 signal path is connected the C
 712:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT1_INV_ST1  = (uint32_t)0x00C00, /**< Inverted CCU8yST1 signal path is connec
 713:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT1_ST2      = (uint32_t)0x00F00, /**< CCU8yST2 signal path is connected the C
 714:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT1_INV_ST2  = (uint32_t)0x00E00, /**< Inverted CCU8yST2 signal path is connec
 715:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT2_ST2      = (uint32_t)0x0C000, /**< CCU8yST2 signal path is connected the C
 716:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT2_INV_ST2  = (uint32_t)0x0D000, /**< Inverted CCU8yST2 signal path is connec
 717:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT2_ST1      = (uint32_t)0x0E000, /**< CCU8yST1 signal path is connected the C
 718:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT2_INV_ST1  = (uint32_t)0x0F000, /**< Inverted CCU8yST1 signal path is connec
 719:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT3_ST2      = (uint32_t)0xD0000, /**< CCU8yST2 signal path is connected the C
 720:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT3_INV_ST2  = (uint32_t)0xC0000, /**< Inverted CCU8yST2 signal path is connec
 721:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT3_ST1      = (uint32_t)0xF0000, /**< CCU8yST1 signal path is connected the C
 722:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT3_INV_ST1  = (uint32_t)0xE0000  /**< Inverted CCU8yST1 signal path is connec
 723:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_OUT_PATH_t;
 724:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 725:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 726:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Immediate write into configuration register
 727:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  @note Only available for XMC1400 series
 728:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 729:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_WRITE_INTO
 730:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 731:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_WRITE_INTO_PERIOD_CONFIGURATION = CCU8_CC8_STC_IRPC_Msk,                  /**< Imm
 732:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                 Wri
 733:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                 Con
 734:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_WRITE_INTO_COMPARE1_CONFIGURATION = CCU8_CC8_STC_IRCC1_Msk,               /**< Imm
 735:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                 Wri
 736:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                 Con
 737:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_WRITE_INTO_COMPARE2_CONFIGURATION = CCU8_CC8_STC_IRCC2_Msk,               /**< Imm
 738:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                 Wri
 739:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                 Con
 740:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_WRITE_INTO_PASSIVE_LEVEL_CONFIGURATION = CCU8_CC8_STC_IRLC_Msk,           /**< Imm
 741:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                 Wri
 742:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                                                            Config
 743:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_WRITE_INTO_DITHER_VALUE_CONFIGURATION = CCU8_CC8_STC_IRDC_Msk,            /**< Imm
 744:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                 Wri
 745:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                                                            Config
 746:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_WRITE_INTO_FLOATING_PRESCALER_VALUE_CONFIGURATION = CCU8_CC8_STC_IRFC_Msk /**< Imm
 747:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                 Wri
 748:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                 Val
 749:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_WRITE_INTO_t;
 750:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 751:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 752:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 753:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Automatic Shadow Transfer request when writing into shadow register
 754:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  @note Only available for XMC1400 series
 755:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 756:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO
 757:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 758:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_PERIOD_SHADOW = CCU8_CC8_STC_ASPC_Msk,        
 759:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                                                                  
 760:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                    
 761:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                    
 762:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_COMPARE1_SHADOW = CCU8_CC8_STC_ASCC1_Msk,     
 763:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                                                                  
 764:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                                                                  
 765:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                                                                  
 766:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_COMPARE2_SHADOW = CCU8_CC8_STC_ASCC2_Msk,     
 767:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                                                                  
 768:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                                                                  
 769:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                                                                  
 770:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_PASSIVE_LEVEL = CCU8_CC8_STC_ASLC_Msk,        
 771:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                                                                  
 772:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                    
 773:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_DITHER_SHADOW = CCU8_CC8_STC_ASDC_Msk,        
 774:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                    
 775:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                    
 776:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_FLOATING_PRESCALER_SHADOW = CCU8_CC8_STC_ASFC_
 777:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                                                                  
 778:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                    
 779:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                    
 780:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 781:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_t;
 782:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
 783:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 784:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 785:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  CCU8 slice mask which can be used for the APIs as input where multi slice support is available
 786:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 787:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_MASK
 788:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 789:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MASK_SLICE_0  = 1U , /**< SLICE-0 */
 790:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MASK_SLICE_1  = 2U , /**< SLICE-1 */
 791:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MASK_SLICE_2  = 4U , /**< SLICE-2 */
 792:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MASK_SLICE_3  = 8U   /**< SLICE-3 */
 793:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_MASK_t;
 794:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 795:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 796:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Selects which signal is controlling the delay between the change at the CCU8 outputs and effect
 797:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 798:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_PARITY_CHECKER_DELAY_INPUT
 799:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 800:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_PARITY_CHECKER_DELAY_INPUT_IGBTA = 0 << CCU8_GPCHK_PCDS_Pos,
 801:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_PARITY_CHECKER_DELAY_INPUT_IGBTB = 1 << CCU8_GPCHK_PCDS_Pos,
 802:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_PARITY_CHECKER_DELAY_INPUT_IGBTC = 2 << CCU8_GPCHK_PCDS_Pos,
 803:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_PARITY_CHECKER_DELAY_INPUT_IGBTD = 3 << CCU8_GPCHK_PCDS_Pos
 804:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_PARITY_CHECKER_DELAY_INPUT_t;
 805:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 806:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 807:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 808:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Selects which signal contains the driver parity information
 809:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 810:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_PARITY_CHECKER_DRIVER_INPUT
 811:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 812:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_PARITY_CHECKER_DRIVER_INPUT_SLICE_0 = 0 << CCU8_GPCHK_PISEL_Pos,
 813:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_PARITY_CHECKER_DRIVER_INPUT_SLICE_1 = 1 << CCU8_GPCHK_PISEL_Pos,
 814:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_PARITY_CHECKER_DRIVER_INPUT_SLICE_2 = 2 << CCU8_GPCHK_PISEL_Pos,
 815:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_PARITY_CHECKER_DRIVER_INPUT_SLICE_3 = 3 << CCU8_GPCHK_PISEL_Pos,
 816:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_PARITY_CHECKER_DRIVER_INPUT_t;
 817:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 818:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 819:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Selects if we have an odd or even parity
 820:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 821:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_PARITY_CHECKER_TYPE
 822:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 823:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_PARITY_CHECKER_TYPE_EVEN = 0 << CCU8_GPCHK_PCTS_Pos,
 824:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_PARITY_CHECKER_TYPE_ODD = 1 << CCU8_GPCHK_PCTS_Pos,
 825:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_PARITY_CHECKER_TYPE_t;
 826:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 827:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 828:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Selects suspend mode
 829:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 830:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SUSPEND_MODE
 831:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 832:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SUSPEND_MODE_IGNORE = 0 << CCU8_GCTRL_SUSCFG_Pos, /**< Suspend request ignored. The modu
 833:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SUSPEND_MODE_STOPS_INMEDIATELLY = 1 << CCU8_GCTRL_SUSCFG_Pos, /**< Stops all the running
 834:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SUSPEND_MODE_SAFE_STOP = 2 << CCU8_GCTRL_SUSCFG_Pos, /**< Stops the block immediately an
 835:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SUSPEND_MODE_WAIT_ROLL_OVER = 3 << CCU8_GCTRL_SUSCFG_Pos /**< Waits for the roll over of
 836:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SUSPEND_MODE_t;
 837:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 838:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** /**************************************************************************************************
 839:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * DATA STRUCTURES
 840:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  **************************************************************************************************
 841:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 842:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 843:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Configuration data structure of an External Event(Event-0/1/2).
 844:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Needed to configure the various aspects of an External Event.
 845:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  This structure will not connect the external event with an external function.
 846:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 847:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef struct XMC_CCU8_SLICE_EVENT_CONFIG
 848:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 849:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_INPUT_t                   mapped_input; /**< Required input signal for the Event. 
 850:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_EDGE_SENSITIVITY_t  edge;         /**< Select the event edge of the input si
 851:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                               This is needed for an edge sensitive 
 852:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY_t level;        /**< Select the event level of the input s
 853:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                               This is needed for an level sensitive
 854:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_FILTER_t            duration;     /**< Low Pass filter duration in terms of 
 855:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_EVENT_CONFIG_t;
 856:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 857:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** /*Anonymous structure/union guard start*/
 858:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(__CC_ARM)
 859:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   #pragma push
 860:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   #pragma anon_unions
 861:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** #elif defined(__TASKING__)
 862:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   #pragma warning 586
 863:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
 864:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 865:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 866:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Dead Time configuration
 867:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 868:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef struct XMC_CCU8_SLICE_DEAD_TIME_CONFIG
 869:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 870:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   union
 871:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   {
 872:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****     struct
 873:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****     {
 874:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t enable_dead_time_channel1 : 1; /**< Enable dead time for Compare Channel-1 */
 875:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t enable_dead_time_channel2 : 1; /**< Enable dead time for Compare Channel-2 */
 876:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t channel1_st_path : 1;          /**< Should dead time be applied to ST output of Comp
 877:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t channel1_inv_st_path : 1;      /**< Should dead time be applied to inverse ST output
 878:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                    Compare Channel-1? */
 879:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t channel2_st_path : 1;          /**< Should dead time be applied to ST output of Comp
 880:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t channel2_inv_st_path : 1;      /**< Should dead time be applied to inverse ST output
 881:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                    Compare Channel-2? */
 882:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t div : 2;                       /**< Dead time prescaler divider value.
 883:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                    Accepts enum ::XMC_CCU8_SLICE_DTC_DIV_t*/
 884:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 24;
 885:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****     };
 886:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****     uint32_t dtc;
 887:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   };
 888:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   union
 889:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   {
 890:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****     struct
 891:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****     {
 892:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t channel1_st_rising_edge_counter : 8; /**< Contains the delay value that is applied t
 893:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                       for compare channel-1. Range: [0x0 to 0xFF]
 894:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t channel1_st_falling_edge_counter : 8; /**< Contains the delay value that is applied 
 895:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                        for compare channel-1. Range: [0x0 to 0xFF
 896:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 16;
 897:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****     };
 898:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****     uint32_t dc1r;
 899:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   };
 900:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   union
 901:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   {
 902:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****     struct
 903:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****     {
 904:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t channel2_st_rising_edge_counter : 8; /**< Contains the delay value that is applied t
 905:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                     for compare channel-2. Range: [0x0 to 0xFF]*/
 906:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t channel2_st_falling_edge_counter : 8; /**< Contains the delay value that is applied 
 907:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                     for compare channel-2. Range: [0x0 to 0xFF]*/
 908:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 16;
 909:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****     };
 910:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****     uint32_t dc2r;
 911:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   };
 912:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_DEAD_TIME_CONFIG_t;
 913:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 914:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 915:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Configuration data structure for CCU8 slice. Specifically configures the CCU8 slice to compare 
 916:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  This excludes event and function configuration.
 917:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 918:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef struct XMC_CCU8_SLICE_COMPARE_CONFIG
 919:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 920:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   union
 921:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   {
 922:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****     struct
 923:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****     {
 924:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t timer_mode : 1;         /**< Edge aligned or Centre Aligned.
 925:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             Accepts enum :: XMC_CCU8_SLICE_TIMER_COUNT_MODE_t */
 926:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t monoshot : 1;           /**< Single shot or Continuous mode .
 927:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             Accepts enum :: XMC_CCU8_SLICE_TIMER_REPEAT_MODE_t */
 928:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t shadow_xfer_clear : 1; /**< Should PR and CR shadow xfer happen when timer is cleare
 929:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 10;
 930:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t dither_timer_period: 1; /**< Can the period of the timer dither? */
 931:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t dither_duty_cycle : 1;  /**< Can the compare match of the timer dither? */
 932:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 1;
 933:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t prescaler_mode: 1;      /**< Normal or floating prescaler mode.
 934:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             Accepts enum :: XMC_CCU8_SLICE_PRESCALER_MODE_t */
 935:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 8;
 936:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t mcm_ch1_enable : 1;     /**< Multi-Channel mode for compare channel 1 enable? */
 937:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t mcm_ch2_enable : 1;     /**< Multi-Channel mode for compare channel 2 enable? */
 938:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 2;
 939:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t slice_status : 2;       /**< Which of the two channels drives the slice status outpu
 940:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                          Accepts enum :: XMC_CCU8_SLICE_STATUS_t*/
 941:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 1;
 942:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****     };
 943:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****     uint32_t tc;
 944:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   };
 945:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   union
 946:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   {
 947:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****     struct
 948:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****     {
 949:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t passive_level_out0 : 1; /**< ST and OUT passive levels Configuration for OUT0. 
 950:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                          Accepts enum :: XMC_CCU8_SLICE_OUTPUT_PASSIVE_LEVEL_t */
 951:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t passive_level_out1 : 1; /**< ST and OUT passive levels Configuration for OUT1. 
 952:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                          Accepts enum :: XMC_CCU8_SLICE_OUTPUT_PASSIVE_LEVEL_t */
 953:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t passive_level_out2 : 1; /**< ST and OUT passive levels Configuration for OUT2. 
 954:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                          Accepts enum :: XMC_CCU8_SLICE_OUTPUT_PASSIVE_LEVEL_t */
 955:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t passive_level_out3 : 1; /**< ST and OUT passive levels Configuration for OUT3. 
 956:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                          Accepts enum :: XMC_CCU8_SLICE_OUTPUT_PASSIVE_LEVEL_t */
 957:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 28;
 958:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****     };
 959:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****     uint32_t psl;
 960:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   };
 961:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   union
 962:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   {
 963:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****     struct
 964:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****     {
 965:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t asymmetric_pwm : 1;     /**< Should the PWM be a function of the 2 compare channels
 966:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             rather than period value? */
 967:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   #if !defined(CCU8V3)    /* Defined for all devices except XMC1400 */                             
 968:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t invert_out0 : 1;        /**< Should inverted ST of Channel-1 be connected to OUT0? *
 969:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t invert_out1 : 1;        /**< Should inverted ST of Channel-1 be connected to OUT1? *
 970:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t invert_out2 : 1;        /**< Should inverted ST of Channel-2 be connected to OUT2? *
 971:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t invert_out3 : 1;        /**< Should inverted ST of Channel-2 be connected to OUT3? *
 972:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 27;
 973:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   #else
 974:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 3;
 975:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t selector_out0 : 2;      /**< Connect ST or inverted ST of Channel-1 or Channel-2 be 
 976:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             Accepts enum :: XMC_CCU8_SOURCE_OUT0_t 
 977:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             refer OCS1 bit-field of CHC register. 
 978:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** 											@note Only available for XMC1400 series */
 979:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 2;
 980:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t selector_out1 : 2;      /**< Connect ST or inverted ST of Channel-1 or Channel-2 be 
 981:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             Accepts enum :: XMC_CCU8_SOURCE_OUT1_t 
 982:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             refer OCS2 bit-field of CHC register. 
 983:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** 											@note Only available for XMC1400 series */
 984:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 2;
 985:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t selector_out2 : 2;      /**< Connect ST or inverted ST of Channel-1 or Channel-2 be 
 986:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             Accepts enum :: XMC_CCU8_SOURCE_OUT2_t 
 987:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             refer OCS3 bit-field of CHC register.
 988:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** 											@note Only available for XMC1400 series */
 989:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 2;
 990:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t selector_out3 : 2;      /**< Connect ST or inverted ST of Channel-1 or Channel-2 be 
 991:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             Accepts enum :: XMC_CCU8_SOURCE_OUT3_t 
 992:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             refer OCS4 bit-field of CHC register.
 993:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** 											@note Only available for XMC1400 series */
 994:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 14;
 995:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   #endif
 996:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****     };
 997:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****     uint32_t chc;
 998:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   };
 999:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   uint32_t prescaler_initval : 4;      /**< Initial prescaler divider value 
1000:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             Accepts enum :: XMC_CCU8_SLICE_PRESCALER_t */
1001:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   uint32_t float_limit : 4;            /**< The max value which the prescaler divider can increment
1002:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             Range : [0 to 15] */
1003:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   uint32_t dither_limit : 4;           /**< The value that determines the spreading of dithering 
1004:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             Range : [0 to 15] */
1005:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   uint32_t timer_concatenation : 1;    /**< Enables the concatenation of the timer if true*/
1006:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_COMPARE_CONFIG_t;
1007:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1008:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1009:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Configuration data structure for CCU8 slice. Specifically configures the CCU8 slice to capture 
1010:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  This excludes event and function configuration.
1011:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1012:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef struct XMC_CCU8_SLICE_CAPTURE_CONFIG
1013:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1014:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   union
1015:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   {
1016:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****     struct
1017:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****     {
1018:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 4;
1019:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t fifo_enable : 1;      /**< Should the capture registers be setup as a FIFO?(Extended
1020:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t timer_clear_mode : 2; /**< How should the timer register be cleared upon detection o
1021:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****                                           Accepts enum ::XMC_CCU8_SLICE_TIMER_CLEAR_MODE_t */
1022:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 4;
1023:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t same_event : 1;       /**< Should the capture event for C1V/C0V and C3V/C2V be same 
1024:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t ignore_full_flag : 1; /**< Should updates to capture registers follow full flag rule
1025:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 3;
1026:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t prescaler_mode: 1;    /**< Normal or floating prescaler Accepts enum :: XMC_CCU8_SLI
1027:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 15;
1028:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****     };
1029:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****     uint32_t tc;
1030:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   };
1031:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   uint32_t prescaler_initval : 4;    /**< Prescaler divider value */
1032:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   uint32_t float_limit : 4;          /**< The max value which the prescaler divider can increment t
1033:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   uint32_t timer_concatenation : 1;    /**< Enables the concatenation of the timer */
1034:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_CAPTURE_CONFIG_t;
1035:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** /*Anonymous structure/union guard end*/
1036:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(__CC_ARM)
1037:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   #pragma pop
1038:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** #elif defined(__TASKING__)
1039:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   #pragma warning restore
1040:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
1041:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** /**************************************************************************************************
1042:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * API Prototypes
1043:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  **************************************************************************************************
1044:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** #ifdef __cplusplus
1045:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** extern "C" {
1046:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
1047:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1048:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE bool XMC_CCU8_IsValidModule(const XMC_CCU8_MODULE_t *const module)
1049:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1050:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   bool tmp = false;
1051:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   
1052:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   tmp = (module == CCU80);
1053:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   
1054:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(CCU81)
1055:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   tmp = tmp || (module == CCU81);
1056:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
1057:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   
1058:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   return tmp;  
1059:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** } 
1060:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1061:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE bool XMC_CCU8_IsValidSlice(const XMC_CCU8_SLICE_t *const slice)
1062:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1063:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   bool tmp = false;
1064:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   
1065:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   tmp = (slice == CCU80_CC80);
1066:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(CCU80_CC81)  
1067:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   tmp = tmp || (slice == CCU80_CC81);
1068:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
1069:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(CCU80_CC82)  
1070:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   tmp = tmp || (slice == CCU80_CC82);
1071:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
1072:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(CCU80_CC83)  
1073:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   tmp = tmp || (slice == CCU80_CC83);
1074:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
1075:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(CCU81)  
1076:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   tmp = tmp || (slice == CCU81_CC80);
1077:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(CCU81_CC81)  
1078:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   tmp = tmp || (slice == CCU81_CC81);
1079:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
1080:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(CCU81_CC82)  
1081:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   tmp = tmp || (slice == CCU81_CC82);
1082:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
1083:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(CCU81_CC83)  
1084:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   tmp = tmp || (slice == CCU81_CC83);
1085:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
1086:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif 
1087:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  
1088:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   return tmp;  
1089:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** } 
1090:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1091:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1092:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1093:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param mcs_action multi-channel shadow transfer request configuration
1094:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1095:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1096:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1097:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1098:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Initialization of global register GCTRL.\n\n
1099:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  As part of module initialization, behaviour of the module upon detection
1100:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Multi-Channel Mode trigger is configured. Will also invoke the XMC_CCU8_EnableModule().
1101:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  The API call would bring up the required CCU8 module and also initialize the module for
1102:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  the required multi-channel shadow transfer.
1103:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1104:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1105:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_SLICE_CompareInit()<BR> XMC_CCU8_SLICE_CaptureInit().
1106:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1107:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_Init(XMC_CCU8_MODULE_t *const module, const XMC_CCU8_SLICE_MCMS_ACTION_t mcs_action);
1108:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1109:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1110:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1111:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1112:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1113:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1114:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1115:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Enables the CCU8 module and brings it to active state.\n\n
1116:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Also disables the gating of the clock signal (if applicable depending on the device being select
1117:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Invoke this API before any operations are done on the CCU8 module. Invoked from  XMC_CCU8_Init()
1118:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1119:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1120:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_SetModuleClock()<BR>  XMC_CCU8_DisableModule()<BR>  XMC_CCU8_StartPrescaler().
1121:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1122:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_EnableModule(XMC_CCU8_MODULE_t *const module);
1123:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1124:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1125:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1126:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1127:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1128:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1129:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1130:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Brings the CCU8 module to reset state and enables gating of the clock signal(if applicable depen
1131:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * on the device being selected).\n\n
1132:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Invoke this API when a CCU8 module needs to be disabled completely.
1133:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Any operation on the CCU8 module will have no effect after this API is called.
1134:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1135:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1136:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_EnableModule()<BR> XMC_CCU8_DisableModule().
1137:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1138:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_DisableModule(XMC_CCU8_MODULE_t *const module);
1139:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1140:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1141:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1142:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param clock Choice of input clock to the module
1143:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1144:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1145:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1146:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1147:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Selects the Module Clock by configuring GCTRL.PCIS bits.\n\n
1148:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  There are 3 potential clock sources. This API helps to select the required clock source.
1149:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Call to this API is valid after the XMC_CCU8_Init().
1150:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1151:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1152:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * None.<BR>
1153:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1154:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SetModuleClock(XMC_CCU8_MODULE_t *const module, const XMC_CCU8_CLOCK_t clock);
1155:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1156:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1157:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1158:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1159:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1160:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1161:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1162:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Starts the prescaler and restores clocks to the timer slices, by setting GIDLC.SPRB bit.<br>\n
1163:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Once the input to the prescaler has been chosen and the prescaler divider of all slices program
1164:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  the prescaler itself may be started. Invoke this  API after XMC_CCU8_Init()
1165:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  (Mandatory to fully initialize the module).
1166:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1167:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1168:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_Init()<BR>  XMC_CCU8_EnableClock()<BR>  XMC_CCU8_DisableClock()<BR>  XMC_CCU8_StartPres
1169:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_StopPrescaler().
1170:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1171:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_StartPrescaler(XMC_CCU8_MODULE_t *const module)
1172:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** {
  27              	 .loc 1 1172 0
  28              	 .cfi_startproc
  29              	 
  30              	 
  31              	 
  32 0000 80B4     	 push {r7}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 4
  35              	 .cfi_offset 7,-4
  36 0002 83B0     	 sub sp,sp,#12
  37              	.LCFI1:
  38              	 .cfi_def_cfa_offset 16
  39 0004 00AF     	 add r7,sp,#0
  40              	.LCFI2:
  41              	 .cfi_def_cfa_register 7
  42 0006 7860     	 str r0,[r7,#4]
1173:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_StartPrescaler:Invalid Module Pointer", XMC_CCU8_IsValidModule(module));
1174:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   module->GIDLC = (uint32_t) CCU8_GIDLC_SPRB_Msk;
  43              	 .loc 1 1174 0
  44 0008 7B68     	 ldr r3,[r7,#4]
  45 000a 4FF48072 	 mov r2,#256
  46 000e DA60     	 str r2,[r3,#12]
1175:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** }
  47              	 .loc 1 1175 0
  48 0010 0C37     	 adds r7,r7,#12
  49              	.LCFI3:
  50              	 .cfi_def_cfa_offset 4
  51 0012 BD46     	 mov sp,r7
  52              	.LCFI4:
  53              	 .cfi_def_cfa_register 13
  54              	 
  55 0014 5DF8047B 	 ldr r7,[sp],#4
  56              	.LCFI5:
  57              	 .cfi_restore 7
  58              	 .cfi_def_cfa_offset 0
  59 0018 7047     	 bx lr
  60              	 .cfi_endproc
  61              	.LFE138:
  63 001a 00BF     	 .section .text.XMC_CCU8_SLICE_StopTimer,"ax",%progbits
  64              	 .align 2
  65              	 .thumb
  66              	 .thumb_func
  68              	XMC_CCU8_SLICE_StopTimer:
  69              	.LFB162:
1176:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1177:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1178:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1179:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1180:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1181:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1182:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1183:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Starts the parity function.<br>\n
1184:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Invoke this  API after XMC_CCU8_Init()
1185:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1186:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1187:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_Init()<BR>  XMC_CCU8_EnableClock()<BR>  XMC_CCU8_DisableClock()<BR> XMC_CCU8_StopParity
1188:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1189:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_StartParityChecker(XMC_CCU8_MODULE_t *const module)
1190:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1191:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_StartParityChecker:Invalid Module Pointer", XMC_CCU8_IsValidModule(module));
1192:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   module->GIDLC = (uint32_t) CCU8_GIDLC_SPCH_Msk;
1193:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1194:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1195:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1196:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1197:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1198:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1199:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1200:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1201:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Stops the prescaler and blocks clocks to the timer slices, by setting GIDLS.CPRB bit.\n\n
1202:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Clears the run bit of the prescaler. Ensures that the module clock is not supplied to
1203:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * the slices of the module.
1204:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1205:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1206:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_EnableClock()<BR>  XMC_CCU8_DisableClock()<BR>  XMC_CCU8_StartPrescaler()<BR>  XMC_CCU8
1207:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1208:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_StopPrescaler(XMC_CCU8_MODULE_t *const module)
1209:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1210:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_StopPrescaler:Invalid Module Pointer", XMC_CCU8_IsValidModule(module));
1211:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   module->GIDLS = (uint32_t) CCU8_GIDLS_CPRB_Msk;
1212:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1213:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1214:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1215:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1216:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1217:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1218:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1219:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1220:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Stops the parity function.<br>\n
1221:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1222:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1223:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_EnableClock()<BR>  XMC_CCU8_DisableClock()<BR>  XMC_CCU8_StartParityChecker()<BR>
1224:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1225:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_StopParityChecker(XMC_CCU8_MODULE_t *const module)
1226:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1227:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_StopParityChecker:Invalid Module Pointer", XMC_CCU8_IsValidModule(module));
1228:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   module->GIDLS = (uint32_t) CCU8_GIDLS_CPCH_Msk;
1229:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1230:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1231:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1232:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1233:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1234:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1235:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1236:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1237:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Returns the state of the prescaler, by reading GSTAT.PRB bit.\n\n
1238:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * If clock is being supplied to the slices of the  module then returns as true. 
1239:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1240:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1241:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_StartPrescaler()<BR>  XMC_CCU8_StopPrescaler()<BR> XMC_CCU8_EnableClock()<BR>  XMC_CCU8
1242:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1243:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE bool XMC_CCU8_IsPrescalerRunning(XMC_CCU8_MODULE_t *const module)
1244:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1245:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_IsPrescalerRunning:Invalid Module Pointer", XMC_CCU8_IsValidModule(module));
1246:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   return((bool)((module->GSTAT & (uint32_t) CCU8_GSTAT_PRB_Msk) == CCU8_GSTAT_PRB_Msk));
1247:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1248:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1249:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1250:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1251:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1252:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1253:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1254:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1255:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Returns the state of the parity checker.\n\n
1256:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1257:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1258:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_StartParityChecker()<BR>  XMC_CCU8_StopParityChecker()<BR> XMC_CCU8_EnableClock()<BR>  
1259:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1260:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE bool XMC_CCU8_IsParityCheckerRunning(XMC_CCU8_MODULE_t *const module)
1261:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1262:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_IsPrescalerRunning:Invalid Module Pointer", XMC_CCU8_IsValidModule(module));
1263:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   return((bool)((module->GSTAT & (uint32_t) CCU8_GSTAT_PCRB_Msk) == CCU8_GSTAT_PCRB_Msk));
1264:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1265:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1266:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1267:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1268:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param clock_mask Slices whose clocks are to be enabled simultaneously.
1269:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                   Bit location 0/1/2/3 represents slice-0/1/2/3 respectively. 
1270:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                   Range: [0x1 to 0xF]
1271:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1272:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1273:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1274:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1275:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Enables clocks of multiple slices at a time, by configuring GIDLC.CS0I, GIDLC.CS1I, GIDLC.CS2I, 
1276:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * GIDLC.CS3I bits.\n\n
1277:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Takes an input clock_mask, which determines the slices that would receive the clock. Bring them 
1278:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * of the idle state simultaneously.
1279:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1280:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1281:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_EnableClock()<BR>  XMC_CCU8_DisableClock().
1282:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1283:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_EnableMultipleClocks(XMC_CCU8_MODULE_t *const module, const uint8_t c
1284:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1285:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_EnableMultipleClocks:Invalid Module Pointer", XMC_CCU8_IsValidModule(module)
1286:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_EnableMultipleClocks:Invalid clock mask", (clock_mask < 16U));
1287:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1288:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   module->GIDLC = (uint32_t) clock_mask;
1289:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1290:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1291:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1292:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1293:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param mode   Selects suspend mode
1294:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1295:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1296:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1297:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1298:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures the entering in suspend mode for all the CCU8 slices.
1299:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1300:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1301:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * None.
1302:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1303:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SetSuspendMode(XMC_CCU8_MODULE_t *const module, const XMC_CCU8_SUSPEN
1304:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1305:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_EnableMultipleClocks:Invalid Module Pointer", XMC_CCU8_IsValidModule(module)
1306:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   module->GCTRL = (module->GCTRL & (uint32_t)~CCU8_GCTRL_SUSCFG_Msk) | mode;
1307:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1308:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1309:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1310:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1311:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param compare_init Pointer to slice configuration structure
1312:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1313:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1314:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1315:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1316:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Initialization of a CC8 slice to compare mode, by configuring CC8yTC, CC8yCMC, CC8yPSC, CC8yDITH
1317:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * CC8yFPCS, CC8yCHC registers.\n\n
1318:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * CC8 slice is configured with Timer configurations in this routine. Timer is stopped before initi
1319:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * by calling XMC_CCU8_SLICE_StopTimer(). After initialization user has to explicitly enable
1320:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * the shadow transfer for the required values by calling XMC_CCU8_EnableShadowTransfer() with appr
1321:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1322:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1323:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * None.
1324:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1325:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_CompareInit(XMC_CCU8_SLICE_t *const slice,
1326:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****                                 const XMC_CCU8_SLICE_COMPARE_CONFIG_t *const compare_init);
1327:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1328:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1329:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1330:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param capture_init Pointer to slice configuration structure
1331:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1332:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1333:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1334:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1335:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Initialization of a CC8 slice to capture mode, by configuring CC8yTC, CC8yCMC, CC8yPSC,CC8yFPCS 
1336:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * CC8 slice is configured with Capture configurations in  this routine. Timer is stopped before in
1337:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * by calling XMC_CCU8_SLICE_StopTimer(). After initialization user has to explicitly enable the sh
1338:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * for the required  values by calling XMC_CCU8_EnableShadowTransfer() with appropriate mask. 
1339:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1340:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1341:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_SLICE_Capture0Config()<BR>  XMC_CCU8_SLICE_Capture1Config().
1342:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1343:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_CaptureInit(XMC_CCU8_SLICE_t *const slice,
1344:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****                                 const XMC_CCU8_SLICE_CAPTURE_CONFIG_t *const capture_init);
1345:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1346:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1347:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1348:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice_number Slice for which the clock should be Enabled.
1349:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                   Range: [0x0 to 0x3]
1350:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1351:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1352:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1353:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1354:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Enables the slice timer clock, by configuring GIDLC.CS0I, GIDLC.CS1I, GIDLC.CS2I, 
1355:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  GIDLC.CS3I bits according to the selected \a slice_number.\n\n
1356:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  It is possible to enable/disable clock at slice level. This uses the \b slice_number to indicat
1357:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  slice whose clock needs to be enabled. Directly accessed register is GIDLC.
1358:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1359:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1360:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_DisableClock()<BR>  XMC_CCU8_EnableMultipleClocks()<BR>  XMC_CCU8_StartPrescaler()<BR> 
1361:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1362:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_EnableClock(XMC_CCU8_MODULE_t *const module, const uint8_t slice_numb
1363:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1364:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_EnableClock:Invalid Module Pointer", XMC_CCU8_IsValidModule(module));
1365:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_EnableClock:Invalid Slice Number", (slice_number < 4U));
1366:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1367:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   module->GIDLC = ((uint32_t) 1 << slice_number);
1368:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1369:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1370:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1371:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1372:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice_number Slice for which the clock should be disabled.
1373:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                   Range: [0x0 to 0x3]
1374:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1375:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1376:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1377:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1378:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Disables the slice timer clock, by configuring GIDLS.SS0I, GIDLS.SSS1I, GIDLS.SSS2I, 
1379:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * GIDLS.SSS3I bits according to the selected \a slice_number .\n\n
1380:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * It is possible to disable clock at slice level using the module pointer.
1381:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \b slice_number is used to disable the clock to a given slice of the module.
1382:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1383:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1384:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_EnableClock()<BR>  XMC_CCU8_EnableMultipleClocks()<BR>  XMC_CCU8_StartPrescaler()<BR>  
1385:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1386:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_DisableClock(XMC_CCU8_MODULE_t *const module, const uint8_t slice_num
1387:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1388:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_DisableClock:Invalid Module Pointer", XMC_CCU8_IsValidModule(module));
1389:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_DisableClock:Invalid Slice Number", (slice_number < 4U));
1390:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1391:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   module->GIDLS = ((uint32_t) 1 << slice_number);
1392:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1393:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1394:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1395:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1396:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice_number Slice for which the clock should be disabled.
1397:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                   Range: [0x0 to 0x3]
1398:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param output Slice output.
1399:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1400:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1401:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1402:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1403:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Enables slice outputs to be used to perform the parity check. 
1404:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1405:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1406:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_StartParityChecker()<BR>  XMC_CCU8_SLICE_ParityCheckerDisableSliceOutput()<BR>
1407:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1408:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_ParityCheckerEnableSliceOutput(XMC_CCU8_MODULE_t *const module,
1409:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1410:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_ParityCheckerEnableSliceOutput:Invalid Module Pointer", XMC_CCU8_IsVal
1411:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_ParityCheckerEnableSliceOutput:Invalid Slice Number", (slice_number < 
1412:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1413:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   module->GPCHK |= (uint32_t)(((output & (1 << slice_number)) << CCU8_GPCHK_PCSEL0_Pos) |
1414:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****                               ((output & (2 << slice_number)) << CCU8_GPCHK_PCSEL1_Pos) |
1415:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****                               ((output & (4 << slice_number)) << CCU8_GPCHK_PCSEL2_Pos) |
1416:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****                               ((output & (8 << slice_number)) << CCU8_GPCHK_PCSEL3_Pos));
1417:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1418:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1419:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1420:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1421:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice_number Slice for which the clock should be disabled.
1422:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                   Range: [0x0 to 0x3]
1423:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param output Slice output ::XMC_CCU8_SLICE_OUTPUT_t.
1424:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1425:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1426:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1427:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1428:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Enables slice outputs to be used to perform the parity check. 
1429:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1430:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1431:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_StartParityChecker()<BR>  XMC_CCU8_SLICE_ParityCheckerEnableSliceOutput()<BR>
1432:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1433:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_ParityCheckerDisableSliceOutput(XMC_CCU8_MODULE_t *const module
1434:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1435:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_ParityCheckerEnableSliceOutput:Invalid Module Pointer", XMC_CCU8_IsVal
1436:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_ParityCheckerDisableSliceOutput:Invalid Slice Number", (slice_number <
1437:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1438:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   module->GPCHK &= (uint32_t)~(((output & (1 << slice_number)) << CCU8_GPCHK_PCSEL0_Pos) |
1439:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****                                ((output & (2 << slice_number)) << CCU8_GPCHK_PCSEL1_Pos) |
1440:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****                                ((output & (4 << slice_number)) << CCU8_GPCHK_PCSEL2_Pos) |
1441:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****                                ((output & (8 << slice_number)) << CCU8_GPCHK_PCSEL3_Pos));
1442:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1443:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1444:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1445:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1446:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param input signal controlling the delay between the change at the CCU8 outputs and effective c
1447:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1448:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1449:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1450:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1451:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Selects which signal is controlling the delay between the change at the CCU8 outputs and effecti
1452:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1453:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1454:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_StartParityChecker()<BR>
1455:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1456:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_ParityCheckerSetDelayInput(XMC_CCU8_MODULE_t *const module, con
1457:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1458:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_ParityCheckerSetDelayInput:Invalid Module Pointer", XMC_CCU8_IsValidMo
1459:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   module->GPCHK = (module->GPCHK & (uint32_t)~CCU8_GPCHK_PCDS_Msk) | input;
1460:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1461:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1462:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1463:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1464:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param input signal contains the driver parity information ::XMC_CCU8_PARITY_CHECKER_DRIVER_INPU
1465:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1466:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1467:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1468:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1469:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Selects which signal contains the driver parity information.
1470:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The signal must be selected throughout the input selector mux of each slice. The signal must be 
1471:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1472:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1473:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_StartParityChecker(), XMC_CCU8_SLICE_SetInput()<BR>.
1474:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1475:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_ParityCheckerSetDriverInput(XMC_CCU8_MODULE_t *const module, co
1476:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1477:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_ParityCheckerSetDelayInput:Invalid Module Pointer", XMC_CCU8_IsValidMo
1478:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   module->GPCHK = (module->GPCHK & (uint32_t)~CCU8_GPCHK_PISEL_Msk) | input;
1479:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1480:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1481:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1482:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1483:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param type odd or even parity ::XMC_CCU8_PARITY_CHECKER_TYPE_t.
1484:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1485:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1486:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1487:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1488:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Selects if we have an odd or even parity.
1489:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1490:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1491:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_StartParityChecker()<BR>.
1492:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1493:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_ParityCheckerSetType(XMC_CCU8_MODULE_t *const module, const XMC
1494:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1495:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_ParityCheckerSetDelayInput:Invalid Module Pointer", XMC_CCU8_IsValidMo
1496:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   module->GPCHK = (module->GPCHK & (uint32_t)~CCU8_GPCHK_PCTS_Msk) | type;
1497:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1498:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1499:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1500:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1501:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1502:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return status of parity checker. If >0 then an error is dectected
1503:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1504:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1505:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Returns current value of the XOR chain.
1506:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1507:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1508:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_StartParityChecker()<BR>
1509:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1510:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE uint32_t XMC_CCU8_SLICE_ParityCheckerGetStatus(XMC_CCU8_MODULE_t *const module)
1511:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1512:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_ParityCheckerSetDelayInput:Invalid Module Pointer", XMC_CCU8_IsValidMo
1513:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   return (module->GPCHK & CCU8_GPCHK_PCST_Msk);
1514:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1515:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1516:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1517:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1518:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param out_path_msk configuration for output path selection.
1519:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *        combination of XMC_CCU8_OUT_PATH_t enum items can be used to create a mask.
1520:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 
1521:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1522:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1523:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1524:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1525:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configure the out the path of the two compare channels with specified ST signal, by configuring 
1526:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  ^ CC8yCHC register.\n\n
1527:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 
1528:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * For the two compare channels it is possible to select either direct ST signal or inverted ST sig
1529:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \b out_path_msk is used to set the required out put path.
1530:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1531:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1532:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * None
1533:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** */
1534:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_SetOutPath(XMC_CCU8_SLICE_t *const slice, const uint32_t out_path_msk);
1535:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1536:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1537:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1538:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event Map an External event to the External Start Function
1539:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param start_mode Behaviour of slice when the start function is activated
1540:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1541:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1542:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1543:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1544:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Configures the Start Function of the slice, by configuring CC8yCMC.ENDS and CC8yTC.ENDM bits.\n
1545:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Start function is mapped with one of the 3 events. An external signal can control when a CC8 ti
1546:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Additionally, the behaviour of the slice upon activation of the start function is configured as
1547:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1548:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1549:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_SLICE_StopConfig()<BR>  XMC_CCU8_SLICE_ConfigureEvent()<BR>  XMC_CCU8_SLICE_SetInput().
1550:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1551:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_StartConfig(XMC_CCU8_SLICE_t *const slice,
1552:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****                                 const XMC_CCU8_SLICE_EVENT_t event,
1553:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****                                 const XMC_CCU8_SLICE_START_MODE_t start_mode);
1554:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1555:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1556:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1557:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event Map an External event to the External Stop Function
1558:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param end_mode Behaviour of slice when the stop function is activated
1559:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1560:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1561:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1562:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1563:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures the Stop function for the slice, by configuring CC8yCMC.STRTS and CC8yTC.STRM bits.\n
1564:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Stop function is mapped with one of the 3 events. An external signal can control when a CCU8 tim
1565:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Additionally, the behaviour of the slice upon activation of the stop function is configured as w
1566:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1567:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1568:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_SLICE_StartConfig()<BR>  XMC_CCU8_SLICE_ConfigureEvent()<BR>  XMC_CCU8_SLICE_SetInput()
1569:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1570:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_StopConfig(XMC_CCU8_SLICE_t *const slice,
1571:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****                                const XMC_CCU8_SLICE_EVENT_t event,
1572:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****                                const XMC_CCU8_SLICE_END_MODE_t end_mode);
1573:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1574:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1575:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1576:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event Map an External event to the External load Function
1577:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1578:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1579:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1580:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1581:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Configures the Load Function for the slice, by configuring CC8yCMC.LDS bit.\n\n
1582:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Load function is mapped with one of the 3 events. Up on occurrence of the event,\n
1583:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  if CC8yTCST.CDIR set to 0,CC8yTIMER register is reloaded with the value from compare channel 1 
1584:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                            compare channel 2\n
1585:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  if CC8yTCST.CDIR set to 1,CC8yTIMER register is reloaded with the value from period register\n
1586:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  
1587:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1588:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1589:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ConfigureEvent()<BR>  XMC_CCU8_SLICE_SetInput().
1590:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1591:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_LoadConfig(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_EVENT_t event);
1592:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1593:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1594:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1595:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param ch_num Select which compare channel value has to be loaded to the Timer register during e
1596:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1597:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1598:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1599:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1600:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Up on occurrence of the external load event, if CC8yTCST.CDIR set to 0, CC8yTIMER register can 
1601:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  with the value from compare channel 1 or compare channel 2\n
1602:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  If CC8yTC.TLS is 0, compare channel 1 value is loaded to the CC8yTIMER register\n
1603:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  If CC8yTC.TLS is 1, compare channel 2 value is loaded to the CC8yTIMER register\n
1604:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1605:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1606:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ConfigureEvent()<BR>  XMC_CCU8_SLICE_SetInput().
1607:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1608:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_LoadSelector(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_COMPARE_CHANNE
1609:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1610:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1611:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1612:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event Map an External event to the External Modulation Function
1613:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param mod_mode Desired Modulation mode
1614:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param channel Specify the channel(s) on which the modulation should be applied.
1615:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param synch_with_pwm Option to synchronize modulation with PWM start
1616:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                       Pass \b true if the modulation needs to be synchronized with PWM signal.
1617:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1618:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1619:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1620:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1621:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures the Output Modulation Function of the slice, by configuring CC8yCMC.MOS, CC8yTC.EMT a
1622:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * CC8yTC.EMS bits.\n\n
1623:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Modulation function is mapped with one of the 3 events. The output signal of the CCU can
1624:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * be modulated according to a external input.  Additionally, the behaviour of the slice upon activ
1625:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * of the modulation function is configured as well.
1626:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1627:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1628:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ConfigureEvent()<BR>  XMC_CCU8_SLICE_SetInput().
1629:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1630:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_ModulationConfig(XMC_CCU8_SLICE_t *const slice,
1631:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****                                      const XMC_CCU8_SLICE_EVENT_t event,
1632:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****                                      const XMC_CCU8_SLICE_MODULATION_MODE_t mod_mode,
1633:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****                                      const XMC_CCU8_SLICE_MODULATION_CHANNEL_t channel, 
1634:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****                                      const bool synch_with_pwm
1635:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****                                      );
1636:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1637:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1638:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1639:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event Map an External event to the External Count Function
1640:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1641:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1642:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1643:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1644:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures the Count Function of the slice, by configuring CC8yCMC.CNTS bit.\n\n
1645:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Count function is mapped with one of the 3 events. CCU8 slice can take an external
1646:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * signal to act as the counting event. The CCU8 slice would count the
1647:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * edges present on the \b event selected. 
1648:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1649:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1650:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ConfigureEvent()<BR>  XMC_CCU8_SLICE_SetInput().
1651:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1652:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_CountConfig(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_EVENT_t event);
1653:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1654:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1655:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1656:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event  Map an External event to the External Gating Function
1657:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1658:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1659:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1660:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1661:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures the Gating Function of the slice, by configuring CC8yCMC.GATES bit.\n\n
1662:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Gating function is mapped with one of the 3 events.  A CCU8 slice can use an input signal that w
1663:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * operate as counter gating. If the configured Active level is detected the counter will gate all 
1664:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1665:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1666:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ConfigureEvent()<BR>  XMC_CCU8_SLICE_SetInput().
1667:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1668:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_GateConfig(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_EVENT_t event);
1669:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1670:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1671:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1672:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event Map an External event to the Capture-0 Function
1673:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1674:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1675:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1676:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1677:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures the Capture-0 Function of the slice, by configuring CC8yCMC.CAP0S bit.\n\n
1678:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Capture function is mapped with one of the 3 events.  A CCU8 slice can be configured into captur
1679:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * with the selected \b event. In this mode the CCU8 will capture the timer value into CC8yC0V and 
1680:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1681:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1682:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ConfigureEvent()<BR>  XMC_CCU8_SLICE_SetInput().
1683:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1684:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_Capture0Config(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_EVENT_t even
1685:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1686:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1687:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1688:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event Map an External event to the Capture-1 Function
1689:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1690:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1691:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1692:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1693:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures the Capture-1 Function of the slice, by configuring CC8yCMC.CAP1S bit.\n\n
1694:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Capture function is mapped with one of the 3 events. A CCU8 slice can be configured into capture
1695:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * mode with the selected \b event. In this mode the CCU8 will capture the timer value into CC8yC2V
1696:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1697:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1698:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ConfigureEvent()<BR>  XMC_CCU8_SLICE_SetInput().
1699:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1700:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_Capture1Config(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_EVENT_t even
1701:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1702:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1703:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1704:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1705:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    bool would return true if the extended capture read back mode is enabled<BR>
1706:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1707:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1708:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Checks if Extended capture mode read is enabled for particular slice or not, by reading CC8yTC.E
1709:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * In this mode the there is only one associated read address for all the capture registers.
1710:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Individual capture registers can still be accessed in this mode.
1711:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1712:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1713:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_GetCapturedValueFromFifo().
1714:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1715:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE bool XMC_CCU8_SLICE_IsExtendedCapReadEnabled(const XMC_CCU8_SLICE_t *const slice)
1716:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1717:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_IsPrescalerRunning:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
1718:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   return((bool)((slice->TC & (uint32_t) CCU8_CC8_TC_ECM_Msk) == (uint32_t)CCU8_CC8_TC_ECM_Msk));
1719:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1720:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1721:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(CCU8V1) /* Defined for XMC4800, XMC4700, XMC4500, XMC4400, XMC4200, XMC4100 devices onl
1722:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1723:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1724:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice_number to check whether read value belongs to required slice or not
1725:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1726:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *   int32_t   Returns -1 if the FIFO value being retrieved is not from the \b slice_number.
1727:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *             Returns the value captured in the \b slice_number, if captured value is from the cor
1728:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                     Range: [0x0 to 0xFFFF]
1729:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1730:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1731:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Read captured value from FIFO(ECRD register).\n\n
1732:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This is applicable only in the Capture mode of operation. The signal whose timing characteristic
1733:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * must be mapped to an event which in turn must be mapped to the capture function. Based on the ca
1734:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * instant timer values are captured into capture registers. Timing characteristics of the input si
1735:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * derived/inferred from the captured values.
1736:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1737:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1738:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_IsExtendedCapReadEnabled().
1739:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1740:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** int32_t XMC_CCU8_GetCapturedValueFromFifo(const XMC_CCU8_MODULE_t *const module, const uint8_t slic
1741:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** #else
1742:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1743:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1744:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param set The capture register set from which the captured value is to be retrieved
1745:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1746:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    uint32_t Returns the value captured in the \b slice_number
1747:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *             Range: [0x0 to 0xFFFF]
1748:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1749:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1750:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Read captured value from FIFO(CC8yECRD0 and CC8yECRD1).\n\n
1751:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This is applicable only in the Capture mode of operation. The signal whose timing characteristic
1752:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * must be mapped to an event which in turn must be mapped to the capture function. Based on the ca
1753:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * instant timer values are captured into capture registers. Timing characteristics of the input si
1754:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * derived/inferred from the captured values.
1755:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1756:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1757:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_IsExtendedCapReadEnabled().
1758:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @note Defined for XMC4800, XMC4700, XMC4500, XMC4400, XMC4200, XMC4100 devices only. For other d
1759:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1760:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** uint32_t XMC_CCU8_SLICE_GetCapturedValueFromFifo(const XMC_CCU8_SLICE_t *const slice,
1761:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** 		                                             const XMC_CCU8_SLICE_CAP_REG_SET_t set);
1762:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
1763:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1764:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1765:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1766:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event Map an External event to the External Count Direction Function
1767:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1768:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1769:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1770:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1771:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures the Count Direction of the slice, by configuring CC8yCMC.UDS bit.\n\n
1772:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Count direction function is mapped with one of the 3 events. A slice can be configured to change
1773:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * CC8yTIMER count direction depending on an external signal.
1774:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1775:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1776:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ConfigureEvent()<BR>  XMC_CCU8_SLICE_SetInput().
1777:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1778:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_DirectionConfig(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_EVENT_t eve
1779:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1780:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1781:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1782:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1783:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1784:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1785:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1786:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures the status bit override Function of the slice, by configuring CC8yCMC.OFS bit.\n\n
1787:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Status bit override function is mapped with one of the 3 events. A slice can be configured to ch
1788:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * output of the timer's CC8yST1 signal depending on an external signal.
1789:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1790:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1791:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent().
1792:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1793:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_StatusBitOverrideConfig(XMC_CCU8_SLICE_t *const slice);
1794:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1795:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1796:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1797:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param exit_mode How should a previously logged trap state be exited?
1798:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param synch_with_pwm Should exit of trap state be synchronized with PWM cycle start?
1799:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1800:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1801:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1802:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1803:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1804:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures the Trap Function of the slice, by configuring CC8yCMC.TS, CC8yTC.TRPSE, and CC8yTC.T
1805:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Trap function is mapped with Event-2. Criteria for exiting the trap state is configured.
1806:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This trap function allows PWM outputs to react on the state of an input pin.
1807:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Thus PWM output can be forced to inactive state upon detection of a trap.
1808:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * It is also possible to synchronize the trap function with the PWM signal using the \b synch_with
1809:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1810:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1811:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ConfigureEvent()<BR>  XMC_CCU8_SLICE_SetInput().
1812:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1813:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_TrapConfig(XMC_CCU8_SLICE_t *const slice,
1814:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****                                const XMC_CCU8_SLICE_TRAP_EXIT_MODE_t exit_mode,
1815:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****                                bool synch_with_pwm);
1816:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1817:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1818:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1819:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param ev1_config Pointer to event 1 configuration data
1820:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param ev2_config Pointer to event 2 configuration data
1821:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1822:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1823:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1824:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1825:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1826:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Map Status bit override function with an Event1 & Event 2 of the slice and configure CC8yINS reg
1827:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Details such as the input mapped to the event, event detection criteria and Low Pass filter opti
1828:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * by this routine for the events 1 & 2.  Event-1 input would be the trigger to override the value.
1829:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Event-2 input would be the override value.
1830:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1831:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1832:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_StatusBitOverrideConfig().
1833:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1834:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent(XMC_CCU8_SLICE_t *const slice,
1835:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                     const XMC_CCU8_SLICE_EVENT_CONFIG_t *const ev1_
1836:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                     const XMC_CCU8_SLICE_EVENT_CONFIG_t *const ev2_
1837:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1838:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1839:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1840:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event The External Event which needs to be configured.
1841:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param config Pointer to event configuration data.
1842:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1843:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1844:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1845:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1846:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures an External Event of the slice, by updating CC8yINS register .\n\n
1847:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Details such as the input mapped to the event, event detection criteria and low pass filter
1848:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * options are programmed by this routine. The Event \b config  will configure the input selection,
1849:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * the edge selection, the level selection and the Low pass filter for the  event.
1850:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1851:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1852:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_StartConfig()<BR>  XMC_CCU8_SLICE_StopConfig()<BR>  XMC_CCU8_SLICE_LoadConfig()<
1853:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ModulationConfig()<BR>  XMC_CCU8_SLICE_CountConfig()<BR>  XMC_CCU8_SLICE_GateCon
1854:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_Capture0Config()<BR> XMC_CCU8_SLICE_Capture1Config()<BR>  XMC_CCU8_SLICE_Directi
1855:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_StatusBitOverrideConfig()<BR>  XMC_CCU8_SLICE_TrapConfig().
1856:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1857:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_ConfigureEvent(XMC_CCU8_SLICE_t *const slice,
1858:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****                                    const XMC_CCU8_SLICE_EVENT_t event,
1859:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****                                    const XMC_CCU8_SLICE_EVENT_CONFIG_t *config);
1860:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1861:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1862:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1863:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event The External Event which needs to be configured.
1864:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param input One of the 16 inputs meant to be mapped to the desired event
1865:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1866:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1867:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1868:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1869:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1870:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Selects an input for an external event, by configuring CC8yINS register.\n\n
1871:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * It is possible to select one of the possible 16 input signals for a given Event.
1872:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This configures the CC8yINS.EVxIS for the selected event.
1873:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1874:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1875:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_StartConfig()<BR>  XMC_CCU8_SLICE_StopConfig()<BR>  XMC_CCU8_SLICE_LoadConfig()<
1876:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ModulationConfig()<BR> XMC_CCU8_SLICE_CountConfig()<BR>  XMC_CCU8_SLICE_GateConf
1877:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_Capture0Config()<BR>  XMC_CCU8_SLICE_Capture1Config()<BR> XMC_CCU8_SLICE_Directi
1878:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_StatusBitOverrideConfig()<BR>  XMC_CCU8_SLICE_TrapConfig().
1879:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1880:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_SetInput(XMC_CCU8_SLICE_t *const slice,
1881:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****                              const XMC_CCU8_SLICE_EVENT_t event,
1882:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****                              const XMC_CCU8_SLICE_INPUT_t input);
1883:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1884:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1885:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1886:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param out_mask  Output signals for which the Trap function needs to be activated.
1887:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                   Use ::XMC_CCU8_SLICE_OUTPUT_t enum items to create a mask of choice,
1888:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                   using a bit wise OR operation
1889:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                   Range: [0x1 to 0xF]
1890:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1891:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1892:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1893:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1894:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Enables the trap feature, by setting CC8yTC.TRAPE0, CC8yTC.TRAPE1, CC8yTC.TRAPE2 and CC8yTC.TRAP
1895:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \a out_mask.\n\n
1896:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * A particularly useful feature where the PWM output can be forced inactive upon detection of a tr
1897:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * can be the output of a sensing element which has just detected an abnormal electrical condition.
1898:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1899:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1900:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_TrapConfig()<BR>  XMC_CCU8_SLICE_DisableTrap()<BR>  XMC_CCU8_SLICE_ConfigureEven
1901:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetInput().
1902:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1903:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_EnableTrap(XMC_CCU8_SLICE_t *const slice, const uint32_t out_ma
1904:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1905:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_EnableTrap:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
1906:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->TC |= (uint32_t)out_mask << CCU8_CC8_TC_TRAPE0_Pos;
1907:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1908:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1909:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1910:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1911:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param out_mask  Output signals for which the Trap function needs to be deactivated.
1912:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                   Use ::XMC_CCU8_SLICE_OUTPUT_t enum items to create a mask of choice,
1913:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                   using a bit wise OR operation.
1914:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                   Range: [0x1 to 0xF]
1915:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1916:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1917:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1918:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1919:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Disables the trap feature, by clearing CC8yTC.TRAPE0, CC8yTC.TRAPE1, CC8yTC.TRAPE2 and CC8yTC.TR
1920:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \a out_mask.\n\n.\n\n
1921:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This API will revert the changes done by XMC_CCU8_SLICE_EnableTrap().
1922:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This Ensures that the TRAP function has no effect on the output of the CCU8 slice.
1923:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1924:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1925:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_EnableTrap().
1926:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1927:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_DisableTrap(XMC_CCU8_SLICE_t *const slice, const uint32_t out_m
1928:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1929:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_DisableTrap:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
1930:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   
1931:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->TC &= ~((uint32_t)out_mask << CCU8_CC8_TC_TRAPE0_Pos);
1932:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1933:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1934:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1935:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1936:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1937:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    bool returns \b true if the Timer is running else it returns \b false.
1938:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1939:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1940:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Returns the state of the timer (Either Running or stopped(idle)), by reading CC8yTCST.TRB bit.
1941:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1942:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1943:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_StartTimer()<BR>  XMC_CCU8_SLICE_StopTimer().
1944:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1945:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE bool XMC_CCU8_SLICE_IsTimerRunning(const XMC_CCU8_SLICE_t *const slice)
1946:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1947:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_GetTimerStatus:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
1948:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   return(bool)(((slice->TCST) & CCU8_CC8_TCST_TRB_Msk) == (uint32_t)CCU8_CC8_TCST_TRB_Msk);
1949:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1950:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1951:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1952:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Pointer to an instance of CC8 slice
1953:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1954:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    bool returns \b true if the dead time counter of Compare channel-1 is running else it returns
1955:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1956:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1957:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Returns the state of the  Dead time counter 1 (Either Running or stopped(idle)), by reading CC8y
1958:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This returns the state of the dead time counter which is linked to Compare channel-1.
1959:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1960:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1961:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_IsDeadTimeCntr2Running().
1962:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1963:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE bool XMC_CCU8_SLICE_IsDeadTimeCntr1Running(const XMC_CCU8_SLICE_t *const slice)
1964:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1965:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_IsDeadTimeCntr1Running:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(s
1966:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   return(bool)(((slice->TCST) & CCU8_CC8_TCST_DTR1_Msk) == (uint32_t)CCU8_CC8_TCST_DTR1_Msk);
1967:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1968:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1969:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1970:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Pointer to an instance of CC8 slice
1971:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1972:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    bool returns \b true if the dead time counter of Compare channel-2 is running else it returns
1973:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1974:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1975:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Returns the state of the  Dead time counter 2 (Either Running or stopped(idle)), by reading CC8y
1976:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This returns the state of the dead time counter which is linked to Compare channel-2.
1977:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1978:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1979:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_IsDeadTimeCntr1Running().
1980:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1981:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE bool XMC_CCU8_SLICE_IsDeadTimeCntr2Running(const XMC_CCU8_SLICE_t *const slice)
1982:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1983:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_IsDeadTimeCntr2Running:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(s
1984:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   return(bool)(((slice->TCST) & CCU8_CC8_TCST_DTR2_Msk) == (uint32_t)CCU8_CC8_TCST_DTR2_Msk);
1985:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1986:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1987:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1988:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1989:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1990:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *   ::XMC_CCU8_SLICE_TIMER_COUNT_DIR_t returns the direction in which the timer is counting.
1991:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1992:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1993:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Returns the timer counting direction, by reading CC8yTCST.CDIR bit.\n\n
1994:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This API will return the direction in which the timer is currently
1995:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * incrementing(XMC_CCU8_SLICE_TIMER_COUNT_DIR_UP) or decrementing (XMC_CCU8_SLICE_TIMER_COUNT_DIR_
1996:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1997:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1998:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  None.
1999:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2000:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE XMC_CCU8_SLICE_TIMER_COUNT_DIR_t XMC_CCU8_SLICE_GetCountingDir(const XMC_CCU8_SLICE
2001:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2002:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_GetCountingDir:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
2003:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   return((XMC_CCU8_SLICE_TIMER_COUNT_DIR_t)(((slice->TCST) & CCU8_CC8_TCST_CDIR_Msk) >> CCU8_CC8_TC
2004:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2005:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2006:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2007:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2008:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2009:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2010:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2011:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Starts the timer counting operation, by setting CC8yTCSET.TRBS bit.\n\n
2012:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * It is necessary to have configured the CC8 slice before starting its timer.
2013:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Before the Timer is started ensure that the clock is provided to the slice.
2014:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2015:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2016:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_StopTimer().
2017:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2018:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_StartTimer(XMC_CCU8_SLICE_t *const slice)
2019:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2020:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_StartTimer:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
2021:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->TCSET = CCU8_CC8_TCSET_TRBS_Msk;
2022:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2023:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2024:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2025:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2026:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2027:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2028:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2029:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2030:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Stops the Timer.\n\n
2031:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Timer counting operation can be stopped by invoking this API, by setting CC8yTCCLR.TRBC bit.
2032:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2033:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2034:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_StartTimer().
2035:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2036:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_StopTimer(XMC_CCU8_SLICE_t *const slice)
2037:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** {
  70              	 .loc 1 2037 0
  71              	 .cfi_startproc
  72              	 
  73              	 
  74              	 
  75 0000 80B4     	 push {r7}
  76              	.LCFI6:
  77              	 .cfi_def_cfa_offset 4
  78              	 .cfi_offset 7,-4
  79 0002 83B0     	 sub sp,sp,#12
  80              	.LCFI7:
  81              	 .cfi_def_cfa_offset 16
  82 0004 00AF     	 add r7,sp,#0
  83              	.LCFI8:
  84              	 .cfi_def_cfa_register 7
  85 0006 7860     	 str r0,[r7,#4]
2038:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_StopTimer:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
2039:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->TCCLR = (uint32_t) CCU8_CC8_TCCLR_TRBC_Msk;
  86              	 .loc 1 2039 0
  87 0008 7B68     	 ldr r3,[r7,#4]
  88 000a 0122     	 movs r2,#1
  89 000c 1A61     	 str r2,[r3,#16]
2040:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** }
  90              	 .loc 1 2040 0
  91 000e 0C37     	 adds r7,r7,#12
  92              	.LCFI9:
  93              	 .cfi_def_cfa_offset 4
  94 0010 BD46     	 mov sp,r7
  95              	.LCFI10:
  96              	 .cfi_def_cfa_register 13
  97              	 
  98 0012 5DF8047B 	 ldr r7,[sp],#4
  99              	.LCFI11:
 100              	 .cfi_restore 7
 101              	 .cfi_def_cfa_offset 0
 102 0016 7047     	 bx lr
 103              	 .cfi_endproc
 104              	.LFE162:
 106              	 .section .text.XMC_CCU8_SLICE_SetDitherCompareValue,"ax",%progbits
 107              	 .align 2
 108              	 .thumb
 109              	 .thumb_func
 111              	XMC_CCU8_SLICE_SetDitherCompareValue:
 112              	.LFB179:
2041:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2042:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2043:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2044:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2045:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2046:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2047:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2048:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Resets the timer count to zero, by setting CC8yTCCLR.TCC bit.\n\n
2049:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * A timer which has been stopped can still retain the last counted value.
2050:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * After invoking this API the timer value will be cleared.
2051:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2052:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2053:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_StartTimer().
2054:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2055:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_ClearTimer(XMC_CCU8_SLICE_t *const slice)
2056:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2057:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_ClearTimer:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
2058:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->TCCLR = (uint32_t) CCU8_CC8_TCCLR_TCC_Msk;
2059:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2060:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2061:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2062:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2063:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2064:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2065:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2066:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2067:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Stops and resets the timer count to zero, by setting CC8yTCCLR.TCC and CC8yTCCLR.TRBC bit.\n\n
2068:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2069:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2070:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_StartTimer().
2071:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2072:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_StopClearTimer(XMC_CCU8_SLICE_t *const slice)
2073:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2074:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_StopClearTimer:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
2075:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->TCCLR = CCU8_CC8_TCCLR_TRBC_Msk | CCU8_CC8_TCCLR_TCC_Msk;
2076:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2077:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2078:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2079:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2080:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2081:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    ::XMC_CCU8_SLICE_MODE_t returns XMC_CCU8_SLICE_MODE_COMPARE if the slice is operating in comp
2082:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                          returns XMC_CCU8_SLICE_MODE_CAPTURE if the slice is operating in captur
2083:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2084:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2085:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Retrieves the current mode of operation in the slice (either Capture mode or Compare mode), by r
2086:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * CC8yTC.CMOD bit.\n\n
2087:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Ensure that before invoking this API the CCU8 slice should be configured otherwise the output of
2088:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * invalid.
2089:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2090:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2091:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  None.
2092:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2093:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE XMC_CCU8_SLICE_MODE_t XMC_CCU8_SLICE_GetSliceMode(const XMC_CCU8_SLICE_t *const sli
2094:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2095:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_GetSliceMode:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
2096:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   return((XMC_CCU8_SLICE_MODE_t)(((slice->TC) & CCU8_CC8_TC_CMOD_Msk) >> CCU8_CC8_TC_CMOD_Pos));
2097:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2098:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2099:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2100:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2101:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param mode Desired repetition mode (Either single shot or Continuous)
2102:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2103:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2104:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2105:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2106:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures the Timer to either Single shot mode or continuous mode, by configuring CC8yTC.TSSM b
2107:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The timer will count up to the terminal count as specified in the period register and stops imme
2108:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * mode has been set to single shot. In the continuous mode of operation, the timer starts counting
2109:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * reaching the terminal count.
2110:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2111:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2112:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_GetTimerRepeatMode().
2113:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2114:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_SetTimerRepeatMode(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_TIMER_RE
2115:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2116:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2117:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2118:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <br>
2119:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  ::XMC_CCU8_SLICE_TIMER_REPEAT_MODE_t returns XMC_CCU8_SLICE_TIMER_REPEAT_MODE_REPEAT if continu
2120:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                                     returns XMC_CCU8_SLICE_TIMER_REPEAT_MODE_SINGLE if single sh
2121:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2122:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2123:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Retrieves the Timer repeat mode, either Single shot mode or continuous mode, by reading CC8yTC.T
2124:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The timer will count upto the terminal count as specified in the period register and stops immed
2125:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * mode has been set to single shot mode. In the continuous mode of operation, the timer starts cou
2126:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * all over again after reaching the terminal count.
2127:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2128:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2129:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetTimerRepeatMode().
2130:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2131:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE XMC_CCU8_SLICE_TIMER_REPEAT_MODE_t XMC_CCU8_SLICE_GetTimerRepeatMode(
2132:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                     const XMC_CCU8_
2133:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2134:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_GetTimerRepeatMode:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice
2135:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   return((XMC_CCU8_SLICE_TIMER_REPEAT_MODE_t)(((slice->TC) & CCU8_CC8_TC_TSSM_Msk) >> CCU8_CC8_TC_T
2136:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2137:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2138:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2139:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param mode Desired counting mode (Either Edge Aligned or Center Aligned)
2140:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2141:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2142:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2143:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2144:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures the timer counting mode either Edge Aligned or Center Aligned, by configuring CC8yTC.
2145:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * In the edge aligned mode, the timer counts from 0 to the terminal count. Once the timer count ha
2146:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * compare value, the timer status output asserts itself. It will now deassert only after the timer
2147:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * terminal count.\n In the center aligned mode, the timer first counts from 0 to the terminal coun
2148:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * During this upward and downward counting, the timer status output stays asserted as long as the 
2149:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * greater than the compare value.
2150:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2151:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2152:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_GetTimerCountingMode().
2153:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2154:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_SetTimerCountingMode(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_TIMER_
2155:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2156:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2157:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2158:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <br>
2159:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  ::XMC_CCU8_SLICE_TIMER_COUNT_MODE_t returns XMC_CCU8_SLICE_TIMER_COUNT_MODE_EA if edge aligned 
2160:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                                     returns XMC_CCU8_SLICE_TIMER_COUNT_MODE_CA if center aligned
2161:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2162:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2163:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Retrieves timer counting mode either Edge aligned or Center Aligned, by reading CC8yTC.TCM bit.\
2164:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2165:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2166:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetTimerCountingMode().
2167:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2168:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE XMC_CCU8_SLICE_TIMER_COUNT_MODE_t XMC_CCU8_SLICE_GetTimerCountingMode(
2169:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** 		                                                                            const XMC_CCU8_SLICE_
2170:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2171:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_GetTimerCountingMode:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(sli
2172:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   return((XMC_CCU8_SLICE_TIMER_COUNT_MODE_t)(((slice->TC) & CCU8_CC8_TC_TCM_Msk) >> CCU8_CC8_TC_TCM
2173:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2174:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2175:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2176:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param period_val Timer period value
2177:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *        Range: [0x0 to 0xFFFF]
2178:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2179:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2180:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2181:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2182:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Programs the timer period, by writing CC8yPRS register.\n\n
2183:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The frequency of counting/ PWM frequency is determined by this value. The period value is writte
2184:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * register. Explicitly enable the shadow transfer for the the period value by calling
2185:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_EnableShadowTransfer() with appropriate mask. If shadow transfer is enabled and the tim
2186:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * a period match transfers the value from the shadow register to the actual period register.
2187:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2188:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2189:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_GetTimerPeriodMatch().
2190:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2191:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_SetTimerPeriodMatch(XMC_CCU8_SLICE_t *const slice, const uint16_t period_val);
2192:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2193:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2194:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2195:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2196:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *   uint16_t returns the current timer period value
2197:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *            Range: [0x0 to 0xFFFF]
2198:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2199:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2200:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Retrieves the timer period value currently effective, by reading CC8yPR register.\n\n
2201:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * If the timer is active then the value being returned is currently being used for the PWM period.
2202:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2203:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Note:</b><br>
2204:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The XMC_CCU8_SLICE_SetTimerPeriodMatch() would set the new period value to a shadow register.
2205:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This would only transfer the new values into the actual period register if the shadow transfer r
2206:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * is enabled and if a period match occurs. Hence a consecutive call to XMC_CCU8_SLICE_GetTimerPeri
2207:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * would not reflect the new values until the shadow transfer completes.
2208:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2209:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2210:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetTimerPeriodMatch().
2211:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2212:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE uint16_t XMC_CCU8_SLICE_GetTimerPeriodMatch(const XMC_CCU8_SLICE_t *const slice)
2213:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2214:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_GetTimerPeriodMatch:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slic
2215:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   return((uint16_t) slice->PR);
2216:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2217:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2218:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2219:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param channel Select the compare channel to which the \b compare_val has to programmed.
2220:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param compare_val Timer compare value
2221:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2222:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2223:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2224:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2225:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Programs the timer compare value, by writing CC8yCR1S and CC8yCR2S registers.\n\n
2226:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  The PWM duty cycle is determined by this value.\n\n
2227:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The compare value is written to a shadow register. Explicitly enable the shadow transfer for
2228:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * the the period/compare value by calling XMC_CCU8_EnableShadowTransfer() with
2229:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * appropriate mask.If shadow transfer is enabled and the timer is running,
2230:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * a period match transfers the value from the shadow register to the actual compare register.
2231:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2232:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2233:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_EnableShadowTransfer().
2234:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2235:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_SetTimerCompareMatch(XMC_CCU8_SLICE_t *const slice,
2236:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****                                          const XMC_CCU8_SLICE_COMPARE_CHANNEL_t channel,
2237:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****                                          const uint16_t compare_val);
2238:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2239:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2240:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2241:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param compare_val Timer compare value
2242:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2243:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2244:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2245:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2246:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Programs the timer compare1 value, by writing CC8yCR1S register.\n\n
2247:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The PWM duty cycle is determined by this value.\n\n
2248:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The compare value is written to a shadow register. Explicitly enable the shadow transfer for
2249:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * the the period/compare value by calling XMC_CCU8_EnableShadowTransfer() with appropriate mask.
2250:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * If shadow transfer is enabled and the timer is running, a period match transfers the value from
2251:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * the shadow register to the actual compare register.
2252:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2253:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2254:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_EnableShadowTransfer().
2255:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2256:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_SetTimerCompareMatchChannel1(XMC_CCU8_SLICE_t *const slice, con
2257:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2258:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_SetTimerCompareMatchChannel1:Invalid Slice Pointer", XMC_CCU8_IsValidS
2259:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->CR1S = (uint32_t) compare_val;
2260:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2261:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2262:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2263:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2264:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param compare_val Timer compare value
2265:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2266:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2267:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2268:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2269:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Programs the timer compare2 value, by writing CC8yCR2S register.\n\n
2270:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The PWM duty cycle is determined by this value.\n\n
2271:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The compare value is written to a shadow register. Explicitly enable the shadow transfer for
2272:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * the the period/compare value by calling XMC_CCU8_EnableShadowTransfer() with appropriate mask.
2273:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * If shadow transfer is enabled and the timer is running, a period match transfers the value from
2274:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * the shadow register to the actual compare register.
2275:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2276:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2277:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_EnableShadowTransfer().
2278:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2279:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_SetTimerCompareMatchChannel2(XMC_CCU8_SLICE_t *const slice, con
2280:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2281:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_SetTimerCompareMatchChannel2:Invalid Slice Pointer", XMC_CCU8_IsValidS
2282:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->CR2S = (uint32_t) compare_val;
2283:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2284:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2285:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2286:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2287:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param channel Select the compare channel to retrieve from.
2288:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2289:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *   uint16_t returns the current timer compare value
2290:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *            Range: [0x0 to 0xFFFF]
2291:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2292:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2293:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Retrieves the timer compare value currently effective, by reading CC8yCR1S and CC8yCR2S register
2294:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * If the timer is active then the value being returned is currently being for the PWM duty cycle( 
2295:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2296:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Note:</b><br>
2297:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The XMC_CCU8_SLICE_SetTimerCompareMatch() would set the new compare value to a shadow register.
2298:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This would only transfer the new values into the actual compare register if the shadow transfer 
2299:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * is enabled and if a period match occurs. Hence a consecutive call to XMC_CCU8_SLICE_GetTimerComp
2300:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * would not reflect the new values until the shadow transfer completes.
2301:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2302:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2303:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetTimerCompareMatch().
2304:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2305:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** uint16_t XMC_CCU8_SLICE_GetTimerCompareMatch(const XMC_CCU8_SLICE_t *const slice,
2306:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****                                              const XMC_CCU8_SLICE_COMPARE_CHANNEL_t channel);
2307:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2308:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2309:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2310:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return 
2311:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    uint16_t Timer compare value
2312:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2313:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2314:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Gets the timer compare1 value, by reading CC8yCR1 register.\n\n
2315:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2316:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2317:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetTimerCompareMatchChannel1().
2318:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2319:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE uint16_t XMC_CCU8_SLICE_GetTimerCompareMatchChannel1(XMC_CCU8_SLICE_t *const slice)
2320:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2321:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_GetTimerCompareMatchChannel1:Invalid Slice Pointer", XMC_CCU8_IsValidS
2322:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   return slice->CR1;
2323:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2324:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2325:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2326:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2327:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return Timer compare value
2328:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    uint16_t Timer compare value
2329:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2330:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2331:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Gets the timer compare1 value, by reading CC8yCR2 register.\n\n
2332:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2333:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2334:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetTimerCompareMatchChannel2().
2335:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2336:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE uint16_t XMC_CCU8_SLICE_GetTimerCompareMatchChannel2(XMC_CCU8_SLICE_t *const slice)
2337:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2338:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_SetTimerCompareMatchChannel2:Invalid Slice Pointer", XMC_CCU8_IsValidS
2339:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   return slice->CR2;
2340:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2341:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2342:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2343:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
2344:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param shadow_transfer_msk Shadow transfer request mask for various transfers.
2345:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                            Use ::XMC_CCU8_SHADOW_TRANSFER_t enum items to create a mask of choic
2346:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                            using a bit wise OR operation.
2347:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2348:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2349:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2350:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2351:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Requests of shadow transfer for Period, Compare, Passive level, dither and prescaler, by configu
2352:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * the GCSS register.\n\n
2353:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The transfer from the shadow registers to the actual registers is done in the immediate next occ
2354:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * shadow transfer trigger after the API is called.
2355:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2356:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Any call to XMC_CCU8_SLICE_SetTimerPeriodMatch()<BR>  XMC_CCU8_SLICE_SetTimerCompareMatch()<BR> 
2357:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_XMC_CCU8_SLICE_SetPrescaler()<BR> XMC_CCU8_SLICE_CompareInit()<BR> XMC_CCU8_SLICE_CaptureIni
2358:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * must be succeeded by this API.
2359:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2360:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2361:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  None.
2362:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2363:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_EnableShadowTransfer(XMC_CCU8_MODULE_t *const module, const uint32_t 
2364:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2365:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_EnableShadowTransfer:Invalid module Pointer", XMC_CCU8_IsValidModule(module)
2366:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   module->GCSS = (uint32_t)shadow_transfer_msk;  
2367:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2368:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2369:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2370:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2371:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2372:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *   uint16_t returns the current timer value
2373:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *            Range: [0x0 to 0xFFFF]
2374:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2375:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2376:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Retrieves the latest timer value, from CC8yTIMER register.\n\n
2377:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2378:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2379:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetTimerValue().
2380:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2381:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE uint16_t XMC_CCU8_SLICE_GetTimerValue(const XMC_CCU8_SLICE_t *const slice)
2382:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2383:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_GetTimerValue:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
2384:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   return((uint16_t) slice->TIMER);
2385:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2386:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2387:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2388:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param timer_val The new timer value that has to be loaded into the TIMER register.
2389:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                  Range: [0x0 to 0xFFFF]
2390:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2391:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2392:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2393:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2394:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Loads a new timer value, by setting CC8yTIMER register.\n\n
2395:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 
2396:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Note:</b><br>
2397:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Request to load is ignored if the timer is running.
2398:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2399:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2400:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_GetTimerValue().
2401:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2402:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_SetTimerValue(XMC_CCU8_SLICE_t *const slice, const uint16_t tim
2403:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2404:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_SetTimerValue:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
2405:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->TIMER = (uint32_t) timer_val;
2406:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2407:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2408:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2409:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param period_dither Boolean instruction on dithering of period match
2410:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param duty_dither Boolean instruction on dithering of compare match
2411:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param spread Dither compare value
2412:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2413:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2414:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2415:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2416:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Enables dithering of PWM frequency and duty cycle, by configuring CC8yTC.DITHE and CC8yDITS bits
2417:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Some control loops are slow in updating PWM frequency and duty cycle. In such a case, a Bresenha
2418:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * can help reduce long term errors. Dithering can be applied to period and duty individually,
2419:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * this can be selected using the parameter \b period_dither and \b duty_dither.
2420:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The \b spread would provide the dither compare value. If the dither counter value is less than t
2421:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * the period/compare values would be dithered according to the dither mode selected. This API woul
2422:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_SLICE_SetDitherCompareValue().
2423:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2424:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Note:</b><br>
2425:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * After this API call, XMC_CCU8_EnableShadowTransfer() has to be called with appropriate mask
2426:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * to transfer the dither value.
2427:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2428:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2429:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_DisableDithering().
2430:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2431:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_EnableDithering(XMC_CCU8_SLICE_t *const slice,
2432:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****                                     const bool period_dither,
2433:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****                                     const bool duty_dither,
2434:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****                                     const uint8_t spread);
2435:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2436:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2437:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2438:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2439:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2440:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2441:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2442:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Disables dithering of PWM frequency and duty cycle, by clearing CC8yTC.DITHE bits.\n\n
2443:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This disables the Dither mode that was set in XMC_CCU8_SLICE_EnableDithering().
2444:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This API will not clear the dither compare value.
2445:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2446:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2447:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_EnableDithering().
2448:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2449:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_DisableDithering(XMC_CCU8_SLICE_t *const slice)
2450:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2451:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_DisableDithering:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice))
2452:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->TC &= ~((uint32_t) CCU8_CC8_TC_DITHE_Msk);
2453:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2454:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2455:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2456:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2457:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2458:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2459:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2460:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2461:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Enables the floating prescaler, by setting CC8yTC.FPE bit.\n\n
2462:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The prescaler divider starts with an initial value and increments upon every period match. It ke
2463:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * until a ceiling (prescaler compare value) is hit and thereafter rolls back to the original presc
2464:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * It is necessary to have programmed an initial divider value and a compare value before the featu
2465:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2466:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2467:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetFloatingPrescalerCompareValue()<BR>  XMC_CCU8_SLICE_DisableFloatingPrescaler(
2468:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_XMC_CCU8_SLICE_SetPrescaler().
2469:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2470:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_EnableFloatingPrescaler(XMC_CCU8_SLICE_t *const slice)
2471:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2472:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_EnableFloatingPrescaler:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(
2473:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->TC |= (uint32_t) CCU8_CC8_TC_FPE_Msk;
2474:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2475:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2476:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2477:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2478:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2479:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2480:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2481:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2482:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Disables the floating prescaler, by clearing CC8yTC.FPE bit.\n\n
2483:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This would return the prescaler to the normal mode.
2484:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The prescaler that would be applied is the value present in CC8yPSC.
2485:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2486:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   * \par<b>Related APIs:</b><br>
2487:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_EnableFloatingPrescaler().
2488:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2489:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_DisableFloatingPrescaler(XMC_CCU8_SLICE_t *const slice)
2490:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2491:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_DisableFloatingPrescaler:Invalid Slice Pointer", XMC_CCU8_IsValidSlice
2492:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->TC &= ~((uint32_t) CCU8_CC8_TC_FPE_Msk);
2493:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2494:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2495:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2496:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2497:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param comp_val Dither compare value
2498:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                 Range: [0x0 to 0xF]
2499:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2500:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2501:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2502:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2503:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Sets the dither spread/compare value, by setting CC8yDITS.DCVS bits.\n\n
2504:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This value is the cornerstone of PWM dithering feature. Dithering is applied/done when the value
2505:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * dithering counter is less than this compare/spread value. For all dithering counter values great
2506:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * the spread value, there is no dithering. After setting the value XMC_CCU8_EnableShadowTransfer()
2507:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  * called with appropriate mask.
2508:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2509:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   * \par<b>Related APIs:</b><br>
2510:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_EnableDithering().
2511:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2512:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_SetDitherCompareValue(XMC_CCU8_SLICE_t *const slice, const uint
2513:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 113              	 .loc 1 2513 0
 114              	 .cfi_startproc
 115              	 
 116              	 
 117              	 
 118 0000 80B4     	 push {r7}
 119              	.LCFI12:
 120              	 .cfi_def_cfa_offset 4
 121              	 .cfi_offset 7,-4
 122 0002 83B0     	 sub sp,sp,#12
 123              	.LCFI13:
 124              	 .cfi_def_cfa_offset 16
 125 0004 00AF     	 add r7,sp,#0
 126              	.LCFI14:
 127              	 .cfi_def_cfa_register 7
 128 0006 7860     	 str r0,[r7,#4]
 129 0008 0B46     	 mov r3,r1
 130 000a FB70     	 strb r3,[r7,#3]
2514:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_SetDitherCompareValue:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(sl
2515:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_SetDitherCompareValue:Invalid Dither compare value", (comp_val <= 15U)
2516:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2517:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->DITS = comp_val;
 131              	 .loc 1 2517 0
 132 000c FA78     	 ldrb r2,[r7,#3]
 133 000e 7B68     	 ldr r3,[r7,#4]
 134 0010 1A62     	 str r2,[r3,#32]
2518:D:/practica/proiect/DaveCan/Libraries/XMCLib/inc\xmc_ccu8.h **** }
 135              	 .loc 1 2518 0
 136 0012 0C37     	 adds r7,r7,#12
 137              	.LCFI15:
 138              	 .cfi_def_cfa_offset 4
 139 0014 BD46     	 mov sp,r7
 140              	.LCFI16:
 141              	 .cfi_def_cfa_register 13
 142              	 
 143 0016 5DF8047B 	 ldr r7,[sp],#4
 144              	.LCFI17:
 145              	 .cfi_restore 7
 146              	 .cfi_def_cfa_offset 0
 147 001a 7047     	 bx lr
 148              	 .cfi_endproc
 149              	.LFE179:
 151              	 .section .text.XMC_CCU8_lAssertReset,"ax",%progbits
 152              	 .align 2
 153              	 .thumb
 154              	 .thumb_func
 156              	XMC_CCU8_lAssertReset:
 157              	.LFB231:
 158              	 .file 2 "../Libraries/XMCLib/src/xmc_ccu8.c"
   1:../Libraries/XMCLib/src/xmc_ccu8.c **** /**
   2:../Libraries/XMCLib/src/xmc_ccu8.c ****  * @file xmc_ccu8.c
   3:../Libraries/XMCLib/src/xmc_ccu8.c ****  * @date 2017-04-27
   4:../Libraries/XMCLib/src/xmc_ccu8.c ****  *
   5:../Libraries/XMCLib/src/xmc_ccu8.c ****  * @cond
   6:../Libraries/XMCLib/src/xmc_ccu8.c ****  **************************************************************************************************
   7:../Libraries/XMCLib/src/xmc_ccu8.c ****  * XMClib v2.1.22 - XMC Peripheral Driver Library 
   8:../Libraries/XMCLib/src/xmc_ccu8.c ****  *
   9:../Libraries/XMCLib/src/xmc_ccu8.c ****  * Copyright (c) 2015-2019, Infineon Technologies AG
  10:../Libraries/XMCLib/src/xmc_ccu8.c ****  * All rights reserved.                        
  11:../Libraries/XMCLib/src/xmc_ccu8.c ****  *                                             
  12:../Libraries/XMCLib/src/xmc_ccu8.c ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:../Libraries/XMCLib/src/xmc_ccu8.c ****  * following conditions are met:   
  14:../Libraries/XMCLib/src/xmc_ccu8.c ****  *                                                                              
  15:../Libraries/XMCLib/src/xmc_ccu8.c ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:../Libraries/XMCLib/src/xmc_ccu8.c ****  * disclaimer.                        
  17:../Libraries/XMCLib/src/xmc_ccu8.c ****  * 
  18:../Libraries/XMCLib/src/xmc_ccu8.c ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:../Libraries/XMCLib/src/xmc_ccu8.c ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:../Libraries/XMCLib/src/xmc_ccu8.c ****  * 
  21:../Libraries/XMCLib/src/xmc_ccu8.c ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:../Libraries/XMCLib/src/xmc_ccu8.c ****  * products derived from this software without specific prior written permission.                  
  23:../Libraries/XMCLib/src/xmc_ccu8.c ****  *                                                                              
  24:../Libraries/XMCLib/src/xmc_ccu8.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:../Libraries/XMCLib/src/xmc_ccu8.c ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:../Libraries/XMCLib/src/xmc_ccu8.c ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:../Libraries/XMCLib/src/xmc_ccu8.c ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:../Libraries/XMCLib/src/xmc_ccu8.c ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:../Libraries/XMCLib/src/xmc_ccu8.c ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:../Libraries/XMCLib/src/xmc_ccu8.c ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:../Libraries/XMCLib/src/xmc_ccu8.c ****  *                                                                              
  32:../Libraries/XMCLib/src/xmc_ccu8.c ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:../Libraries/XMCLib/src/xmc_ccu8.c ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:../Libraries/XMCLib/src/xmc_ccu8.c ****  **************************************************************************************************
  35:../Libraries/XMCLib/src/xmc_ccu8.c ****  *
  36:../Libraries/XMCLib/src/xmc_ccu8.c ****  * Change History
  37:../Libraries/XMCLib/src/xmc_ccu8.c ****  * --------------
  38:../Libraries/XMCLib/src/xmc_ccu8.c ****  *
  39:../Libraries/XMCLib/src/xmc_ccu8.c ****  * 2015-02-20:
  40:../Libraries/XMCLib/src/xmc_ccu8.c ****  *     - Initial <br>
  41:../Libraries/XMCLib/src/xmc_ccu8.c ****  *
  42:../Libraries/XMCLib/src/xmc_ccu8.c ****  * 2015-06-20:
  43:../Libraries/XMCLib/src/xmc_ccu8.c ****  *     - Removed definition of GetDriverVersion API <br>
  44:../Libraries/XMCLib/src/xmc_ccu8.c ****  *     - Added XMC_CCU8_SLICE_LoadSelector() API, to select which compare register value has to be 
  45:../Libraries/XMCLib/src/xmc_ccu8.c ****  *       during external load event. 
  46:../Libraries/XMCLib/src/xmc_ccu8.c ****  *
  47:../Libraries/XMCLib/src/xmc_ccu8.c ****  * 2015-07-24:
  48:../Libraries/XMCLib/src/xmc_ccu8.c ****  *     - XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent() is updated to support XMC14 device. <br>
  49:../Libraries/XMCLib/src/xmc_ccu8.c ****  *
  50:../Libraries/XMCLib/src/xmc_ccu8.c ****  * 2015-08-17:
  51:../Libraries/XMCLib/src/xmc_ccu8.c ****  *     - XMC_CCU8_SLICE_CHC_CONFIG_MASK is not applicable to XMC14 devices. <br>
  52:../Libraries/XMCLib/src/xmc_ccu8.c ****  *     - Start of prescaler XMC_CCU8_StartPrescaler() is invoked in XMC_CCU8_Init() API. <br>
  53:../Libraries/XMCLib/src/xmc_ccu8.c ****  *     - In XMC_CCU8_SLICE_CompareInit(), CHC register is updated according to the device. <br>
  54:../Libraries/XMCLib/src/xmc_ccu8.c ****  *     - Bug fix XMC_CCU8_SLICE_ConfigureEvent() during the level setting for XMC14 devices. <br>
  55:../Libraries/XMCLib/src/xmc_ccu8.c ****  *     - XMC_CCU8_EnableShadowTransfer() definition is removed, since the API is made as inline. <b
  56:../Libraries/XMCLib/src/xmc_ccu8.c ****  * 
  57:../Libraries/XMCLib/src/xmc_ccu8.c ****  * 2015-10-07:
  58:../Libraries/XMCLib/src/xmc_ccu8.c ****  *     - XMC_CCU8_SLICE_GetEvent() is made as inline.
  59:../Libraries/XMCLib/src/xmc_ccu8.c ****  *     - DOC updates for the newly added APIs.
  60:../Libraries/XMCLib/src/xmc_ccu8.c ****  *
  61:../Libraries/XMCLib/src/xmc_ccu8.c ****  * 2017-02-25:
  62:../Libraries/XMCLib/src/xmc_ccu8.c ****  *     - XMC_CCU8_lAssertReset(), XMC_CCU8_lDeassertReset(), XMC_CCU8_lGateClock() and XMC_CCU8_lUn
  63:../Libraries/XMCLib/src/xmc_ccu8.c ****  *
  64:../Libraries/XMCLib/src/xmc_ccu8.c ****  * 2017-04-27:
  65:../Libraries/XMCLib/src/xmc_ccu8.c ****  *     - XMC_CCU8_SLICE_SetPrescaler() changed div_val parameter to type XMC_CCU8_SLICE_PRESCALER_t
  66:../Libraries/XMCLib/src/xmc_ccu8.c ****  *
  67:../Libraries/XMCLib/src/xmc_ccu8.c ****  * @endcond
  68:../Libraries/XMCLib/src/xmc_ccu8.c ****  */
  69:../Libraries/XMCLib/src/xmc_ccu8.c **** /**************************************************************************************************
  70:../Libraries/XMCLib/src/xmc_ccu8.c ****  * HEADER FILES
  71:../Libraries/XMCLib/src/xmc_ccu8.c ****  **************************************************************************************************
  72:../Libraries/XMCLib/src/xmc_ccu8.c **** #include "xmc_ccu8.h"
  73:../Libraries/XMCLib/src/xmc_ccu8.c **** 
  74:../Libraries/XMCLib/src/xmc_ccu8.c **** #if defined(CCU80)
  75:../Libraries/XMCLib/src/xmc_ccu8.c **** #include "xmc_scu.h"
  76:../Libraries/XMCLib/src/xmc_ccu8.c **** 
  77:../Libraries/XMCLib/src/xmc_ccu8.c **** /**************************************************************************************************
  78:../Libraries/XMCLib/src/xmc_ccu8.c ****  * MACROS
  79:../Libraries/XMCLib/src/xmc_ccu8.c ****  **************************************************************************************************
  80:../Libraries/XMCLib/src/xmc_ccu8.c **** #define XMC_CCU8_NUM_SLICES_PER_MODULE          (4U)
  81:../Libraries/XMCLib/src/xmc_ccu8.c **** #define XMC_CCU8_SLICE_DITHER_PERIOD_MASK       (1U)
  82:../Libraries/XMCLib/src/xmc_ccu8.c **** #define XMC_CCU8_SLICE_DITHER_DUTYCYCLE_MASK    (2U)
  83:../Libraries/XMCLib/src/xmc_ccu8.c **** #define XMC_CCU8_SLICE_EVENT_EDGE_CONFIG_MASK   (3U)
  84:../Libraries/XMCLib/src/xmc_ccu8.c **** #define XMC_CCU8_SLICE_EVENT_LEVEL_CONFIG_MASK  (1U)
  85:../Libraries/XMCLib/src/xmc_ccu8.c **** #define XMC_CCU8_SLICE_EVENT_FILTER_CONFIG_MASK (3U)
  86:../Libraries/XMCLib/src/xmc_ccu8.c **** #if defined(CCU8V3) /* Defined for XMC1400 devices */
  87:../Libraries/XMCLib/src/xmc_ccu8.c **** #define XMC_CCU8_SLICE_EVENT_INPUT_CONFIG_MASK  CCU8_CC8_INS1_EV0IS_Msk
  88:../Libraries/XMCLib/src/xmc_ccu8.c **** #else
  89:../Libraries/XMCLib/src/xmc_ccu8.c **** #define XMC_CCU8_SLICE_EVENT_INPUT_CONFIG_MASK  CCU8_CC8_INS_EV0IS_Msk
  90:../Libraries/XMCLib/src/xmc_ccu8.c **** #endif
  91:../Libraries/XMCLib/src/xmc_ccu8.c **** #define XMC_CCU8_GIDLC_CLOCK_MASK               (15U)
  92:../Libraries/XMCLib/src/xmc_ccu8.c **** #define XMC_CCU8_GCSS_SLICE0_MASK               (1U)
  93:../Libraries/XMCLib/src/xmc_ccu8.c **** #define XMC_CCU8_GCSS_SLICE1_MASK               (16U)
  94:../Libraries/XMCLib/src/xmc_ccu8.c **** #define XMC_CCU8_GCSS_SLICE2_MASK               (256U)
  95:../Libraries/XMCLib/src/xmc_ccu8.c **** #define XMC_CCU8_GCSS_SLICE3_MASK               (4096U)
  96:../Libraries/XMCLib/src/xmc_ccu8.c **** #define XMC_CCU8_SLICE_DEAD_TIME_CONFIG_MASK    (63U)
  97:../Libraries/XMCLib/src/xmc_ccu8.c **** #if !defined(CCU8V3) /* Defined for all devices except XMC1400 */
  98:../Libraries/XMCLib/src/xmc_ccu8.c **** #define XMC_CCU8_SLICE_CHC_CONFIG_MASK          (20U)
  99:../Libraries/XMCLib/src/xmc_ccu8.c **** #endif
 100:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 101:../Libraries/XMCLib/src/xmc_ccu8.c **** #define XMC_CCU8_SLICE_CHECK_DTC_DIV(div) \
 102:../Libraries/XMCLib/src/xmc_ccu8.c ****     ((div == XMC_CCU8_SLICE_DTC_DIV_1) || \
 103:../Libraries/XMCLib/src/xmc_ccu8.c ****      (div == XMC_CCU8_SLICE_DTC_DIV_2) || \
 104:../Libraries/XMCLib/src/xmc_ccu8.c ****      (div == XMC_CCU8_SLICE_DTC_DIV_4) || \
 105:../Libraries/XMCLib/src/xmc_ccu8.c ****      (div == XMC_CCU8_SLICE_DTC_DIV_8))
 106:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 107:../Libraries/XMCLib/src/xmc_ccu8.c **** #define XMC_CCU8_SLICE_CHECK_CLOCK(clock) \
 108:../Libraries/XMCLib/src/xmc_ccu8.c ****     ((clock == XMC_CCU8_CLOCK_SCU)        || \
 109:../Libraries/XMCLib/src/xmc_ccu8.c ****      (clock == XMC_CCU8_CLOCK_EXTERNAL_A) || \
 110:../Libraries/XMCLib/src/xmc_ccu8.c ****      (clock == XMC_CCU8_CLOCK_EXTERNAL_B) || \
 111:../Libraries/XMCLib/src/xmc_ccu8.c ****      (clock == XMC_CCU8_CLOCK_EXTERNAL_C))
 112:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 113:../Libraries/XMCLib/src/xmc_ccu8.c **** #define XMC_CCU8_SLICE_CHECK_OUTPUT(out) \
 114:../Libraries/XMCLib/src/xmc_ccu8.c ****     ((out == XMC_CCU8_SLICE_OUTPUT_0) || \
 115:../Libraries/XMCLib/src/xmc_ccu8.c ****      (out == XMC_CCU8_SLICE_OUTPUT_1) || \
 116:../Libraries/XMCLib/src/xmc_ccu8.c ****      (out == XMC_CCU8_SLICE_OUTPUT_2) || \
 117:../Libraries/XMCLib/src/xmc_ccu8.c ****      (out == XMC_CCU8_SLICE_OUTPUT_3))
 118:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 119:../Libraries/XMCLib/src/xmc_ccu8.c **** #define XMC_CCU8_SLICE_CHECK_END_MODE(end_mode) \
 120:../Libraries/XMCLib/src/xmc_ccu8.c ****     ((end_mode == XMC_CCU8_SLICE_END_MODE_TIMER_STOP) || \
 121:../Libraries/XMCLib/src/xmc_ccu8.c ****      (end_mode == XMC_CCU8_SLICE_END_MODE_TIMER_CLEAR) || \
 122:../Libraries/XMCLib/src/xmc_ccu8.c ****      (end_mode == XMC_CCU8_SLICE_END_MODE_TIMER_STOP_CLEAR))
 123:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 124:../Libraries/XMCLib/src/xmc_ccu8.c **** #define XMC_CCU8_SLICE_CHECK_EVENT_ID(event_id) \
 125:../Libraries/XMCLib/src/xmc_ccu8.c ****     ((event_id == XMC_CCU8_SLICE_EVENT_NONE)|| \
 126:../Libraries/XMCLib/src/xmc_ccu8.c ****      (event_id == XMC_CCU8_SLICE_EVENT_0)   || \
 127:../Libraries/XMCLib/src/xmc_ccu8.c ****      (event_id == XMC_CCU8_SLICE_EVENT_1)   || \
 128:../Libraries/XMCLib/src/xmc_ccu8.c ****      (event_id == XMC_CCU8_SLICE_EVENT_2))
 129:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 130:../Libraries/XMCLib/src/xmc_ccu8.c **** #define XMC_CCU8_SLICE_CHECK_EDGE_SENSITIVITY(edge) \
 131:../Libraries/XMCLib/src/xmc_ccu8.c ****     ((edge == XMC_CCU8_SLICE_EVENT_EDGE_SENSITIVITY_NONE)        || \
 132:../Libraries/XMCLib/src/xmc_ccu8.c ****      (edge == XMC_CCU8_SLICE_EVENT_EDGE_SENSITIVITY_RISING_EDGE) || \
 133:../Libraries/XMCLib/src/xmc_ccu8.c ****      (edge == XMC_CCU8_SLICE_EVENT_EDGE_SENSITIVITY_FALLING_EDGE)|| \
 134:../Libraries/XMCLib/src/xmc_ccu8.c ****      (edge == XMC_CCU8_SLICE_EVENT_EDGE_SENSITIVITY_DUAL_EDGE))
 135:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 136:../Libraries/XMCLib/src/xmc_ccu8.c **** #define XMC_CCU8_SLICE_CHECK_EVENT_FILTER(cycles) \
 137:../Libraries/XMCLib/src/xmc_ccu8.c ****     ((cycles == XMC_CCU8_SLICE_EVENT_FILTER_DISABLED) || \
 138:../Libraries/XMCLib/src/xmc_ccu8.c ****      (cycles == XMC_CCU8_SLICE_EVENT_FILTER_3_CYCLES) || \
 139:../Libraries/XMCLib/src/xmc_ccu8.c ****      (cycles == XMC_CCU8_SLICE_EVENT_FILTER_5_CYCLES) || \
 140:../Libraries/XMCLib/src/xmc_ccu8.c ****      (cycles == XMC_CCU8_SLICE_EVENT_FILTER_7_CYCLES))
 141:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 142:../Libraries/XMCLib/src/xmc_ccu8.c **** #define XMC_CCU8_SLICE_CHECK_CAP_TIMER_CLEAR_MODE(mode) \
 143:../Libraries/XMCLib/src/xmc_ccu8.c ****     ((mode == XMC_CCU8_SLICE_TIMER_CLEAR_MODE_NEVER)   || \
 144:../Libraries/XMCLib/src/xmc_ccu8.c ****      (mode == XMC_CCU8_SLICE_TIMER_CLEAR_MODE_CAP_HIGH)|| \
 145:../Libraries/XMCLib/src/xmc_ccu8.c ****      (mode == XMC_CCU8_SLICE_TIMER_CLEAR_MODE_CAP_LOW) || \
 146:../Libraries/XMCLib/src/xmc_ccu8.c ****      (mode == XMC_CCU8_SLICE_TIMER_CLEAR_MODE_ALWAYS))
 147:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 148:../Libraries/XMCLib/src/xmc_ccu8.c **** #define XMC_CCU8_SLICE_CHECK_MCS_ACTION(mcs_action) \
 149:../Libraries/XMCLib/src/xmc_ccu8.c ****     ((mcs_action == XMC_CCU8_SLICE_MCMS_ACTION_TRANSFER_PR_CR)      || \
 150:../Libraries/XMCLib/src/xmc_ccu8.c ****      (mcs_action == XMC_CCU8_SLICE_MCMS_ACTION_TRANSFER_PR_CR_PCMP) || \
 151:../Libraries/XMCLib/src/xmc_ccu8.c ****      (mcs_action == XMC_CCU8_SLICE_MCMS_ACTION_TRANSFER_PR_CR_PCMP_DIT))
 152:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 153:../Libraries/XMCLib/src/xmc_ccu8.c **** #define XMC_CCU8_SLICE_CHECK_SR_ID(id) \
 154:../Libraries/XMCLib/src/xmc_ccu8.c ****     ((id == XMC_CCU8_SLICE_SR_ID_0) || \
 155:../Libraries/XMCLib/src/xmc_ccu8.c ****      (id == XMC_CCU8_SLICE_SR_ID_1) || \
 156:../Libraries/XMCLib/src/xmc_ccu8.c ****      (id == XMC_CCU8_SLICE_SR_ID_2) || \
 157:../Libraries/XMCLib/src/xmc_ccu8.c ****      (id == XMC_CCU8_SLICE_SR_ID_3))
 158:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 159:../Libraries/XMCLib/src/xmc_ccu8.c **** #define XMC_CCU8_SLICE_CHECK_MODULATION_CHANNEL(channel) \
 160:../Libraries/XMCLib/src/xmc_ccu8.c ****     ((channel == XMC_CCU8_SLICE_MODULATION_CHANNEL_NONE) || \
 161:../Libraries/XMCLib/src/xmc_ccu8.c ****      (channel == XMC_CCU8_SLICE_MODULATION_CHANNEL_1)    || \
 162:../Libraries/XMCLib/src/xmc_ccu8.c ****      (channel == XMC_CCU8_SLICE_MODULATION_CHANNEL_2)    || \
 163:../Libraries/XMCLib/src/xmc_ccu8.c ****      (channel == XMC_CCU8_SLICE_MODULATION_CHANNEL_1_AND_2))
 164:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 165:../Libraries/XMCLib/src/xmc_ccu8.c **** #if((UC_SERIES == XMC13) || (UC_SERIES == XMC14))
 166:../Libraries/XMCLib/src/xmc_ccu8.c **** #define XMC_CCU8_SLICE_CHECK_SLICE_STATUS(channel) \
 167:../Libraries/XMCLib/src/xmc_ccu8.c ****     ((channel == XMC_CCU8_SLICE_STATUS_CHANNEL_1)       || \
 168:../Libraries/XMCLib/src/xmc_ccu8.c ****      (channel == XMC_CCU8_SLICE_STATUS_CHANNEL_2)       || \
 169:../Libraries/XMCLib/src/xmc_ccu8.c ****      (channel == XMC_CCU8_SLICE_STATUS_CHANNEL_1_AND_2) || \
 170:../Libraries/XMCLib/src/xmc_ccu8.c ****      (channel == XMC_CCU8_SLICE_STATUS_CHANNEL_1_OR_2))
 171:../Libraries/XMCLib/src/xmc_ccu8.c **** #else
 172:../Libraries/XMCLib/src/xmc_ccu8.c **** #define XMC_CCU8_SLICE_CHECK_SLICE_STATUS(channel) \
 173:../Libraries/XMCLib/src/xmc_ccu8.c ****     ((channel == XMC_CCU8_SLICE_STATUS_CHANNEL_1)       || \
 174:../Libraries/XMCLib/src/xmc_ccu8.c ****      (channel == XMC_CCU8_SLICE_STATUS_CHANNEL_2)       || \
 175:../Libraries/XMCLib/src/xmc_ccu8.c ****      (channel == XMC_CCU8_SLICE_STATUS_CHANNEL_1_AND_2))
 176:../Libraries/XMCLib/src/xmc_ccu8.c **** #endif
 177:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 178:../Libraries/XMCLib/src/xmc_ccu8.c **** /**************************************************************************************************
 179:../Libraries/XMCLib/src/xmc_ccu8.c ****  * LOCAL ROUTINES
 180:../Libraries/XMCLib/src/xmc_ccu8.c ****  **************************************************************************************************
 181:../Libraries/XMCLib/src/xmc_ccu8.c **** #if defined(PERIPHERAL_RESET_SUPPORTED)
 182:../Libraries/XMCLib/src/xmc_ccu8.c **** __STATIC_INLINE void XMC_CCU8_lAssertReset(const XMC_CCU8_MODULE_t *const module)
 183:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 159              	 .loc 2 183 0
 160              	 .cfi_startproc
 161              	 
 162              	 
 163 0000 80B5     	 push {r7,lr}
 164              	.LCFI18:
 165              	 .cfi_def_cfa_offset 8
 166              	 .cfi_offset 7,-8
 167              	 .cfi_offset 14,-4
 168 0002 82B0     	 sub sp,sp,#8
 169              	.LCFI19:
 170              	 .cfi_def_cfa_offset 16
 171 0004 00AF     	 add r7,sp,#0
 172              	.LCFI20:
 173              	 .cfi_def_cfa_register 7
 174 0006 7860     	 str r0,[r7,#4]
 184:../Libraries/XMCLib/src/xmc_ccu8.c ****   if (module == CCU80)
 175              	 .loc 2 184 0
 176 0008 7B68     	 ldr r3,[r7,#4]
 177 000a 094A     	 ldr r2,.L7
 178 000c 9342     	 cmp r3,r2
 179 000e 03D1     	 bne .L5
 185:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
 186:../Libraries/XMCLib/src/xmc_ccu8.c ****     XMC_SCU_RESET_AssertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_CCU80);
 180              	 .loc 2 186 0
 181 0010 8020     	 movs r0,#128
 182 0012 FFF7FEFF 	 bl XMC_SCU_RESET_AssertPeripheralReset
 183 0016 07E0     	 b .L4
 184              	.L5:
 187:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
 188:../Libraries/XMCLib/src/xmc_ccu8.c **** #if defined(CCU81)
 189:../Libraries/XMCLib/src/xmc_ccu8.c ****   else if (module == CCU81)
 185              	 .loc 2 189 0
 186 0018 7B68     	 ldr r3,[r7,#4]
 187 001a 064A     	 ldr r2,.L7+4
 188 001c 9342     	 cmp r3,r2
 189 001e 03D1     	 bne .L4
 190:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
 191:../Libraries/XMCLib/src/xmc_ccu8.c ****     XMC_SCU_RESET_AssertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_CCU81);
 190              	 .loc 2 191 0
 191 0020 4FF48070 	 mov r0,#256
 192 0024 FFF7FEFF 	 bl XMC_SCU_RESET_AssertPeripheralReset
 193              	.L4:
 192:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
 193:../Libraries/XMCLib/src/xmc_ccu8.c **** #endif
 194:../Libraries/XMCLib/src/xmc_ccu8.c ****   else
 195:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
 196:../Libraries/XMCLib/src/xmc_ccu8.c ****     XMC_ASSERT("XMC_CCU8_lAssertReset:Invalid Module Pointer", 0);
 197:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
 198:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 194              	 .loc 2 198 0
 195 0028 0837     	 adds r7,r7,#8
 196              	.LCFI21:
 197              	 .cfi_def_cfa_offset 8
 198 002a BD46     	 mov sp,r7
 199              	.LCFI22:
 200              	 .cfi_def_cfa_register 13
 201              	 
 202 002c 80BD     	 pop {r7,pc}
 203              	.L8:
 204 002e 00BF     	 .align 2
 205              	.L7:
 206 0030 00000240 	 .word 1073872896
 207 0034 00400240 	 .word 1073889280
 208              	 .cfi_endproc
 209              	.LFE231:
 211              	 .section .text.XMC_CCU8_lDeassertReset,"ax",%progbits
 212              	 .align 2
 213              	 .thumb
 214              	 .thumb_func
 216              	XMC_CCU8_lDeassertReset:
 217              	.LFB232:
 199:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 200:../Libraries/XMCLib/src/xmc_ccu8.c **** __STATIC_INLINE void XMC_CCU8_lDeassertReset(const XMC_CCU8_MODULE_t *const module)
 201:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 218              	 .loc 2 201 0
 219              	 .cfi_startproc
 220              	 
 221              	 
 222 0000 80B5     	 push {r7,lr}
 223              	.LCFI23:
 224              	 .cfi_def_cfa_offset 8
 225              	 .cfi_offset 7,-8
 226              	 .cfi_offset 14,-4
 227 0002 82B0     	 sub sp,sp,#8
 228              	.LCFI24:
 229              	 .cfi_def_cfa_offset 16
 230 0004 00AF     	 add r7,sp,#0
 231              	.LCFI25:
 232              	 .cfi_def_cfa_register 7
 233 0006 7860     	 str r0,[r7,#4]
 202:../Libraries/XMCLib/src/xmc_ccu8.c ****   if (module == CCU80)
 234              	 .loc 2 202 0
 235 0008 7B68     	 ldr r3,[r7,#4]
 236 000a 094A     	 ldr r2,.L12
 237 000c 9342     	 cmp r3,r2
 238 000e 03D1     	 bne .L10
 203:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
 204:../Libraries/XMCLib/src/xmc_ccu8.c ****     XMC_SCU_RESET_DeassertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_CCU80);
 239              	 .loc 2 204 0
 240 0010 8020     	 movs r0,#128
 241 0012 FFF7FEFF 	 bl XMC_SCU_RESET_DeassertPeripheralReset
 242 0016 07E0     	 b .L9
 243              	.L10:
 205:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
 206:../Libraries/XMCLib/src/xmc_ccu8.c **** #if defined(CCU81)
 207:../Libraries/XMCLib/src/xmc_ccu8.c ****   else if (module == CCU81)
 244              	 .loc 2 207 0
 245 0018 7B68     	 ldr r3,[r7,#4]
 246 001a 064A     	 ldr r2,.L12+4
 247 001c 9342     	 cmp r3,r2
 248 001e 03D1     	 bne .L9
 208:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
 209:../Libraries/XMCLib/src/xmc_ccu8.c ****     XMC_SCU_RESET_DeassertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_CCU81);
 249              	 .loc 2 209 0
 250 0020 4FF48070 	 mov r0,#256
 251 0024 FFF7FEFF 	 bl XMC_SCU_RESET_DeassertPeripheralReset
 252              	.L9:
 210:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
 211:../Libraries/XMCLib/src/xmc_ccu8.c **** #endif
 212:../Libraries/XMCLib/src/xmc_ccu8.c ****   else
 213:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
 214:../Libraries/XMCLib/src/xmc_ccu8.c ****     XMC_ASSERT("XMC_CCU8_lDeassertReset:Invalid Module Pointer", 0);
 215:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
 216:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 253              	 .loc 2 216 0
 254 0028 0837     	 adds r7,r7,#8
 255              	.LCFI26:
 256              	 .cfi_def_cfa_offset 8
 257 002a BD46     	 mov sp,r7
 258              	.LCFI27:
 259              	 .cfi_def_cfa_register 13
 260              	 
 261 002c 80BD     	 pop {r7,pc}
 262              	.L13:
 263 002e 00BF     	 .align 2
 264              	.L12:
 265 0030 00000240 	 .word 1073872896
 266 0034 00400240 	 .word 1073889280
 267              	 .cfi_endproc
 268              	.LFE232:
 270              	 .section .text.XMC_CCU8_EnableModule,"ax",%progbits
 271              	 .align 2
 272              	 .global XMC_CCU8_EnableModule
 273              	 .thumb
 274              	 .thumb_func
 276              	XMC_CCU8_EnableModule:
 277              	.LFB233:
 217:../Libraries/XMCLib/src/xmc_ccu8.c **** #endif
 218:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 219:../Libraries/XMCLib/src/xmc_ccu8.c **** #if defined(CLOCK_GATING_SUPPORTED)
 220:../Libraries/XMCLib/src/xmc_ccu8.c **** __STATIC_INLINE void XMC_CCU8_lGateClock(XMC_CCU8_MODULE_t *const module)
 221:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 222:../Libraries/XMCLib/src/xmc_ccu8.c ****   if (module == CCU80)
 223:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
 224:../Libraries/XMCLib/src/xmc_ccu8.c ****     XMC_SCU_CLOCK_GatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_CCU80);
 225:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
 226:../Libraries/XMCLib/src/xmc_ccu8.c **** #if defined(CCU81)
 227:../Libraries/XMCLib/src/xmc_ccu8.c ****   else if (module == CCU81)
 228:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
 229:../Libraries/XMCLib/src/xmc_ccu8.c ****     XMC_SCU_CLOCK_GatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_CCU81);
 230:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
 231:../Libraries/XMCLib/src/xmc_ccu8.c **** #endif
 232:../Libraries/XMCLib/src/xmc_ccu8.c ****   else
 233:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
 234:../Libraries/XMCLib/src/xmc_ccu8.c ****     XMC_ASSERT("XMC_CCU8_lGateClock:Invalid Module Pointer", 0);
 235:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
 236:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 237:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 238:../Libraries/XMCLib/src/xmc_ccu8.c **** __STATIC_INLINE void XMC_CCU8_lUngateClock(XMC_CCU8_MODULE_t *const module)
 239:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 240:../Libraries/XMCLib/src/xmc_ccu8.c ****   if (module == CCU80)
 241:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
 242:../Libraries/XMCLib/src/xmc_ccu8.c ****     XMC_SCU_CLOCK_UngatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_CCU80);
 243:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
 244:../Libraries/XMCLib/src/xmc_ccu8.c **** #if defined(CCU81)
 245:../Libraries/XMCLib/src/xmc_ccu8.c ****   else if (module == CCU81)
 246:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
 247:../Libraries/XMCLib/src/xmc_ccu8.c ****     XMC_SCU_CLOCK_UngatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_CCU81);
 248:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
 249:../Libraries/XMCLib/src/xmc_ccu8.c **** #endif
 250:../Libraries/XMCLib/src/xmc_ccu8.c ****   else
 251:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
 252:../Libraries/XMCLib/src/xmc_ccu8.c ****     XMC_ASSERT("XMC_CCU8_lUngateClock:Invalid Module Pointer", 0);
 253:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
 254:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 255:../Libraries/XMCLib/src/xmc_ccu8.c **** #endif
 256:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 257:../Libraries/XMCLib/src/xmc_ccu8.c **** #if defined (XMC_ASSERT_ENABLE)
 258:../Libraries/XMCLib/src/xmc_ccu8.c **** __STATIC_INLINE bool XMC_CCU8_SLICE_IsInputvalid(XMC_CCU8_SLICE_INPUT_t input)
 259:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 260:../Libraries/XMCLib/src/xmc_ccu8.c **** #if (UC_SERIES == XMC14)
 261:../Libraries/XMCLib/src/xmc_ccu8.c ****   return (input < 48U);
 262:../Libraries/XMCLib/src/xmc_ccu8.c **** #else
 263:../Libraries/XMCLib/src/xmc_ccu8.c ****   return (input < 16U);
 264:../Libraries/XMCLib/src/xmc_ccu8.c **** #endif
 265:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 266:../Libraries/XMCLib/src/xmc_ccu8.c **** #endif
 267:../Libraries/XMCLib/src/xmc_ccu8.c **** /**************************************************************************************************
 268:../Libraries/XMCLib/src/xmc_ccu8.c ****  * API IMPLEMENTATION
 269:../Libraries/XMCLib/src/xmc_ccu8.c ****  **************************************************************************************************
 270:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 271:../Libraries/XMCLib/src/xmc_ccu8.c **** /* API to set the CCU8 module as active and enable the clock  */
 272:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_EnableModule(XMC_CCU8_MODULE_t *const module)
 273:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 278              	 .loc 2 273 0
 279              	 .cfi_startproc
 280              	 
 281              	 
 282 0000 80B5     	 push {r7,lr}
 283              	.LCFI28:
 284              	 .cfi_def_cfa_offset 8
 285              	 .cfi_offset 7,-8
 286              	 .cfi_offset 14,-4
 287 0002 82B0     	 sub sp,sp,#8
 288              	.LCFI29:
 289              	 .cfi_def_cfa_offset 16
 290 0004 00AF     	 add r7,sp,#0
 291              	.LCFI30:
 292              	 .cfi_def_cfa_register 7
 293 0006 7860     	 str r0,[r7,#4]
 274:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_EnableModule:Invalid Module Pointer", XMC_CCU8_IsValidModule(module));
 275:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 276:../Libraries/XMCLib/src/xmc_ccu8.c **** #if (UC_FAMILY == XMC4)
 277:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Enable CCU8 module clock */
 278:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_SCU_CLOCK_EnableClock(XMC_SCU_CLOCK_CCU);
 294              	 .loc 2 278 0
 295 0008 1020     	 movs r0,#16
 296 000a FFF7FEFF 	 bl XMC_SCU_CLOCK_EnableClock
 279:../Libraries/XMCLib/src/xmc_ccu8.c **** #endif
 280:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 281:../Libraries/XMCLib/src/xmc_ccu8.c **** #if defined(CLOCK_GATING_SUPPORTED)
 282:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_CCU8_lUngateClock(module);
 283:../Libraries/XMCLib/src/xmc_ccu8.c **** #endif
 284:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 285:../Libraries/XMCLib/src/xmc_ccu8.c **** #if defined(PERIPHERAL_RESET_SUPPORTED)
 286:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_CCU8_lDeassertReset(module);
 297              	 .loc 2 286 0
 298 000e 7868     	 ldr r0,[r7,#4]
 299 0010 FFF7FEFF 	 bl XMC_CCU8_lDeassertReset
 287:../Libraries/XMCLib/src/xmc_ccu8.c **** #endif
 288:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 300              	 .loc 2 288 0
 301 0014 0837     	 adds r7,r7,#8
 302              	.LCFI31:
 303              	 .cfi_def_cfa_offset 8
 304 0016 BD46     	 mov sp,r7
 305              	.LCFI32:
 306              	 .cfi_def_cfa_register 13
 307              	 
 308 0018 80BD     	 pop {r7,pc}
 309              	 .cfi_endproc
 310              	.LFE233:
 312 001a 00BF     	 .section .text.XMC_CCU8_DisableModule,"ax",%progbits
 313              	 .align 2
 314              	 .global XMC_CCU8_DisableModule
 315              	 .thumb
 316              	 .thumb_func
 318              	XMC_CCU8_DisableModule:
 319              	.LFB234:
 289:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 290:../Libraries/XMCLib/src/xmc_ccu8.c **** /* API to set the CCU8 module as idle and disable the clock  */
 291:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_DisableModule(XMC_CCU8_MODULE_t *const module)
 292:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 320              	 .loc 2 292 0
 321              	 .cfi_startproc
 322              	 
 323              	 
 324 0000 80B5     	 push {r7,lr}
 325              	.LCFI33:
 326              	 .cfi_def_cfa_offset 8
 327              	 .cfi_offset 7,-8
 328              	 .cfi_offset 14,-4
 329 0002 82B0     	 sub sp,sp,#8
 330              	.LCFI34:
 331              	 .cfi_def_cfa_offset 16
 332 0004 00AF     	 add r7,sp,#0
 333              	.LCFI35:
 334              	 .cfi_def_cfa_register 7
 335 0006 7860     	 str r0,[r7,#4]
 293:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_DisableModule:Invalid Module Pointer", XMC_CCU8_IsValidModule(module));
 294:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 295:../Libraries/XMCLib/src/xmc_ccu8.c **** #if defined(PERIPHERAL_RESET_SUPPORTED)
 296:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_CCU8_lAssertReset(module);
 336              	 .loc 2 296 0
 337 0008 7868     	 ldr r0,[r7,#4]
 338 000a FFF7FEFF 	 bl XMC_CCU8_lAssertReset
 297:../Libraries/XMCLib/src/xmc_ccu8.c **** #endif
 298:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 299:../Libraries/XMCLib/src/xmc_ccu8.c **** #if defined(CLOCK_GATING_SUPPORTED)
 300:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_CCU8_lGateClock(module);
 301:../Libraries/XMCLib/src/xmc_ccu8.c **** #endif
 302:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 339              	 .loc 2 302 0
 340 000e 0837     	 adds r7,r7,#8
 341              	.LCFI36:
 342              	 .cfi_def_cfa_offset 8
 343 0010 BD46     	 mov sp,r7
 344              	.LCFI37:
 345              	 .cfi_def_cfa_register 13
 346              	 
 347 0012 80BD     	 pop {r7,pc}
 348              	 .cfi_endproc
 349              	.LFE234:
 351              	 .section .text.XMC_CCU8_Init,"ax",%progbits
 352              	 .align 2
 353              	 .global XMC_CCU8_Init
 354              	 .thumb
 355              	 .thumb_func
 357              	XMC_CCU8_Init:
 358              	.LFB235:
 303:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 304:../Libraries/XMCLib/src/xmc_ccu8.c **** /* API to initialize CCU8 global resources  */
 305:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_Init(XMC_CCU8_MODULE_t *const module, const XMC_CCU8_SLICE_MCMS_ACTION_t mcs_action)
 306:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 359              	 .loc 2 306 0
 360              	 .cfi_startproc
 361              	 
 362              	 
 363 0000 80B5     	 push {r7,lr}
 364              	.LCFI38:
 365              	 .cfi_def_cfa_offset 8
 366              	 .cfi_offset 7,-8
 367              	 .cfi_offset 14,-4
 368 0002 84B0     	 sub sp,sp,#16
 369              	.LCFI39:
 370              	 .cfi_def_cfa_offset 24
 371 0004 00AF     	 add r7,sp,#0
 372              	.LCFI40:
 373              	 .cfi_def_cfa_register 7
 374 0006 7860     	 str r0,[r7,#4]
 375 0008 0B46     	 mov r3,r1
 376 000a FB70     	 strb r3,[r7,#3]
 307:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint32_t gctrl;
 308:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 309:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_Init:Invalid Module Pointer", XMC_CCU8_IsValidModule(module));
 310:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_Init:Invalid mcs action", XMC_CCU8_SLICE_CHECK_MCS_ACTION(mcs_action));
 311:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 312:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Enable CCU8 module */
 313:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_CCU8_EnableModule(module);
 377              	 .loc 2 313 0
 378 000c 7868     	 ldr r0,[r7,#4]
 379 000e FFF7FEFF 	 bl XMC_CCU8_EnableModule
 314:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Start the prescaler */
 315:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_CCU8_StartPrescaler(module);
 380              	 .loc 2 315 0
 381 0012 7868     	 ldr r0,[r7,#4]
 382 0014 FFF7FEFF 	 bl XMC_CCU8_StartPrescaler
 316:../Libraries/XMCLib/src/xmc_ccu8.c ****   
 317:../Libraries/XMCLib/src/xmc_ccu8.c ****   gctrl = module->GCTRL;
 383              	 .loc 2 317 0
 384 0018 7B68     	 ldr r3,[r7,#4]
 385 001a 1B68     	 ldr r3,[r3]
 386 001c FB60     	 str r3,[r7,#12]
 318:../Libraries/XMCLib/src/xmc_ccu8.c ****   gctrl &= ~((uint32_t) CCU8_GCTRL_MSDE_Msk);
 387              	 .loc 2 318 0
 388 001e FB68     	 ldr r3,[r7,#12]
 389 0020 23F44043 	 bic r3,r3,#49152
 390 0024 FB60     	 str r3,[r7,#12]
 319:../Libraries/XMCLib/src/xmc_ccu8.c ****   gctrl |= (uint32_t)mcs_action << CCU8_GCTRL_MSDE_Pos;
 391              	 .loc 2 319 0
 392 0026 FB78     	 ldrb r3,[r7,#3]
 393 0028 9B03     	 lsls r3,r3,#14
 394 002a FA68     	 ldr r2,[r7,#12]
 395 002c 1343     	 orrs r3,r3,r2
 396 002e FB60     	 str r3,[r7,#12]
 320:../Libraries/XMCLib/src/xmc_ccu8.c ****   
 321:../Libraries/XMCLib/src/xmc_ccu8.c ****   module->GCTRL = gctrl;
 397              	 .loc 2 321 0
 398 0030 7B68     	 ldr r3,[r7,#4]
 399 0032 FA68     	 ldr r2,[r7,#12]
 400 0034 1A60     	 str r2,[r3]
 322:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 401              	 .loc 2 322 0
 402 0036 1037     	 adds r7,r7,#16
 403              	.LCFI41:
 404              	 .cfi_def_cfa_offset 8
 405 0038 BD46     	 mov sp,r7
 406              	.LCFI42:
 407              	 .cfi_def_cfa_register 13
 408              	 
 409 003a 80BD     	 pop {r7,pc}
 410              	 .cfi_endproc
 411              	.LFE235:
 413              	 .section .text.XMC_CCU8_SetModuleClock,"ax",%progbits
 414              	 .align 2
 415              	 .global XMC_CCU8_SetModuleClock
 416              	 .thumb
 417              	 .thumb_func
 419              	XMC_CCU8_SetModuleClock:
 420              	.LFB236:
 323:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 324:../Libraries/XMCLib/src/xmc_ccu8.c **** /* API to select CCU8 module clock */
 325:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SetModuleClock(XMC_CCU8_MODULE_t *const module, const XMC_CCU8_CLOCK_t clock)
 326:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 421              	 .loc 2 326 0
 422              	 .cfi_startproc
 423              	 
 424              	 
 425              	 
 426 0000 80B4     	 push {r7}
 427              	.LCFI43:
 428              	 .cfi_def_cfa_offset 4
 429              	 .cfi_offset 7,-4
 430 0002 85B0     	 sub sp,sp,#20
 431              	.LCFI44:
 432              	 .cfi_def_cfa_offset 24
 433 0004 00AF     	 add r7,sp,#0
 434              	.LCFI45:
 435              	 .cfi_def_cfa_register 7
 436 0006 7860     	 str r0,[r7,#4]
 437 0008 0B46     	 mov r3,r1
 438 000a FB70     	 strb r3,[r7,#3]
 327:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint32_t gctrl;
 328:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 329:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SetModuleClock:Invalid Module Pointer", XMC_CCU8_IsValidModule(module));
 330:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SetModuleClock:Invalid Module Clock", XMC_CCU8_SLICE_CHECK_CLOCK(clock));
 331:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 332:../Libraries/XMCLib/src/xmc_ccu8.c ****   gctrl = module->GCTRL;
 439              	 .loc 2 332 0
 440 000c 7B68     	 ldr r3,[r7,#4]
 441 000e 1B68     	 ldr r3,[r3]
 442 0010 FB60     	 str r3,[r7,#12]
 333:../Libraries/XMCLib/src/xmc_ccu8.c ****   gctrl &= ~((uint32_t) CCU8_GCTRL_PCIS_Msk);
 443              	 .loc 2 333 0
 444 0012 FB68     	 ldr r3,[r7,#12]
 445 0014 23F03003 	 bic r3,r3,#48
 446 0018 FB60     	 str r3,[r7,#12]
 334:../Libraries/XMCLib/src/xmc_ccu8.c ****   gctrl |= ((uint32_t) clock) << CCU8_GCTRL_PCIS_Pos;
 447              	 .loc 2 334 0
 448 001a FB78     	 ldrb r3,[r7,#3]
 449 001c 1B01     	 lsls r3,r3,#4
 450 001e FA68     	 ldr r2,[r7,#12]
 451 0020 1343     	 orrs r3,r3,r2
 452 0022 FB60     	 str r3,[r7,#12]
 335:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 336:../Libraries/XMCLib/src/xmc_ccu8.c ****   module->GCTRL = gctrl;
 453              	 .loc 2 336 0
 454 0024 7B68     	 ldr r3,[r7,#4]
 455 0026 FA68     	 ldr r2,[r7,#12]
 456 0028 1A60     	 str r2,[r3]
 337:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 457              	 .loc 2 337 0
 458 002a 1437     	 adds r7,r7,#20
 459              	.LCFI46:
 460              	 .cfi_def_cfa_offset 4
 461 002c BD46     	 mov sp,r7
 462              	.LCFI47:
 463              	 .cfi_def_cfa_register 13
 464              	 
 465 002e 5DF8047B 	 ldr r7,[sp],#4
 466              	.LCFI48:
 467              	 .cfi_restore 7
 468              	 .cfi_def_cfa_offset 0
 469 0032 7047     	 bx lr
 470              	 .cfi_endproc
 471              	.LFE236:
 473              	 .section .text.XMC_CCU8_SLICE_CompareInit,"ax",%progbits
 474              	 .align 2
 475              	 .global XMC_CCU8_SLICE_CompareInit
 476              	 .thumb
 477              	 .thumb_func
 479              	XMC_CCU8_SLICE_CompareInit:
 480              	.LFB237:
 338:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 339:../Libraries/XMCLib/src/xmc_ccu8.c **** /* API to configure CC8 Slice in Compare mode */
 340:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_CompareInit(XMC_CCU8_SLICE_t *const slice,
 341:../Libraries/XMCLib/src/xmc_ccu8.c ****                                 const XMC_CCU8_SLICE_COMPARE_CONFIG_t *const compare_init)
 342:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 481              	 .loc 2 342 0
 482              	 .cfi_startproc
 483              	 
 484              	 
 485 0000 80B5     	 push {r7,lr}
 486              	.LCFI49:
 487              	 .cfi_def_cfa_offset 8
 488              	 .cfi_offset 7,-8
 489              	 .cfi_offset 14,-4
 490 0002 82B0     	 sub sp,sp,#8
 491              	.LCFI50:
 492              	 .cfi_def_cfa_offset 16
 493 0004 00AF     	 add r7,sp,#0
 494              	.LCFI51:
 495              	 .cfi_def_cfa_register 7
 496 0006 7860     	 str r0,[r7,#4]
 497 0008 3960     	 str r1,[r7]
 343:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_CompareInit:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
 344:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_CompareInit:Timer Init Pointer is NULL",
 345:../Libraries/XMCLib/src/xmc_ccu8.c ****              (XMC_CCU8_SLICE_COMPARE_CONFIG_t *) NULL != compare_init);
 346:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Stops the timer */
 347:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_CCU8_SLICE_StopTimer(slice);
 498              	 .loc 2 347 0
 499 000a 7868     	 ldr r0,[r7,#4]
 500 000c FFF7FEFF 	 bl XMC_CCU8_SLICE_StopTimer
 348:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Program the timer mode */
 349:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->TC = compare_init->tc;
 501              	 .loc 2 349 0
 502 0010 3B68     	 ldr r3,[r7]
 503 0012 1A68     	 ldr r2,[r3]
 504 0014 7B68     	 ldr r3,[r7,#4]
 505 0016 5A61     	 str r2,[r3,#20]
 350:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Enable the timer concatenation */
 351:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->CMC =  (uint32_t)compare_init->timer_concatenation << CCU8_CC8_CMC_TCE_Pos;
 506              	 .loc 2 351 0
 507 0018 3B68     	 ldr r3,[r7]
 508 001a 5B7B     	 ldrb r3,[r3,#13]
 509 001c C3F30013 	 ubfx r3,r3,#4,#1
 510 0020 DBB2     	 uxtb r3,r3
 511 0022 1A05     	 lsls r2,r3,#20
 512 0024 7B68     	 ldr r3,[r7,#4]
 513 0026 5A60     	 str r2,[r3,#4]
 352:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Program initial prescaler divider value */
 353:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->PSC = (uint32_t) compare_init->prescaler_initval;
 514              	 .loc 2 353 0
 515 0028 3B68     	 ldr r3,[r7]
 516 002a 1B7B     	 ldrb r3,[r3,#12]
 517 002c C3F30303 	 ubfx r3,r3,#0,#4
 518 0030 DBB2     	 uxtb r3,r3
 519 0032 1A46     	 mov r2,r3
 520 0034 7B68     	 ldr r3,[r7,#4]
 521 0036 5A62     	 str r2,[r3,#36]
 354:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Program floating prescaler compare value */
 355:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->FPCS = (uint32_t) compare_init->float_limit;
 522              	 .loc 2 355 0
 523 0038 3B68     	 ldr r3,[r7]
 524 003a 1B7B     	 ldrb r3,[r3,#12]
 525 003c C3F30313 	 ubfx r3,r3,#4,#4
 526 0040 DBB2     	 uxtb r3,r3
 527 0042 1A46     	 mov r2,r3
 528 0044 7B68     	 ldr r3,[r7,#4]
 529 0046 DA62     	 str r2,[r3,#44]
 356:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Program the dither compare value */
 357:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->DITS = (uint32_t) compare_init->dither_limit;
 530              	 .loc 2 357 0
 531 0048 3B68     	 ldr r3,[r7]
 532 004a 5B7B     	 ldrb r3,[r3,#13]
 533 004c C3F30303 	 ubfx r3,r3,#0,#4
 534 0050 DBB2     	 uxtb r3,r3
 535 0052 1A46     	 mov r2,r3
 536 0054 7B68     	 ldr r3,[r7,#4]
 537 0056 1A62     	 str r2,[r3,#32]
 358:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Program timer output passive level */
 359:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->PSL = (uint32_t) compare_init->psl;
 538              	 .loc 2 359 0
 539 0058 3B68     	 ldr r3,[r7]
 540 005a 5A68     	 ldr r2,[r3,#4]
 541 005c 7B68     	 ldr r3,[r7,#4]
 542 005e 9A61     	 str r2,[r3,#24]
 360:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Asymmetric PWM and Slice output routing configuration */
 361:../Libraries/XMCLib/src/xmc_ccu8.c **** #if defined(CCU8V3) /* Defined for XMC1400 devices only */
 362:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->CHC = (uint32_t) compare_init->chc;
 363:../Libraries/XMCLib/src/xmc_ccu8.c **** #else
 364:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->CHC = (uint32_t)((uint32_t)compare_init->chc ^ XMC_CCU8_SLICE_CHC_CONFIG_MASK);
 543              	 .loc 2 364 0
 544 0060 3B68     	 ldr r3,[r7]
 545 0062 9B68     	 ldr r3,[r3,#8]
 546 0064 83F01402 	 eor r2,r3,#20
 547 0068 7B68     	 ldr r3,[r7,#4]
 548 006a 9A64     	 str r2,[r3,#72]
 365:../Libraries/XMCLib/src/xmc_ccu8.c **** #endif
 366:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 549              	 .loc 2 366 0
 550 006c 0837     	 adds r7,r7,#8
 551              	.LCFI52:
 552              	 .cfi_def_cfa_offset 8
 553 006e BD46     	 mov sp,r7
 554              	.LCFI53:
 555              	 .cfi_def_cfa_register 13
 556              	 
 557 0070 80BD     	 pop {r7,pc}
 558              	 .cfi_endproc
 559              	.LFE237:
 561 0072 00BF     	 .section .text.XMC_CCU8_SLICE_CaptureInit,"ax",%progbits
 562              	 .align 2
 563              	 .global XMC_CCU8_SLICE_CaptureInit
 564              	 .thumb
 565              	 .thumb_func
 567              	XMC_CCU8_SLICE_CaptureInit:
 568              	.LFB238:
 367:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 368:../Libraries/XMCLib/src/xmc_ccu8.c **** /* API to configure CC8 Slice in Capture mode */
 369:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_CaptureInit(XMC_CCU8_SLICE_t *const slice, 
 370:../Libraries/XMCLib/src/xmc_ccu8.c ****                                 const XMC_CCU8_SLICE_CAPTURE_CONFIG_t *const capture_init)
 371:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 569              	 .loc 2 371 0
 570              	 .cfi_startproc
 571              	 
 572              	 
 573 0000 80B5     	 push {r7,lr}
 574              	.LCFI54:
 575              	 .cfi_def_cfa_offset 8
 576              	 .cfi_offset 7,-8
 577              	 .cfi_offset 14,-4
 578 0002 82B0     	 sub sp,sp,#8
 579              	.LCFI55:
 580              	 .cfi_def_cfa_offset 16
 581 0004 00AF     	 add r7,sp,#0
 582              	.LCFI56:
 583              	 .cfi_def_cfa_register 7
 584 0006 7860     	 str r0,[r7,#4]
 585 0008 3960     	 str r1,[r7]
 372:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_CaptureInit:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
 373:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_CaptureInit:Capture Init Pointer is NULL", 
 374:../Libraries/XMCLib/src/xmc_ccu8.c ****              (XMC_CCU8_SLICE_CAPTURE_CONFIG_t *) NULL != capture_init);
 375:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Stops the timer */
 376:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_CCU8_SLICE_StopTimer(slice);
 586              	 .loc 2 376 0
 587 000a 7868     	 ldr r0,[r7,#4]
 588 000c FFF7FEFF 	 bl XMC_CCU8_SLICE_StopTimer
 377:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Capture mode configuration */
 378:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->TC = capture_init->tc;
 589              	 .loc 2 378 0
 590 0010 3B68     	 ldr r3,[r7]
 591 0012 1A68     	 ldr r2,[r3]
 592 0014 7B68     	 ldr r3,[r7,#4]
 593 0016 5A61     	 str r2,[r3,#20]
 379:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Enable the timer concatenation */
 380:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->CMC = (uint32_t)capture_init->timer_concatenation << CCU8_CC8_CMC_TCE_Pos;
 594              	 .loc 2 380 0
 595 0018 3B68     	 ldr r3,[r7]
 596 001a 5B79     	 ldrb r3,[r3,#5]
 597 001c C3F30003 	 ubfx r3,r3,#0,#1
 598 0020 DBB2     	 uxtb r3,r3
 599 0022 1A05     	 lsls r2,r3,#20
 600 0024 7B68     	 ldr r3,[r7,#4]
 601 0026 5A60     	 str r2,[r3,#4]
 381:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Program floating prescaler compare value */
 382:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->FPCS = (uint32_t) capture_init->float_limit;
 602              	 .loc 2 382 0
 603 0028 3B68     	 ldr r3,[r7]
 604 002a 1B79     	 ldrb r3,[r3,#4]
 605 002c C3F30313 	 ubfx r3,r3,#4,#4
 606 0030 DBB2     	 uxtb r3,r3
 607 0032 1A46     	 mov r2,r3
 608 0034 7B68     	 ldr r3,[r7,#4]
 609 0036 DA62     	 str r2,[r3,#44]
 383:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Program initial prescaler divider value */
 384:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->PSC = (uint32_t) capture_init->prescaler_initval;
 610              	 .loc 2 384 0
 611 0038 3B68     	 ldr r3,[r7]
 612 003a 1B79     	 ldrb r3,[r3,#4]
 613 003c C3F30303 	 ubfx r3,r3,#0,#4
 614 0040 DBB2     	 uxtb r3,r3
 615 0042 1A46     	 mov r2,r3
 616 0044 7B68     	 ldr r3,[r7,#4]
 617 0046 5A62     	 str r2,[r3,#36]
 385:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 618              	 .loc 2 385 0
 619 0048 0837     	 adds r7,r7,#8
 620              	.LCFI57:
 621              	 .cfi_def_cfa_offset 8
 622 004a BD46     	 mov sp,r7
 623              	.LCFI58:
 624              	 .cfi_def_cfa_register 13
 625              	 
 626 004c 80BD     	 pop {r7,pc}
 627              	 .cfi_endproc
 628              	.LFE238:
 630 004e 00BF     	 .section .text.XMC_CCU8_SLICE_SetOutPath,"ax",%progbits
 631              	 .align 2
 632              	 .global XMC_CCU8_SLICE_SetOutPath
 633              	 .thumb
 634              	 .thumb_func
 636              	XMC_CCU8_SLICE_SetOutPath:
 637              	.LFB239:
 386:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 387:../Libraries/XMCLib/src/xmc_ccu8.c **** /* API to configure the each output of the slice with either STx or inverted STx. */
 388:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_SetOutPath(XMC_CCU8_SLICE_t *const slice, const uint32_t out_path_msk)
 389:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 638              	 .loc 2 389 0
 639              	 .cfi_startproc
 640              	 
 641              	 
 642              	 
 643 0000 80B4     	 push {r7}
 644              	.LCFI59:
 645              	 .cfi_def_cfa_offset 4
 646              	 .cfi_offset 7,-4
 647 0002 85B0     	 sub sp,sp,#20
 648              	.LCFI60:
 649              	 .cfi_def_cfa_offset 24
 650 0004 00AF     	 add r7,sp,#0
 651              	.LCFI61:
 652              	 .cfi_def_cfa_register 7
 653 0006 7860     	 str r0,[r7,#4]
 654 0008 3960     	 str r1,[r7]
 390:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint32_t chc;
 391:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_SetOutPath:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
 392:../Libraries/XMCLib/src/xmc_ccu8.c ****   chc = slice->CHC;
 655              	 .loc 2 392 0
 656 000a 7B68     	 ldr r3,[r7,#4]
 657 000c 9B6C     	 ldr r3,[r3,#72]
 658 000e FB60     	 str r3,[r7,#12]
 393:../Libraries/XMCLib/src/xmc_ccu8.c **** #if !defined(CCU8V3) /* Defined for all devices except XMC1400 */
 394:../Libraries/XMCLib/src/xmc_ccu8.c ****   chc &= ~((uint32_t)out_path_msk >> 16U);
 659              	 .loc 2 394 0
 660 0010 3B68     	 ldr r3,[r7]
 661 0012 1B0C     	 lsrs r3,r3,#16
 662 0014 DB43     	 mvns r3,r3
 663 0016 FA68     	 ldr r2,[r7,#12]
 664 0018 1340     	 ands r3,r3,r2
 665 001a FB60     	 str r3,[r7,#12]
 395:../Libraries/XMCLib/src/xmc_ccu8.c ****   chc |= ((uint32_t)out_path_msk & 0xFFFFU);
 666              	 .loc 2 395 0
 667 001c 3B68     	 ldr r3,[r7]
 668 001e 9BB2     	 uxth r3,r3
 669 0020 FA68     	 ldr r2,[r7,#12]
 670 0022 1343     	 orrs r3,r3,r2
 671 0024 FB60     	 str r3,[r7,#12]
 396:../Libraries/XMCLib/src/xmc_ccu8.c **** #else
 397:../Libraries/XMCLib/src/xmc_ccu8.c ****   chc &= ~((uint32_t)((uint32_t)(out_path_msk & 0xCCCC0U) >> 2U));
 398:../Libraries/XMCLib/src/xmc_ccu8.c ****   chc |= ((uint32_t)out_path_msk & 0x33330U);
 399:../Libraries/XMCLib/src/xmc_ccu8.c **** #endif
 400:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->CHC = chc;
 672              	 .loc 2 400 0
 673 0026 7B68     	 ldr r3,[r7,#4]
 674 0028 FA68     	 ldr r2,[r7,#12]
 675 002a 9A64     	 str r2,[r3,#72]
 401:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 676              	 .loc 2 401 0
 677 002c 1437     	 adds r7,r7,#20
 678              	.LCFI62:
 679              	 .cfi_def_cfa_offset 4
 680 002e BD46     	 mov sp,r7
 681              	.LCFI63:
 682              	 .cfi_def_cfa_register 13
 683              	 
 684 0030 5DF8047B 	 ldr r7,[sp],#4
 685              	.LCFI64:
 686              	 .cfi_restore 7
 687              	 .cfi_def_cfa_offset 0
 688 0034 7047     	 bx lr
 689              	 .cfi_endproc
 690              	.LFE239:
 692 0036 00BF     	 .section .text.XMC_CCU8_SetMultiChannelShadowTransferMode,"ax",%progbits
 693              	 .align 2
 694              	 .global XMC_CCU8_SetMultiChannelShadowTransferMode
 695              	 .thumb
 696              	 .thumb_func
 698              	XMC_CCU8_SetMultiChannelShadowTransferMode:
 699              	.LFB240:
 402:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 403:../Libraries/XMCLib/src/xmc_ccu8.c **** /* API to configure the multichannel shadow transfer request via SW and via the CCU8x.MCSS input. *
 404:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SetMultiChannelShadowTransferMode(XMC_CCU8_MODULE_t *const module, const uint32_t sli
 405:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 700              	 .loc 2 405 0
 701              	 .cfi_startproc
 702              	 
 703              	 
 704              	 
 705 0000 80B4     	 push {r7}
 706              	.LCFI65:
 707              	 .cfi_def_cfa_offset 4
 708              	 .cfi_offset 7,-4
 709 0002 85B0     	 sub sp,sp,#20
 710              	.LCFI66:
 711              	 .cfi_def_cfa_offset 24
 712 0004 00AF     	 add r7,sp,#0
 713              	.LCFI67:
 714              	 .cfi_def_cfa_register 7
 715 0006 7860     	 str r0,[r7,#4]
 716 0008 3960     	 str r1,[r7]
 406:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint32_t gctrl;
 407:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 408:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SetMultiChannelShadowTransferMode:Invalid module Pointer", XMC_CCU8_IsValidM
 409:../Libraries/XMCLib/src/xmc_ccu8.c ****   
 410:../Libraries/XMCLib/src/xmc_ccu8.c ****   gctrl = module->GCTRL;
 717              	 .loc 2 410 0
 718 000a 7B68     	 ldr r3,[r7,#4]
 719 000c 1B68     	 ldr r3,[r3]
 720 000e FB60     	 str r3,[r7,#12]
 411:../Libraries/XMCLib/src/xmc_ccu8.c ****   gctrl &= ~((uint32_t)slice_mode_msk >> 16U);
 721              	 .loc 2 411 0
 722 0010 3B68     	 ldr r3,[r7]
 723 0012 1B0C     	 lsrs r3,r3,#16
 724 0014 DB43     	 mvns r3,r3
 725 0016 FA68     	 ldr r2,[r7,#12]
 726 0018 1340     	 ands r3,r3,r2
 727 001a FB60     	 str r3,[r7,#12]
 412:../Libraries/XMCLib/src/xmc_ccu8.c ****   gctrl |= ((uint32_t)slice_mode_msk & 0xFFFFU);
 728              	 .loc 2 412 0
 729 001c 3B68     	 ldr r3,[r7]
 730 001e 9BB2     	 uxth r3,r3
 731 0020 FA68     	 ldr r2,[r7,#12]
 732 0022 1343     	 orrs r3,r3,r2
 733 0024 FB60     	 str r3,[r7,#12]
 413:../Libraries/XMCLib/src/xmc_ccu8.c ****   module->GCTRL = gctrl;
 734              	 .loc 2 413 0
 735 0026 7B68     	 ldr r3,[r7,#4]
 736 0028 FA68     	 ldr r2,[r7,#12]
 737 002a 1A60     	 str r2,[r3]
 414:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 738              	 .loc 2 414 0
 739 002c 1437     	 adds r7,r7,#20
 740              	.LCFI68:
 741              	 .cfi_def_cfa_offset 4
 742 002e BD46     	 mov sp,r7
 743              	.LCFI69:
 744              	 .cfi_def_cfa_register 13
 745              	 
 746 0030 5DF8047B 	 ldr r7,[sp],#4
 747              	.LCFI70:
 748              	 .cfi_restore 7
 749              	 .cfi_def_cfa_offset 0
 750 0034 7047     	 bx lr
 751              	 .cfi_endproc
 752              	.LFE240:
 754 0036 00BF     	 .section .text.XMC_CCU8_SLICE_StartConfig,"ax",%progbits
 755              	 .align 2
 756              	 .global XMC_CCU8_SLICE_StartConfig
 757              	 .thumb
 758              	 .thumb_func
 760              	XMC_CCU8_SLICE_StartConfig:
 761              	.LFB241:
 415:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 416:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 417:../Libraries/XMCLib/src/xmc_ccu8.c **** /* API to configure the Start trigger function of a slice*/
 418:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_StartConfig(XMC_CCU8_SLICE_t *const slice,
 419:../Libraries/XMCLib/src/xmc_ccu8.c ****                                 const XMC_CCU8_SLICE_EVENT_t event,
 420:../Libraries/XMCLib/src/xmc_ccu8.c ****                                 const XMC_CCU8_SLICE_START_MODE_t start_mode)
 421:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 762              	 .loc 2 421 0
 763              	 .cfi_startproc
 764              	 
 765              	 
 766              	 
 767 0000 80B4     	 push {r7}
 768              	.LCFI71:
 769              	 .cfi_def_cfa_offset 4
 770              	 .cfi_offset 7,-4
 771 0002 85B0     	 sub sp,sp,#20
 772              	.LCFI72:
 773              	 .cfi_def_cfa_offset 24
 774 0004 00AF     	 add r7,sp,#0
 775              	.LCFI73:
 776              	 .cfi_def_cfa_register 7
 777 0006 7860     	 str r0,[r7,#4]
 778 0008 0B46     	 mov r3,r1
 779 000a FB70     	 strb r3,[r7,#3]
 780 000c 1346     	 mov r3,r2
 781 000e BB70     	 strb r3,[r7,#2]
 422:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint32_t cmc;
 423:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint32_t tc;
 424:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 425:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_StartConfig:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
 426:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_StartConfig:Invalid Event ID", XMC_CCU8_SLICE_CHECK_EVENT_ID(event));
 427:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_StartConfig:Invalid Start Mode", 
 428:../Libraries/XMCLib/src/xmc_ccu8.c ****              ((start_mode == XMC_CCU8_SLICE_START_MODE_TIMER_START) ||\
 429:../Libraries/XMCLib/src/xmc_ccu8.c ****               (start_mode == XMC_CCU8_SLICE_START_MODE_TIMER_START_CLEAR)));
 430:../Libraries/XMCLib/src/xmc_ccu8.c ****   cmc = slice->CMC;
 782              	 .loc 2 430 0
 783 0010 7B68     	 ldr r3,[r7,#4]
 784 0012 5B68     	 ldr r3,[r3,#4]
 785 0014 BB60     	 str r3,[r7,#8]
 431:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 432:../Libraries/XMCLib/src/xmc_ccu8.c ****   cmc &= ~((uint32_t) CCU8_CC8_CMC_STRTS_Msk);
 786              	 .loc 2 432 0
 787 0016 BB68     	 ldr r3,[r7,#8]
 788 0018 23F00303 	 bic r3,r3,#3
 789 001c BB60     	 str r3,[r7,#8]
 433:../Libraries/XMCLib/src/xmc_ccu8.c ****   cmc |= ((uint32_t) event) << CCU8_CC8_CMC_STRTS_Pos;
 790              	 .loc 2 433 0
 791 001e FB78     	 ldrb r3,[r7,#3]
 792 0020 BA68     	 ldr r2,[r7,#8]
 793 0022 1343     	 orrs r3,r3,r2
 794 0024 BB60     	 str r3,[r7,#8]
 434:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 435:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->CMC = cmc;
 795              	 .loc 2 435 0
 796 0026 7B68     	 ldr r3,[r7,#4]
 797 0028 BA68     	 ldr r2,[r7,#8]
 798 002a 5A60     	 str r2,[r3,#4]
 436:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 437:../Libraries/XMCLib/src/xmc_ccu8.c ****   tc  = slice->TC;
 799              	 .loc 2 437 0
 800 002c 7B68     	 ldr r3,[r7,#4]
 801 002e 5B69     	 ldr r3,[r3,#20]
 802 0030 FB60     	 str r3,[r7,#12]
 438:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 439:../Libraries/XMCLib/src/xmc_ccu8.c ****   if(start_mode == XMC_CCU8_SLICE_START_MODE_TIMER_START_CLEAR)
 803              	 .loc 2 439 0
 804 0032 BB78     	 ldrb r3,[r7,#2]
 805 0034 012B     	 cmp r3,#1
 806 0036 04D1     	 bne .L23
 440:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
 441:../Libraries/XMCLib/src/xmc_ccu8.c ****     tc |= (uint32_t) CCU8_CC8_TC_STRM_Msk;
 807              	 .loc 2 441 0
 808 0038 FB68     	 ldr r3,[r7,#12]
 809 003a 43F48063 	 orr r3,r3,#1024
 810 003e FB60     	 str r3,[r7,#12]
 811 0040 03E0     	 b .L24
 812              	.L23:
 442:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
 443:../Libraries/XMCLib/src/xmc_ccu8.c ****   else
 444:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
 445:../Libraries/XMCLib/src/xmc_ccu8.c ****     tc &= ~((uint32_t) CCU8_CC8_TC_STRM_Msk);
 813              	 .loc 2 445 0
 814 0042 FB68     	 ldr r3,[r7,#12]
 815 0044 23F48063 	 bic r3,r3,#1024
 816 0048 FB60     	 str r3,[r7,#12]
 817              	.L24:
 446:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
 447:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 448:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->TC = tc;
 818              	 .loc 2 448 0
 819 004a 7B68     	 ldr r3,[r7,#4]
 820 004c FA68     	 ldr r2,[r7,#12]
 821 004e 5A61     	 str r2,[r3,#20]
 449:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 822              	 .loc 2 449 0
 823 0050 1437     	 adds r7,r7,#20
 824              	.LCFI74:
 825              	 .cfi_def_cfa_offset 4
 826 0052 BD46     	 mov sp,r7
 827              	.LCFI75:
 828              	 .cfi_def_cfa_register 13
 829              	 
 830 0054 5DF8047B 	 ldr r7,[sp],#4
 831              	.LCFI76:
 832              	 .cfi_restore 7
 833              	 .cfi_def_cfa_offset 0
 834 0058 7047     	 bx lr
 835              	 .cfi_endproc
 836              	.LFE241:
 838 005a 00BF     	 .section .text.XMC_CCU8_SLICE_StopConfig,"ax",%progbits
 839              	 .align 2
 840              	 .global XMC_CCU8_SLICE_StopConfig
 841              	 .thumb
 842              	 .thumb_func
 844              	XMC_CCU8_SLICE_StopConfig:
 845              	.LFB242:
 450:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 451:../Libraries/XMCLib/src/xmc_ccu8.c **** /* API to configure the Stop trigger function of a slice */
 452:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_StopConfig(XMC_CCU8_SLICE_t *const slice,
 453:../Libraries/XMCLib/src/xmc_ccu8.c ****                                const XMC_CCU8_SLICE_EVENT_t event,
 454:../Libraries/XMCLib/src/xmc_ccu8.c ****                                const XMC_CCU8_SLICE_END_MODE_t end_mode)
 455:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 846              	 .loc 2 455 0
 847              	 .cfi_startproc
 848              	 
 849              	 
 850              	 
 851 0000 80B4     	 push {r7}
 852              	.LCFI77:
 853              	 .cfi_def_cfa_offset 4
 854              	 .cfi_offset 7,-4
 855 0002 85B0     	 sub sp,sp,#20
 856              	.LCFI78:
 857              	 .cfi_def_cfa_offset 24
 858 0004 00AF     	 add r7,sp,#0
 859              	.LCFI79:
 860              	 .cfi_def_cfa_register 7
 861 0006 7860     	 str r0,[r7,#4]
 862 0008 0B46     	 mov r3,r1
 863 000a FB70     	 strb r3,[r7,#3]
 864 000c 1346     	 mov r3,r2
 865 000e BB70     	 strb r3,[r7,#2]
 456:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint32_t cmc;
 457:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint32_t tc;
 458:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 459:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_StopConfig:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
 460:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_StopConfig:Invalid Event ID", XMC_CCU8_SLICE_CHECK_EVENT_ID(event));
 461:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_StopConfig:Invalid End Mode", XMC_CCU8_SLICE_CHECK_END_MODE(end_mode))
 462:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 463:../Libraries/XMCLib/src/xmc_ccu8.c ****   cmc = slice->CMC;
 866              	 .loc 2 463 0
 867 0010 7B68     	 ldr r3,[r7,#4]
 868 0012 5B68     	 ldr r3,[r3,#4]
 869 0014 FB60     	 str r3,[r7,#12]
 464:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* First, Bind the event with the stop function */
 465:../Libraries/XMCLib/src/xmc_ccu8.c ****   cmc &= ~((uint32_t) CCU8_CC8_CMC_ENDS_Msk);
 870              	 .loc 2 465 0
 871 0016 FB68     	 ldr r3,[r7,#12]
 872 0018 23F00C03 	 bic r3,r3,#12
 873 001c FB60     	 str r3,[r7,#12]
 466:../Libraries/XMCLib/src/xmc_ccu8.c ****   cmc |= ((uint32_t) event) << CCU8_CC8_CMC_ENDS_Pos;
 874              	 .loc 2 466 0
 875 001e FB78     	 ldrb r3,[r7,#3]
 876 0020 9B00     	 lsls r3,r3,#2
 877 0022 FA68     	 ldr r2,[r7,#12]
 878 0024 1343     	 orrs r3,r3,r2
 879 0026 FB60     	 str r3,[r7,#12]
 467:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 468:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->CMC = cmc;
 880              	 .loc 2 468 0
 881 0028 7B68     	 ldr r3,[r7,#4]
 882 002a FA68     	 ldr r2,[r7,#12]
 883 002c 5A60     	 str r2,[r3,#4]
 469:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 470:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Configure the stop mode */
 471:../Libraries/XMCLib/src/xmc_ccu8.c ****   tc = slice->TC;
 884              	 .loc 2 471 0
 885 002e 7B68     	 ldr r3,[r7,#4]
 886 0030 5B69     	 ldr r3,[r3,#20]
 887 0032 BB60     	 str r3,[r7,#8]
 472:../Libraries/XMCLib/src/xmc_ccu8.c ****   tc &= ~((uint32_t) CCU8_CC8_TC_ENDM_Msk);
 888              	 .loc 2 472 0
 889 0034 BB68     	 ldr r3,[r7,#8]
 890 0036 23F44073 	 bic r3,r3,#768
 891 003a BB60     	 str r3,[r7,#8]
 473:../Libraries/XMCLib/src/xmc_ccu8.c ****   tc |= ((uint32_t) end_mode) << CCU8_CC8_TC_ENDM_Pos;
 892              	 .loc 2 473 0
 893 003c BB78     	 ldrb r3,[r7,#2]
 894 003e 1B02     	 lsls r3,r3,#8
 895 0040 BA68     	 ldr r2,[r7,#8]
 896 0042 1343     	 orrs r3,r3,r2
 897 0044 BB60     	 str r3,[r7,#8]
 474:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 475:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->TC = tc;
 898              	 .loc 2 475 0
 899 0046 7B68     	 ldr r3,[r7,#4]
 900 0048 BA68     	 ldr r2,[r7,#8]
 901 004a 5A61     	 str r2,[r3,#20]
 476:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 902              	 .loc 2 476 0
 903 004c 1437     	 adds r7,r7,#20
 904              	.LCFI80:
 905              	 .cfi_def_cfa_offset 4
 906 004e BD46     	 mov sp,r7
 907              	.LCFI81:
 908              	 .cfi_def_cfa_register 13
 909              	 
 910 0050 5DF8047B 	 ldr r7,[sp],#4
 911              	.LCFI82:
 912              	 .cfi_restore 7
 913              	 .cfi_def_cfa_offset 0
 914 0054 7047     	 bx lr
 915              	 .cfi_endproc
 916              	.LFE242:
 918 0056 00BF     	 .section .text.XMC_CCU8_SLICE_LoadConfig,"ax",%progbits
 919              	 .align 2
 920              	 .global XMC_CCU8_SLICE_LoadConfig
 921              	 .thumb
 922              	 .thumb_func
 924              	XMC_CCU8_SLICE_LoadConfig:
 925              	.LFB243:
 477:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 478:../Libraries/XMCLib/src/xmc_ccu8.c **** /* API to configure the Load trigger function of a slice*/
 479:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_LoadConfig(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_EVENT_t event)
 480:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 926              	 .loc 2 480 0
 927              	 .cfi_startproc
 928              	 
 929              	 
 930              	 
 931 0000 80B4     	 push {r7}
 932              	.LCFI83:
 933              	 .cfi_def_cfa_offset 4
 934              	 .cfi_offset 7,-4
 935 0002 85B0     	 sub sp,sp,#20
 936              	.LCFI84:
 937              	 .cfi_def_cfa_offset 24
 938 0004 00AF     	 add r7,sp,#0
 939              	.LCFI85:
 940              	 .cfi_def_cfa_register 7
 941 0006 7860     	 str r0,[r7,#4]
 942 0008 0B46     	 mov r3,r1
 943 000a FB70     	 strb r3,[r7,#3]
 481:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint32_t cmc;
 482:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 483:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_LoadConfig:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
 484:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_LoadConfig:Invalid Event ID", XMC_CCU8_SLICE_CHECK_EVENT_ID(event));
 485:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 486:../Libraries/XMCLib/src/xmc_ccu8.c ****   cmc = slice->CMC;
 944              	 .loc 2 486 0
 945 000c 7B68     	 ldr r3,[r7,#4]
 946 000e 5B68     	 ldr r3,[r3,#4]
 947 0010 FB60     	 str r3,[r7,#12]
 487:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 488:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* First, Bind the event with the load function */
 489:../Libraries/XMCLib/src/xmc_ccu8.c ****   cmc &= ~((uint32_t) CCU8_CC8_CMC_LDS_Msk);
 948              	 .loc 2 489 0
 949 0012 FB68     	 ldr r3,[r7,#12]
 950 0014 23F44053 	 bic r3,r3,#12288
 951 0018 FB60     	 str r3,[r7,#12]
 490:../Libraries/XMCLib/src/xmc_ccu8.c ****   cmc |= ((uint32_t) event) << CCU8_CC8_CMC_LDS_Pos;
 952              	 .loc 2 490 0
 953 001a FB78     	 ldrb r3,[r7,#3]
 954 001c 1B03     	 lsls r3,r3,#12
 955 001e FA68     	 ldr r2,[r7,#12]
 956 0020 1343     	 orrs r3,r3,r2
 957 0022 FB60     	 str r3,[r7,#12]
 491:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 492:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->CMC = cmc;
 958              	 .loc 2 492 0
 959 0024 7B68     	 ldr r3,[r7,#4]
 960 0026 FA68     	 ldr r2,[r7,#12]
 961 0028 5A60     	 str r2,[r3,#4]
 493:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 962              	 .loc 2 493 0
 963 002a 1437     	 adds r7,r7,#20
 964              	.LCFI86:
 965              	 .cfi_def_cfa_offset 4
 966 002c BD46     	 mov sp,r7
 967              	.LCFI87:
 968              	 .cfi_def_cfa_register 13
 969              	 
 970 002e 5DF8047B 	 ldr r7,[sp],#4
 971              	.LCFI88:
 972              	 .cfi_restore 7
 973              	 .cfi_def_cfa_offset 0
 974 0032 7047     	 bx lr
 975              	 .cfi_endproc
 976              	.LFE243:
 978              	 .section .text.XMC_CCU8_SLICE_LoadSelector,"ax",%progbits
 979              	 .align 2
 980              	 .global XMC_CCU8_SLICE_LoadSelector
 981              	 .thumb
 982              	 .thumb_func
 984              	XMC_CCU8_SLICE_LoadSelector:
 985              	.LFB244:
 494:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 495:../Libraries/XMCLib/src/xmc_ccu8.c **** /* API to configure, which compare register value has to be loaded during external load event */
 496:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_LoadSelector(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_COMPARE_CHANNE
 497:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 986              	 .loc 2 497 0
 987              	 .cfi_startproc
 988              	 
 989              	 
 990              	 
 991 0000 80B4     	 push {r7}
 992              	.LCFI89:
 993              	 .cfi_def_cfa_offset 4
 994              	 .cfi_offset 7,-4
 995 0002 85B0     	 sub sp,sp,#20
 996              	.LCFI90:
 997              	 .cfi_def_cfa_offset 24
 998 0004 00AF     	 add r7,sp,#0
 999              	.LCFI91:
 1000              	 .cfi_def_cfa_register 7
 1001 0006 7860     	 str r0,[r7,#4]
 1002 0008 0B46     	 mov r3,r1
 1003 000a FB70     	 strb r3,[r7,#3]
 498:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint32_t tc;
 499:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 500:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_LoadSelector:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
 501:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_LoadSelector:Invalid Channel number", XMC_CCU8_SLICE_CHECK_COMP_CHANNE
 502:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 503:../Libraries/XMCLib/src/xmc_ccu8.c ****   tc = slice->TC;
 1004              	 .loc 2 503 0
 1005 000c 7B68     	 ldr r3,[r7,#4]
 1006 000e 5B69     	 ldr r3,[r3,#20]
 1007 0010 FB60     	 str r3,[r7,#12]
 504:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 505:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* First, Bind the event with the load function */
 506:../Libraries/XMCLib/src/xmc_ccu8.c ****   tc &= ~((uint32_t) CCU8_CC8_TC_TLS_Msk);
 1008              	 .loc 2 506 0
 1009 0012 FB68     	 ldr r3,[r7,#12]
 1010 0014 23F08003 	 bic r3,r3,#128
 1011 0018 FB60     	 str r3,[r7,#12]
 507:../Libraries/XMCLib/src/xmc_ccu8.c ****   tc |= (uint32_t)ch_num << CCU8_CC8_TC_TLS_Pos;
 1012              	 .loc 2 507 0
 1013 001a FB78     	 ldrb r3,[r7,#3]
 1014 001c DB01     	 lsls r3,r3,#7
 1015 001e FA68     	 ldr r2,[r7,#12]
 1016 0020 1343     	 orrs r3,r3,r2
 1017 0022 FB60     	 str r3,[r7,#12]
 508:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 509:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->TC = tc;
 1018              	 .loc 2 509 0
 1019 0024 7B68     	 ldr r3,[r7,#4]
 1020 0026 FA68     	 ldr r2,[r7,#12]
 1021 0028 5A61     	 str r2,[r3,#20]
 510:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 1022              	 .loc 2 510 0
 1023 002a 1437     	 adds r7,r7,#20
 1024              	.LCFI92:
 1025              	 .cfi_def_cfa_offset 4
 1026 002c BD46     	 mov sp,r7
 1027              	.LCFI93:
 1028              	 .cfi_def_cfa_register 13
 1029              	 
 1030 002e 5DF8047B 	 ldr r7,[sp],#4
 1031              	.LCFI94:
 1032              	 .cfi_restore 7
 1033              	 .cfi_def_cfa_offset 0
 1034 0032 7047     	 bx lr
 1035              	 .cfi_endproc
 1036              	.LFE244:
 1038              	 .section .text.XMC_CCU8_SLICE_ModulationConfig,"ax",%progbits
 1039              	 .align 2
 1040              	 .global XMC_CCU8_SLICE_ModulationConfig
 1041              	 .thumb
 1042              	 .thumb_func
 1044              	XMC_CCU8_SLICE_ModulationConfig:
 1045              	.LFB245:
 511:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 512:../Libraries/XMCLib/src/xmc_ccu8.c **** /* API to configure the slice modulation function */
 513:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_ModulationConfig(XMC_CCU8_SLICE_t *const slice,
 514:../Libraries/XMCLib/src/xmc_ccu8.c ****                                      const XMC_CCU8_SLICE_EVENT_t event,
 515:../Libraries/XMCLib/src/xmc_ccu8.c ****                                      const XMC_CCU8_SLICE_MODULATION_MODE_t mod_mode,
 516:../Libraries/XMCLib/src/xmc_ccu8.c ****                                      const XMC_CCU8_SLICE_MODULATION_CHANNEL_t channel,
 517:../Libraries/XMCLib/src/xmc_ccu8.c ****                                      const bool synch_with_pwm)
 518:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 1046              	 .loc 2 518 0
 1047              	 .cfi_startproc
 1048              	 
 1049              	 
 1050              	 
 1051 0000 80B4     	 push {r7}
 1052              	.LCFI95:
 1053              	 .cfi_def_cfa_offset 4
 1054              	 .cfi_offset 7,-4
 1055 0002 85B0     	 sub sp,sp,#20
 1056              	.LCFI96:
 1057              	 .cfi_def_cfa_offset 24
 1058 0004 00AF     	 add r7,sp,#0
 1059              	.LCFI97:
 1060              	 .cfi_def_cfa_register 7
 1061 0006 7860     	 str r0,[r7,#4]
 1062 0008 0846     	 mov r0,r1
 1063 000a 1146     	 mov r1,r2
 1064 000c 1A46     	 mov r2,r3
 1065 000e 0346     	 mov r3,r0
 1066 0010 FB70     	 strb r3,[r7,#3]
 1067 0012 0B46     	 mov r3,r1
 1068 0014 BB70     	 strb r3,[r7,#2]
 1069 0016 1346     	 mov r3,r2
 1070 0018 7B70     	 strb r3,[r7,#1]
 519:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint32_t cmc;
 520:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint32_t tc;
 521:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 522:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_ModulationConfig:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice))
 523:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_ModulationConfig:Invalid Event ID", XMC_CCU8_SLICE_CHECK_EVENT_ID(even
 524:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_ModulationConfig:Invalid channel for modulation", 
 525:../Libraries/XMCLib/src/xmc_ccu8.c ****              XMC_CCU8_SLICE_CHECK_MODULATION_CHANNEL(channel));
 526:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_ModulationConfig:Invalid Modulation Mode", 
 527:../Libraries/XMCLib/src/xmc_ccu8.c ****              ((mod_mode == XMC_CCU8_SLICE_MODULATION_MODE_CLEAR_ST_OUT) ||\
 528:../Libraries/XMCLib/src/xmc_ccu8.c ****               (mod_mode == XMC_CCU8_SLICE_MODULATION_MODE_CLEAR_OUT)));
 529:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 530:../Libraries/XMCLib/src/xmc_ccu8.c ****   cmc = slice->CMC;
 1071              	 .loc 2 530 0
 1072 001a 7B68     	 ldr r3,[r7,#4]
 1073 001c 5B68     	 ldr r3,[r3,#4]
 1074 001e BB60     	 str r3,[r7,#8]
 531:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 532:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* First, Bind the event with the modulation function */
 533:../Libraries/XMCLib/src/xmc_ccu8.c ****   cmc &= ~((uint32_t) CCU8_CC8_CMC_MOS_Msk);
 1075              	 .loc 2 533 0
 1076 0020 BB68     	 ldr r3,[r7,#8]
 1077 0022 23F44023 	 bic r3,r3,#786432
 1078 0026 BB60     	 str r3,[r7,#8]
 534:../Libraries/XMCLib/src/xmc_ccu8.c ****   cmc |= ((uint32_t) event) << CCU8_CC8_CMC_MOS_Pos;
 1079              	 .loc 2 534 0
 1080 0028 FB78     	 ldrb r3,[r7,#3]
 1081 002a 9B04     	 lsls r3,r3,#18
 1082 002c BA68     	 ldr r2,[r7,#8]
 1083 002e 1343     	 orrs r3,r3,r2
 1084 0030 BB60     	 str r3,[r7,#8]
 535:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 536:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->CMC = cmc;
 1085              	 .loc 2 536 0
 1086 0032 7B68     	 ldr r3,[r7,#4]
 1087 0034 BA68     	 ldr r2,[r7,#8]
 1088 0036 5A60     	 str r2,[r3,#4]
 537:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 538:../Libraries/XMCLib/src/xmc_ccu8.c ****   tc  = slice->TC;
 1089              	 .loc 2 538 0
 1090 0038 7B68     	 ldr r3,[r7,#4]
 1091 003a 5B69     	 ldr r3,[r3,#20]
 1092 003c FB60     	 str r3,[r7,#12]
 539:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 540:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Next, Modulation mode */
 541:../Libraries/XMCLib/src/xmc_ccu8.c ****   if(mod_mode == XMC_CCU8_SLICE_MODULATION_MODE_CLEAR_OUT)
 1093              	 .loc 2 541 0
 1094 003e BB78     	 ldrb r3,[r7,#2]
 1095 0040 012B     	 cmp r3,#1
 1096 0042 04D1     	 bne .L29
 542:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
 543:../Libraries/XMCLib/src/xmc_ccu8.c ****     tc |= (uint32_t) CCU8_CC8_TC_EMT_Msk;
 1097              	 .loc 2 543 0
 1098 0044 FB68     	 ldr r3,[r7,#12]
 1099 0046 43F08073 	 orr r3,r3,#16777216
 1100 004a FB60     	 str r3,[r7,#12]
 1101 004c 03E0     	 b .L30
 1102              	.L29:
 544:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
 545:../Libraries/XMCLib/src/xmc_ccu8.c ****   else
 546:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
 547:../Libraries/XMCLib/src/xmc_ccu8.c ****     tc &= ~((uint32_t) CCU8_CC8_TC_EMT_Msk);
 1103              	 .loc 2 547 0
 1104 004e FB68     	 ldr r3,[r7,#12]
 1105 0050 23F08073 	 bic r3,r3,#16777216
 1106 0054 FB60     	 str r3,[r7,#12]
 1107              	.L30:
 548:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
 549:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 550:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Synchronization of modulation effect with PWM cycle */
 551:../Libraries/XMCLib/src/xmc_ccu8.c ****   if(synch_with_pwm == true)
 1108              	 .loc 2 551 0
 1109 0056 3B7E     	 ldrb r3,[r7,#24]
 1110 0058 002B     	 cmp r3,#0
 1111 005a 04D0     	 beq .L31
 552:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
 553:../Libraries/XMCLib/src/xmc_ccu8.c ****     tc |= (uint32_t) CCU8_CC8_TC_EMS_Msk;
 1112              	 .loc 2 553 0
 1113 005c FB68     	 ldr r3,[r7,#12]
 1114 005e 43F40003 	 orr r3,r3,#8388608
 1115 0062 FB60     	 str r3,[r7,#12]
 1116 0064 03E0     	 b .L32
 1117              	.L31:
 554:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
 555:../Libraries/XMCLib/src/xmc_ccu8.c ****   else
 556:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
 557:../Libraries/XMCLib/src/xmc_ccu8.c ****     tc &= ~((uint32_t) CCU8_CC8_TC_EMS_Msk);
 1118              	 .loc 2 557 0
 1119 0066 FB68     	 ldr r3,[r7,#12]
 1120 0068 23F40003 	 bic r3,r3,#8388608
 1121 006c FB60     	 str r3,[r7,#12]
 1122              	.L32:
 558:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
 559:../Libraries/XMCLib/src/xmc_ccu8.c ****   
 560:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Configure on which channel external modulation to be applied */
 561:../Libraries/XMCLib/src/xmc_ccu8.c ****   tc &= ~((uint32_t) CCU8_CC8_TC_EME_Msk);
 1123              	 .loc 2 561 0
 1124 006e FB68     	 ldr r3,[r7,#12]
 1125 0070 23F0C053 	 bic r3,r3,#402653184
 1126 0074 FB60     	 str r3,[r7,#12]
 562:../Libraries/XMCLib/src/xmc_ccu8.c ****   tc |= (uint32_t)channel << CCU8_CC8_TC_EME_Pos;
 1127              	 .loc 2 562 0
 1128 0076 7B78     	 ldrb r3,[r7,#1]
 1129 0078 DB06     	 lsls r3,r3,#27
 1130 007a FA68     	 ldr r2,[r7,#12]
 1131 007c 1343     	 orrs r3,r3,r2
 1132 007e FB60     	 str r3,[r7,#12]
 563:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 564:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->TC = tc;
 1133              	 .loc 2 564 0
 1134 0080 7B68     	 ldr r3,[r7,#4]
 1135 0082 FA68     	 ldr r2,[r7,#12]
 1136 0084 5A61     	 str r2,[r3,#20]
 565:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 1137              	 .loc 2 565 0
 1138 0086 1437     	 adds r7,r7,#20
 1139              	.LCFI98:
 1140              	 .cfi_def_cfa_offset 4
 1141 0088 BD46     	 mov sp,r7
 1142              	.LCFI99:
 1143              	 .cfi_def_cfa_register 13
 1144              	 
 1145 008a 5DF8047B 	 ldr r7,[sp],#4
 1146              	.LCFI100:
 1147              	 .cfi_restore 7
 1148              	 .cfi_def_cfa_offset 0
 1149 008e 7047     	 bx lr
 1150              	 .cfi_endproc
 1151              	.LFE245:
 1153              	 .section .text.XMC_CCU8_SLICE_CountConfig,"ax",%progbits
 1154              	 .align 2
 1155              	 .global XMC_CCU8_SLICE_CountConfig
 1156              	 .thumb
 1157              	 .thumb_func
 1159              	XMC_CCU8_SLICE_CountConfig:
 1160              	.LFB246:
 566:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 567:../Libraries/XMCLib/src/xmc_ccu8.c **** /* API to configure the slice count function */
 568:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_CountConfig(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_EVENT_t event)
 569:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 1161              	 .loc 2 569 0
 1162              	 .cfi_startproc
 1163              	 
 1164              	 
 1165              	 
 1166 0000 80B4     	 push {r7}
 1167              	.LCFI101:
 1168              	 .cfi_def_cfa_offset 4
 1169              	 .cfi_offset 7,-4
 1170 0002 85B0     	 sub sp,sp,#20
 1171              	.LCFI102:
 1172              	 .cfi_def_cfa_offset 24
 1173 0004 00AF     	 add r7,sp,#0
 1174              	.LCFI103:
 1175              	 .cfi_def_cfa_register 7
 1176 0006 7860     	 str r0,[r7,#4]
 1177 0008 0B46     	 mov r3,r1
 1178 000a FB70     	 strb r3,[r7,#3]
 570:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint32_t cmc;
 571:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 572:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_CountConfig:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
 573:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_CountConfig:Invalid Event ID", XMC_CCU8_SLICE_CHECK_EVENT_ID(event));
 574:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 575:../Libraries/XMCLib/src/xmc_ccu8.c ****   cmc = slice->CMC;
 1179              	 .loc 2 575 0
 1180 000c 7B68     	 ldr r3,[r7,#4]
 1181 000e 5B68     	 ldr r3,[r3,#4]
 1182 0010 FB60     	 str r3,[r7,#12]
 576:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 577:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* First, Bind the event with the count function */
 578:../Libraries/XMCLib/src/xmc_ccu8.c ****   cmc &= ~((uint32_t) CCU8_CC8_CMC_CNTS_Msk);
 1183              	 .loc 2 578 0
 1184 0012 FB68     	 ldr r3,[r7,#12]
 1185 0014 23F44043 	 bic r3,r3,#49152
 1186 0018 FB60     	 str r3,[r7,#12]
 579:../Libraries/XMCLib/src/xmc_ccu8.c ****   cmc |= ((uint32_t) event) << CCU8_CC8_CMC_CNTS_Pos;
 1187              	 .loc 2 579 0
 1188 001a FB78     	 ldrb r3,[r7,#3]
 1189 001c 9B03     	 lsls r3,r3,#14
 1190 001e FA68     	 ldr r2,[r7,#12]
 1191 0020 1343     	 orrs r3,r3,r2
 1192 0022 FB60     	 str r3,[r7,#12]
 580:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 581:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->CMC = cmc;
 1193              	 .loc 2 581 0
 1194 0024 7B68     	 ldr r3,[r7,#4]
 1195 0026 FA68     	 ldr r2,[r7,#12]
 1196 0028 5A60     	 str r2,[r3,#4]
 582:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 1197              	 .loc 2 582 0
 1198 002a 1437     	 adds r7,r7,#20
 1199              	.LCFI104:
 1200              	 .cfi_def_cfa_offset 4
 1201 002c BD46     	 mov sp,r7
 1202              	.LCFI105:
 1203              	 .cfi_def_cfa_register 13
 1204              	 
 1205 002e 5DF8047B 	 ldr r7,[sp],#4
 1206              	.LCFI106:
 1207              	 .cfi_restore 7
 1208              	 .cfi_def_cfa_offset 0
 1209 0032 7047     	 bx lr
 1210              	 .cfi_endproc
 1211              	.LFE246:
 1213              	 .section .text.XMC_CCU8_SLICE_GateConfig,"ax",%progbits
 1214              	 .align 2
 1215              	 .global XMC_CCU8_SLICE_GateConfig
 1216              	 .thumb
 1217              	 .thumb_func
 1219              	XMC_CCU8_SLICE_GateConfig:
 1220              	.LFB247:
 583:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 584:../Libraries/XMCLib/src/xmc_ccu8.c **** /* API to configure slice gate function */
 585:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_GateConfig(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_EVENT_t event)
 586:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 1221              	 .loc 2 586 0
 1222              	 .cfi_startproc
 1223              	 
 1224              	 
 1225              	 
 1226 0000 80B4     	 push {r7}
 1227              	.LCFI107:
 1228              	 .cfi_def_cfa_offset 4
 1229              	 .cfi_offset 7,-4
 1230 0002 85B0     	 sub sp,sp,#20
 1231              	.LCFI108:
 1232              	 .cfi_def_cfa_offset 24
 1233 0004 00AF     	 add r7,sp,#0
 1234              	.LCFI109:
 1235              	 .cfi_def_cfa_register 7
 1236 0006 7860     	 str r0,[r7,#4]
 1237 0008 0B46     	 mov r3,r1
 1238 000a FB70     	 strb r3,[r7,#3]
 587:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint32_t cmc;
 588:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 589:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_GateConfig:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
 590:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_GateConfig:Invalid Event ID", XMC_CCU8_SLICE_CHECK_EVENT_ID(event));
 591:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 592:../Libraries/XMCLib/src/xmc_ccu8.c ****   cmc = slice->CMC;
 1239              	 .loc 2 592 0
 1240 000c 7B68     	 ldr r3,[r7,#4]
 1241 000e 5B68     	 ldr r3,[r3,#4]
 1242 0010 FB60     	 str r3,[r7,#12]
 593:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 594:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* First, Bind the event with the gate function */
 595:../Libraries/XMCLib/src/xmc_ccu8.c ****   cmc &= ~((uint32_t) CCU8_CC8_CMC_GATES_Msk);
 1243              	 .loc 2 595 0
 1244 0012 FB68     	 ldr r3,[r7,#12]
 1245 0014 23F44073 	 bic r3,r3,#768
 1246 0018 FB60     	 str r3,[r7,#12]
 596:../Libraries/XMCLib/src/xmc_ccu8.c ****   cmc |= ((uint32_t) event) << CCU8_CC8_CMC_GATES_Pos;
 1247              	 .loc 2 596 0
 1248 001a FB78     	 ldrb r3,[r7,#3]
 1249 001c 1B02     	 lsls r3,r3,#8
 1250 001e FA68     	 ldr r2,[r7,#12]
 1251 0020 1343     	 orrs r3,r3,r2
 1252 0022 FB60     	 str r3,[r7,#12]
 597:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 598:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->CMC = cmc;
 1253              	 .loc 2 598 0
 1254 0024 7B68     	 ldr r3,[r7,#4]
 1255 0026 FA68     	 ldr r2,[r7,#12]
 1256 0028 5A60     	 str r2,[r3,#4]
 599:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 1257              	 .loc 2 599 0
 1258 002a 1437     	 adds r7,r7,#20
 1259              	.LCFI110:
 1260              	 .cfi_def_cfa_offset 4
 1261 002c BD46     	 mov sp,r7
 1262              	.LCFI111:
 1263              	 .cfi_def_cfa_register 13
 1264              	 
 1265 002e 5DF8047B 	 ldr r7,[sp],#4
 1266              	.LCFI112:
 1267              	 .cfi_restore 7
 1268              	 .cfi_def_cfa_offset 0
 1269 0032 7047     	 bx lr
 1270              	 .cfi_endproc
 1271              	.LFE247:
 1273              	 .section .text.XMC_CCU8_SLICE_Capture0Config,"ax",%progbits
 1274              	 .align 2
 1275              	 .global XMC_CCU8_SLICE_Capture0Config
 1276              	 .thumb
 1277              	 .thumb_func
 1279              	XMC_CCU8_SLICE_Capture0Config:
 1280              	.LFB248:
 600:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 601:../Libraries/XMCLib/src/xmc_ccu8.c **** /* API to configure Capture-0 function */
 602:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_Capture0Config(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_EVENT_t even
 603:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 1281              	 .loc 2 603 0
 1282              	 .cfi_startproc
 1283              	 
 1284              	 
 1285              	 
 1286 0000 80B4     	 push {r7}
 1287              	.LCFI113:
 1288              	 .cfi_def_cfa_offset 4
 1289              	 .cfi_offset 7,-4
 1290 0002 85B0     	 sub sp,sp,#20
 1291              	.LCFI114:
 1292              	 .cfi_def_cfa_offset 24
 1293 0004 00AF     	 add r7,sp,#0
 1294              	.LCFI115:
 1295              	 .cfi_def_cfa_register 7
 1296 0006 7860     	 str r0,[r7,#4]
 1297 0008 0B46     	 mov r3,r1
 1298 000a FB70     	 strb r3,[r7,#3]
 604:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint32_t cmc;
 605:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 606:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_Capture0Config:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
 607:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_Capture0Config:Invalid Event ID", XMC_CCU8_SLICE_CHECK_EVENT_ID(event)
 608:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 609:../Libraries/XMCLib/src/xmc_ccu8.c ****   cmc = slice->CMC;
 1299              	 .loc 2 609 0
 1300 000c 7B68     	 ldr r3,[r7,#4]
 1301 000e 5B68     	 ldr r3,[r3,#4]
 1302 0010 FB60     	 str r3,[r7,#12]
 610:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 611:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* First, Bind the event with the gate function */
 612:../Libraries/XMCLib/src/xmc_ccu8.c ****   cmc &= ~((uint32_t) CCU8_CC8_CMC_CAP0S_Msk);
 1303              	 .loc 2 612 0
 1304 0012 FB68     	 ldr r3,[r7,#12]
 1305 0014 23F03003 	 bic r3,r3,#48
 1306 0018 FB60     	 str r3,[r7,#12]
 613:../Libraries/XMCLib/src/xmc_ccu8.c ****   cmc |= ((uint32_t) event) << CCU8_CC8_CMC_CAP0S_Pos;
 1307              	 .loc 2 613 0
 1308 001a FB78     	 ldrb r3,[r7,#3]
 1309 001c 1B01     	 lsls r3,r3,#4
 1310 001e FA68     	 ldr r2,[r7,#12]
 1311 0020 1343     	 orrs r3,r3,r2
 1312 0022 FB60     	 str r3,[r7,#12]
 614:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 615:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->CMC = cmc;
 1313              	 .loc 2 615 0
 1314 0024 7B68     	 ldr r3,[r7,#4]
 1315 0026 FA68     	 ldr r2,[r7,#12]
 1316 0028 5A60     	 str r2,[r3,#4]
 616:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 1317              	 .loc 2 616 0
 1318 002a 1437     	 adds r7,r7,#20
 1319              	.LCFI116:
 1320              	 .cfi_def_cfa_offset 4
 1321 002c BD46     	 mov sp,r7
 1322              	.LCFI117:
 1323              	 .cfi_def_cfa_register 13
 1324              	 
 1325 002e 5DF8047B 	 ldr r7,[sp],#4
 1326              	.LCFI118:
 1327              	 .cfi_restore 7
 1328              	 .cfi_def_cfa_offset 0
 1329 0032 7047     	 bx lr
 1330              	 .cfi_endproc
 1331              	.LFE248:
 1333              	 .section .text.XMC_CCU8_SLICE_Capture1Config,"ax",%progbits
 1334              	 .align 2
 1335              	 .global XMC_CCU8_SLICE_Capture1Config
 1336              	 .thumb
 1337              	 .thumb_func
 1339              	XMC_CCU8_SLICE_Capture1Config:
 1340              	.LFB249:
 617:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 618:../Libraries/XMCLib/src/xmc_ccu8.c **** /* API to configure Capture-1 function */
 619:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_Capture1Config(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_EVENT_t even
 620:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 1341              	 .loc 2 620 0
 1342              	 .cfi_startproc
 1343              	 
 1344              	 
 1345              	 
 1346 0000 80B4     	 push {r7}
 1347              	.LCFI119:
 1348              	 .cfi_def_cfa_offset 4
 1349              	 .cfi_offset 7,-4
 1350 0002 85B0     	 sub sp,sp,#20
 1351              	.LCFI120:
 1352              	 .cfi_def_cfa_offset 24
 1353 0004 00AF     	 add r7,sp,#0
 1354              	.LCFI121:
 1355              	 .cfi_def_cfa_register 7
 1356 0006 7860     	 str r0,[r7,#4]
 1357 0008 0B46     	 mov r3,r1
 1358 000a FB70     	 strb r3,[r7,#3]
 621:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint32_t cmc;
 622:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 623:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_Capture1Config:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
 624:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_Capture1Config:Invalid Event ID", XMC_CCU8_SLICE_CHECK_EVENT_ID(event)
 625:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 626:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 627:../Libraries/XMCLib/src/xmc_ccu8.c ****   cmc = slice->CMC;
 1359              	 .loc 2 627 0
 1360 000c 7B68     	 ldr r3,[r7,#4]
 1361 000e 5B68     	 ldr r3,[r3,#4]
 1362 0010 FB60     	 str r3,[r7,#12]
 628:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 629:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* First, Bind the event with the gate function */
 630:../Libraries/XMCLib/src/xmc_ccu8.c ****   cmc &= ~((uint32_t) CCU8_CC8_CMC_CAP1S_Msk);
 1363              	 .loc 2 630 0
 1364 0012 FB68     	 ldr r3,[r7,#12]
 1365 0014 23F0C003 	 bic r3,r3,#192
 1366 0018 FB60     	 str r3,[r7,#12]
 631:../Libraries/XMCLib/src/xmc_ccu8.c ****   cmc |= ((uint32_t) event) << CCU8_CC8_CMC_CAP1S_Pos;
 1367              	 .loc 2 631 0
 1368 001a FB78     	 ldrb r3,[r7,#3]
 1369 001c 9B01     	 lsls r3,r3,#6
 1370 001e FA68     	 ldr r2,[r7,#12]
 1371 0020 1343     	 orrs r3,r3,r2
 1372 0022 FB60     	 str r3,[r7,#12]
 632:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 633:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->CMC = cmc;
 1373              	 .loc 2 633 0
 1374 0024 7B68     	 ldr r3,[r7,#4]
 1375 0026 FA68     	 ldr r2,[r7,#12]
 1376 0028 5A60     	 str r2,[r3,#4]
 634:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 1377              	 .loc 2 634 0
 1378 002a 1437     	 adds r7,r7,#20
 1379              	.LCFI122:
 1380              	 .cfi_def_cfa_offset 4
 1381 002c BD46     	 mov sp,r7
 1382              	.LCFI123:
 1383              	 .cfi_def_cfa_register 13
 1384              	 
 1385 002e 5DF8047B 	 ldr r7,[sp],#4
 1386              	.LCFI124:
 1387              	 .cfi_restore 7
 1388              	 .cfi_def_cfa_offset 0
 1389 0032 7047     	 bx lr
 1390              	 .cfi_endproc
 1391              	.LFE249:
 1393              	 .section .text.XMC_CCU8_SLICE_DirectionConfig,"ax",%progbits
 1394              	 .align 2
 1395              	 .global XMC_CCU8_SLICE_DirectionConfig
 1396              	 .thumb
 1397              	 .thumb_func
 1399              	XMC_CCU8_SLICE_DirectionConfig:
 1400              	.LFB250:
 635:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 636:../Libraries/XMCLib/src/xmc_ccu8.c **** /* API to configure direction function */
 637:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_DirectionConfig(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_EVENT_t eve
 638:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 1401              	 .loc 2 638 0
 1402              	 .cfi_startproc
 1403              	 
 1404              	 
 1405              	 
 1406 0000 80B4     	 push {r7}
 1407              	.LCFI125:
 1408              	 .cfi_def_cfa_offset 4
 1409              	 .cfi_offset 7,-4
 1410 0002 85B0     	 sub sp,sp,#20
 1411              	.LCFI126:
 1412              	 .cfi_def_cfa_offset 24
 1413 0004 00AF     	 add r7,sp,#0
 1414              	.LCFI127:
 1415              	 .cfi_def_cfa_register 7
 1416 0006 7860     	 str r0,[r7,#4]
 1417 0008 0B46     	 mov r3,r1
 1418 000a FB70     	 strb r3,[r7,#3]
 639:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint32_t cmc;
 640:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 641:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_DirectionConfig:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
 642:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_DirectionConfig:Invalid Event ID", XMC_CCU8_SLICE_CHECK_EVENT_ID(event
 643:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 644:../Libraries/XMCLib/src/xmc_ccu8.c ****   cmc = slice->CMC;
 1419              	 .loc 2 644 0
 1420 000c 7B68     	 ldr r3,[r7,#4]
 1421 000e 5B68     	 ldr r3,[r3,#4]
 1422 0010 FB60     	 str r3,[r7,#12]
 645:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 646:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* First, Bind the event with the direction function */
 647:../Libraries/XMCLib/src/xmc_ccu8.c ****   cmc &= ~((uint32_t) CCU8_CC8_CMC_UDS_Msk);
 1423              	 .loc 2 647 0
 1424 0012 FB68     	 ldr r3,[r7,#12]
 1425 0014 23F44063 	 bic r3,r3,#3072
 1426 0018 FB60     	 str r3,[r7,#12]
 648:../Libraries/XMCLib/src/xmc_ccu8.c ****   cmc |= ((uint32_t) event) << CCU8_CC8_CMC_UDS_Pos;
 1427              	 .loc 2 648 0
 1428 001a FB78     	 ldrb r3,[r7,#3]
 1429 001c 9B02     	 lsls r3,r3,#10
 1430 001e FA68     	 ldr r2,[r7,#12]
 1431 0020 1343     	 orrs r3,r3,r2
 1432 0022 FB60     	 str r3,[r7,#12]
 649:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 650:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->CMC = cmc;
 1433              	 .loc 2 650 0
 1434 0024 7B68     	 ldr r3,[r7,#4]
 1435 0026 FA68     	 ldr r2,[r7,#12]
 1436 0028 5A60     	 str r2,[r3,#4]
 651:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 1437              	 .loc 2 651 0
 1438 002a 1437     	 adds r7,r7,#20
 1439              	.LCFI128:
 1440              	 .cfi_def_cfa_offset 4
 1441 002c BD46     	 mov sp,r7
 1442              	.LCFI129:
 1443              	 .cfi_def_cfa_register 13
 1444              	 
 1445 002e 5DF8047B 	 ldr r7,[sp],#4
 1446              	.LCFI130:
 1447              	 .cfi_restore 7
 1448              	 .cfi_def_cfa_offset 0
 1449 0032 7047     	 bx lr
 1450              	 .cfi_endproc
 1451              	.LFE250:
 1453              	 .section .text.XMC_CCU8_SLICE_StatusBitOverrideConfig,"ax",%progbits
 1454              	 .align 2
 1455              	 .global XMC_CCU8_SLICE_StatusBitOverrideConfig
 1456              	 .thumb
 1457              	 .thumb_func
 1459              	XMC_CCU8_SLICE_StatusBitOverrideConfig:
 1460              	.LFB251:
 652:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 653:../Libraries/XMCLib/src/xmc_ccu8.c **** /* API to configure slice status bit override function */
 654:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_StatusBitOverrideConfig(XMC_CCU8_SLICE_t *const slice)
 655:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 1461              	 .loc 2 655 0
 1462              	 .cfi_startproc
 1463              	 
 1464              	 
 1465              	 
 1466 0000 80B4     	 push {r7}
 1467              	.LCFI131:
 1468              	 .cfi_def_cfa_offset 4
 1469              	 .cfi_offset 7,-4
 1470 0002 85B0     	 sub sp,sp,#20
 1471              	.LCFI132:
 1472              	 .cfi_def_cfa_offset 24
 1473 0004 00AF     	 add r7,sp,#0
 1474              	.LCFI133:
 1475              	 .cfi_def_cfa_register 7
 1476 0006 7860     	 str r0,[r7,#4]
 656:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint32_t cmc;
 657:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 658:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_StatusBitOverrideConfig:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(
 659:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 660:../Libraries/XMCLib/src/xmc_ccu8.c ****   cmc = slice->CMC;
 1477              	 .loc 2 660 0
 1478 0008 7B68     	 ldr r3,[r7,#4]
 1479 000a 5B68     	 ldr r3,[r3,#4]
 1480 000c FB60     	 str r3,[r7,#12]
 661:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 662:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Map status bit trigger override to Event 1 &
 663:../Libraries/XMCLib/src/xmc_ccu8.c ****          status bit value override to Event 2 */
 664:../Libraries/XMCLib/src/xmc_ccu8.c ****   cmc &= ~((uint32_t) CCU8_CC8_CMC_OFS_Msk);
 1481              	 .loc 2 664 0
 1482 000e FB68     	 ldr r3,[r7,#12]
 1483 0010 23F48033 	 bic r3,r3,#65536
 1484 0014 FB60     	 str r3,[r7,#12]
 665:../Libraries/XMCLib/src/xmc_ccu8.c ****   cmc |= ((uint32_t) 1) << CCU8_CC8_CMC_OFS_Pos;
 1485              	 .loc 2 665 0
 1486 0016 FB68     	 ldr r3,[r7,#12]
 1487 0018 43F48033 	 orr r3,r3,#65536
 1488 001c FB60     	 str r3,[r7,#12]
 666:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 667:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->CMC = cmc;
 1489              	 .loc 2 667 0
 1490 001e 7B68     	 ldr r3,[r7,#4]
 1491 0020 FA68     	 ldr r2,[r7,#12]
 1492 0022 5A60     	 str r2,[r3,#4]
 668:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 1493              	 .loc 2 668 0
 1494 0024 1437     	 adds r7,r7,#20
 1495              	.LCFI134:
 1496              	 .cfi_def_cfa_offset 4
 1497 0026 BD46     	 mov sp,r7
 1498              	.LCFI135:
 1499              	 .cfi_def_cfa_register 13
 1500              	 
 1501 0028 5DF8047B 	 ldr r7,[sp],#4
 1502              	.LCFI136:
 1503              	 .cfi_restore 7
 1504              	 .cfi_def_cfa_offset 0
 1505 002c 7047     	 bx lr
 1506              	 .cfi_endproc
 1507              	.LFE251:
 1509 002e 00BF     	 .section .text.XMC_CCU8_SLICE_TrapConfig,"ax",%progbits
 1510              	 .align 2
 1511              	 .global XMC_CCU8_SLICE_TrapConfig
 1512              	 .thumb
 1513              	 .thumb_func
 1515              	XMC_CCU8_SLICE_TrapConfig:
 1516              	.LFB252:
 669:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 670:../Libraries/XMCLib/src/xmc_ccu8.c **** /* API to configure trap function*/
 671:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_TrapConfig(XMC_CCU8_SLICE_t *const slice,
 672:../Libraries/XMCLib/src/xmc_ccu8.c ****                                const XMC_CCU8_SLICE_TRAP_EXIT_MODE_t exit_mode,
 673:../Libraries/XMCLib/src/xmc_ccu8.c ****                                const bool synch_with_pwm)
 674:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 1517              	 .loc 2 674 0
 1518              	 .cfi_startproc
 1519              	 
 1520              	 
 1521              	 
 1522 0000 80B4     	 push {r7}
 1523              	.LCFI137:
 1524              	 .cfi_def_cfa_offset 4
 1525              	 .cfi_offset 7,-4
 1526 0002 85B0     	 sub sp,sp,#20
 1527              	.LCFI138:
 1528              	 .cfi_def_cfa_offset 24
 1529 0004 00AF     	 add r7,sp,#0
 1530              	.LCFI139:
 1531              	 .cfi_def_cfa_register 7
 1532 0006 7860     	 str r0,[r7,#4]
 1533 0008 0B46     	 mov r3,r1
 1534 000a FB70     	 strb r3,[r7,#3]
 1535 000c 1346     	 mov r3,r2
 1536 000e BB70     	 strb r3,[r7,#2]
 675:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint32_t cmc;
 676:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint32_t tc;
 677:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 678:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_TrapConfig:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
 679:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_TrapConfig:Invalid Exit Mode", ((exit_mode == XMC_CCU8_SLICE_TRAP_EXIT
 680:../Libraries/XMCLib/src/xmc_ccu8.c ****                                                              (exit_mode == XMC_CCU8_SLICE_TRAP_EXIT
 681:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 682:../Libraries/XMCLib/src/xmc_ccu8.c ****   cmc = slice->CMC;
 1537              	 .loc 2 682 0
 1538 0010 7B68     	 ldr r3,[r7,#4]
 1539 0012 5B68     	 ldr r3,[r3,#4]
 1540 0014 BB60     	 str r3,[r7,#8]
 683:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 684:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Map trap function to Event 2 */
 685:../Libraries/XMCLib/src/xmc_ccu8.c ****   cmc &= ~((uint32_t) CCU8_CC8_CMC_TS_Msk);
 1541              	 .loc 2 685 0
 1542 0016 BB68     	 ldr r3,[r7,#8]
 1543 0018 23F40033 	 bic r3,r3,#131072
 1544 001c BB60     	 str r3,[r7,#8]
 686:../Libraries/XMCLib/src/xmc_ccu8.c ****   cmc |= ((uint32_t) 1) << CCU8_CC8_CMC_TS_Pos;
 1545              	 .loc 2 686 0
 1546 001e BB68     	 ldr r3,[r7,#8]
 1547 0020 43F40033 	 orr r3,r3,#131072
 1548 0024 BB60     	 str r3,[r7,#8]
 687:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 688:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->CMC = cmc;
 1549              	 .loc 2 688 0
 1550 0026 7B68     	 ldr r3,[r7,#4]
 1551 0028 BA68     	 ldr r2,[r7,#8]
 1552 002a 5A60     	 str r2,[r3,#4]
 689:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 690:../Libraries/XMCLib/src/xmc_ccu8.c ****   tc = slice->TC;
 1553              	 .loc 2 690 0
 1554 002c 7B68     	 ldr r3,[r7,#4]
 1555 002e 5B69     	 ldr r3,[r3,#20]
 1556 0030 FB60     	 str r3,[r7,#12]
 691:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 692:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Configure synchronization option */
 693:../Libraries/XMCLib/src/xmc_ccu8.c ****   if(synch_with_pwm == true)
 1557              	 .loc 2 693 0
 1558 0032 BB78     	 ldrb r3,[r7,#2]
 1559 0034 002B     	 cmp r3,#0
 1560 0036 04D0     	 beq .L40
 694:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
 695:../Libraries/XMCLib/src/xmc_ccu8.c ****     tc |= (uint32_t) CCU8_CC8_TC_TRPSE_Msk;
 1561              	 .loc 2 695 0
 1562 0038 FB68     	 ldr r3,[r7,#12]
 1563 003a 43F40013 	 orr r3,r3,#2097152
 1564 003e FB60     	 str r3,[r7,#12]
 1565 0040 03E0     	 b .L41
 1566              	.L40:
 696:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
 697:../Libraries/XMCLib/src/xmc_ccu8.c ****   else
 698:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
 699:../Libraries/XMCLib/src/xmc_ccu8.c ****     tc &= ~((uint32_t) CCU8_CC8_TC_TRPSE_Msk);
 1567              	 .loc 2 699 0
 1568 0042 FB68     	 ldr r3,[r7,#12]
 1569 0044 23F40013 	 bic r3,r3,#2097152
 1570 0048 FB60     	 str r3,[r7,#12]
 1571              	.L41:
 700:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
 701:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 702:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Configure exit mode */
 703:../Libraries/XMCLib/src/xmc_ccu8.c ****   if(exit_mode == XMC_CCU8_SLICE_TRAP_EXIT_MODE_SW)
 1572              	 .loc 2 703 0
 1573 004a FB78     	 ldrb r3,[r7,#3]
 1574 004c 012B     	 cmp r3,#1
 1575 004e 04D1     	 bne .L42
 704:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
 705:../Libraries/XMCLib/src/xmc_ccu8.c ****     tc |= (uint32_t) CCU8_CC8_TC_TRPSW_Msk;
 1576              	 .loc 2 705 0
 1577 0050 FB68     	 ldr r3,[r7,#12]
 1578 0052 43F48003 	 orr r3,r3,#4194304
 1579 0056 FB60     	 str r3,[r7,#12]
 1580 0058 03E0     	 b .L43
 1581              	.L42:
 706:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
 707:../Libraries/XMCLib/src/xmc_ccu8.c ****   else
 708:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
 709:../Libraries/XMCLib/src/xmc_ccu8.c ****     tc &= ~((uint32_t) CCU8_CC8_TC_TRPSW_Msk);
 1582              	 .loc 2 709 0
 1583 005a FB68     	 ldr r3,[r7,#12]
 1584 005c 23F48003 	 bic r3,r3,#4194304
 1585 0060 FB60     	 str r3,[r7,#12]
 1586              	.L43:
 710:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
 711:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 712:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->TC = tc;
 1587              	 .loc 2 712 0
 1588 0062 7B68     	 ldr r3,[r7,#4]
 1589 0064 FA68     	 ldr r2,[r7,#12]
 1590 0066 5A61     	 str r2,[r3,#20]
 713:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 1591              	 .loc 2 713 0
 1592 0068 1437     	 adds r7,r7,#20
 1593              	.LCFI140:
 1594              	 .cfi_def_cfa_offset 4
 1595 006a BD46     	 mov sp,r7
 1596              	.LCFI141:
 1597              	 .cfi_def_cfa_register 13
 1598              	 
 1599 006c 5DF8047B 	 ldr r7,[sp],#4
 1600              	.LCFI142:
 1601              	 .cfi_restore 7
 1602              	 .cfi_def_cfa_offset 0
 1603 0070 7047     	 bx lr
 1604              	 .cfi_endproc
 1605              	.LFE252:
 1607 0072 00BF     	 .section .text.XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent,"ax",%progbits
 1608              	 .align 2
 1609              	 .global XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent
 1610              	 .thumb
 1611              	 .thumb_func
 1613              	XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent:
 1614              	.LFB253:
 714:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 715:../Libraries/XMCLib/src/xmc_ccu8.c **** /* API to configure a slice Status Bit Override event */
 716:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent(XMC_CCU8_SLICE_t *const slice,
 717:../Libraries/XMCLib/src/xmc_ccu8.c ****                                                     const XMC_CCU8_SLICE_EVENT_CONFIG_t *const ev1_
 718:../Libraries/XMCLib/src/xmc_ccu8.c ****                                                     const XMC_CCU8_SLICE_EVENT_CONFIG_t *const ev2_
 719:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 1615              	 .loc 2 719 0
 1616              	 .cfi_startproc
 1617              	 
 1618              	 
 1619              	 
 1620 0000 80B4     	 push {r7}
 1621              	.LCFI143:
 1622              	 .cfi_def_cfa_offset 4
 1623              	 .cfi_offset 7,-4
 1624 0002 87B0     	 sub sp,sp,#28
 1625              	.LCFI144:
 1626              	 .cfi_def_cfa_offset 32
 1627 0004 00AF     	 add r7,sp,#0
 1628              	.LCFI145:
 1629              	 .cfi_def_cfa_register 7
 1630 0006 F860     	 str r0,[r7,#12]
 1631 0008 B960     	 str r1,[r7,#8]
 1632 000a 7A60     	 str r2,[r7,#4]
 720:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint32_t ins;
 721:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 722:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent:Invalid Slice Pointer", XMC_CCU8_IsVal
 723:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent:Invalid Input",
 724:../Libraries/XMCLib/src/xmc_ccu8.c ****          XMC_CCU8_SLICE_IsInputvalid(ev1_config->mapped_input));
 725:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent:Invalid Edge Sensitivity", 
 726:../Libraries/XMCLib/src/xmc_ccu8.c ****              XMC_CCU8_SLICE_CHECK_EDGE_SENSITIVITY(ev1_config->edge));
 727:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent:Invalid Level Sensitivity", 
 728:../Libraries/XMCLib/src/xmc_ccu8.c ****              ((ev1_config->level == XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY_ACTIVE_HIGH) ||\
 729:../Libraries/XMCLib/src/xmc_ccu8.c ****               (ev1_config->level == XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY_ACTIVE_LOW)));
 730:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent:Invalid Debounce Period",
 731:../Libraries/XMCLib/src/xmc_ccu8.c ****               XMC_CCU8_SLICE_CHECK_EVENT_FILTER(ev1_config->duration));
 732:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent:Invalid Input",
 733:../Libraries/XMCLib/src/xmc_ccu8.c ****           XMC_CCU8_SLICE_IsInputvalid(ev2_config->mapped_input));
 734:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent:Invalid Edge Sensitivity",
 735:../Libraries/XMCLib/src/xmc_ccu8.c ****               XMC_CCU8_SLICE_CHECK_EDGE_SENSITIVITY(ev2_config->edge));
 736:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent:Invalid Level Sensitivity",
 737:../Libraries/XMCLib/src/xmc_ccu8.c ****              ((ev2_config->level == XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY_ACTIVE_HIGH) ||\
 738:../Libraries/XMCLib/src/xmc_ccu8.c ****               (ev2_config->level == XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY_ACTIVE_LOW)));
 739:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent:Invalid Debounce Period",
 740:../Libraries/XMCLib/src/xmc_ccu8.c ****              XMC_CCU8_SLICE_CHECK_EVENT_FILTER(ev2_config->duration));
 741:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 742:../Libraries/XMCLib/src/xmc_ccu8.c **** #if defined(CCU8V3) /* Defined for XMC1400 devices only */
 743:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins = slice->INS2;
 744:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 745:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Configure the edge sensitivity for event 1 */
 746:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_EDGE_CONFIG_MASK) << CCU8_CC8_INS2_EV1EM_Pos);
 747:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins |= ((uint32_t) ev1_config->edge) << CCU8_CC8_INS2_EV1EM_Pos;
 748:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 749:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Configure the edge sensitivity for event 2 */
 750:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_EDGE_CONFIG_MASK) << CCU8_CC8_INS2_EV2EM_Pos);
 751:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins |= ((uint32_t) ev2_config->edge) << CCU8_CC8_INS2_EV2EM_Pos;
 752:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 753:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Configure the level sensitivity for event 1 */
 754:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_LEVEL_CONFIG_MASK) << CCU8_CC8_INS2_EV1LM_Pos);
 755:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins |= ((uint32_t) ev1_config->level) << CCU8_CC8_INS2_EV1LM_Pos;
 756:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 757:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Configure the level sensitivity for event 2 */
 758:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_LEVEL_CONFIG_MASK) << CCU8_CC8_INS2_EV2LM_Pos);
 759:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins |= ((uint32_t) ev2_config->level) << CCU8_CC8_INS2_EV2LM_Pos;
 760:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 761:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Configure the debounce filter for event 1 */
 762:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_FILTER_CONFIG_MASK) << CCU8_CC8_INS2_LPF1M_Pos);
 763:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins |= ((uint32_t) ev1_config->duration) << CCU8_CC8_INS2_LPF1M_Pos;
 764:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 765:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Configure the debounce filter for event 2 */
 766:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_FILTER_CONFIG_MASK) << CCU8_CC8_INS2_LPF2M_Pos);
 767:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins |= ((uint32_t) ev2_config->duration) << CCU8_CC8_INS2_LPF2M_Pos;
 768:../Libraries/XMCLib/src/xmc_ccu8.c ****   
 769:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->INS2 = ins; 
 770:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 771:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins = slice->INS1;
 772:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Next, the input for Event1 */
 773:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_INPUT_CONFIG_MASK) << CCU8_CC8_INS1_EV1IS_Pos);
 774:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins |= ((uint32_t) ev1_config->mapped_input) << CCU8_CC8_INS1_EV1IS_Pos;
 775:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 776:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Finally, the input for Event2 */
 777:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_INPUT_CONFIG_MASK) << CCU8_CC8_INS1_EV2IS_Pos);
 778:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins |= ((uint32_t) ev2_config->mapped_input) << CCU8_CC8_INS1_EV2IS_Pos;
 779:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 780:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->INS1 = ins;  
 781:../Libraries/XMCLib/src/xmc_ccu8.c **** #else
 782:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins = slice->INS;
 1633              	 .loc 2 782 0
 1634 000c FB68     	 ldr r3,[r7,#12]
 1635 000e 1B68     	 ldr r3,[r3]
 1636 0010 7B61     	 str r3,[r7,#20]
 783:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 784:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Configure the edge sensitivity for event 1 */
 785:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_EDGE_CONFIG_MASK) << CCU8_CC8_INS_EV1EM_Pos);
 1637              	 .loc 2 785 0
 1638 0012 7B69     	 ldr r3,[r7,#20]
 1639 0014 23F44023 	 bic r3,r3,#786432
 1640 0018 7B61     	 str r3,[r7,#20]
 786:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins |= ((uint32_t) ev1_config->edge) << CCU8_CC8_INS_EV1EM_Pos;
 1641              	 .loc 2 786 0
 1642 001a BB68     	 ldr r3,[r7,#8]
 1643 001c 5B78     	 ldrb r3,[r3,#1]
 1644 001e 9B04     	 lsls r3,r3,#18
 1645 0020 7A69     	 ldr r2,[r7,#20]
 1646 0022 1343     	 orrs r3,r3,r2
 1647 0024 7B61     	 str r3,[r7,#20]
 787:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 788:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Configure the edge sensitivity for event 2 */
 789:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_EDGE_CONFIG_MASK) << CCU8_CC8_INS_EV2EM_Pos);
 1648              	 .loc 2 789 0
 1649 0026 7B69     	 ldr r3,[r7,#20]
 1650 0028 23F44013 	 bic r3,r3,#3145728
 1651 002c 7B61     	 str r3,[r7,#20]
 790:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins |= ((uint32_t) ev2_config->edge) << CCU8_CC8_INS_EV2EM_Pos;
 1652              	 .loc 2 790 0
 1653 002e 7B68     	 ldr r3,[r7,#4]
 1654 0030 5B78     	 ldrb r3,[r3,#1]
 1655 0032 1B05     	 lsls r3,r3,#20
 1656 0034 7A69     	 ldr r2,[r7,#20]
 1657 0036 1343     	 orrs r3,r3,r2
 1658 0038 7B61     	 str r3,[r7,#20]
 791:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 792:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Configure the level sensitivity for event 1 */
 793:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_LEVEL_CONFIG_MASK) << CCU8_CC8_INS_EV1LM_Pos);
 1659              	 .loc 2 793 0
 1660 003a 7B69     	 ldr r3,[r7,#20]
 1661 003c 23F40003 	 bic r3,r3,#8388608
 1662 0040 7B61     	 str r3,[r7,#20]
 794:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins |= ((uint32_t) ev1_config->level) << CCU8_CC8_INS_EV1LM_Pos;
 1663              	 .loc 2 794 0
 1664 0042 BB68     	 ldr r3,[r7,#8]
 1665 0044 9B78     	 ldrb r3,[r3,#2]
 1666 0046 DB05     	 lsls r3,r3,#23
 1667 0048 7A69     	 ldr r2,[r7,#20]
 1668 004a 1343     	 orrs r3,r3,r2
 1669 004c 7B61     	 str r3,[r7,#20]
 795:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 796:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Configure the level sensitivity for event 2 */
 797:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_LEVEL_CONFIG_MASK) << CCU8_CC8_INS_EV2LM_Pos);
 1670              	 .loc 2 797 0
 1671 004e 7B69     	 ldr r3,[r7,#20]
 1672 0050 23F08073 	 bic r3,r3,#16777216
 1673 0054 7B61     	 str r3,[r7,#20]
 798:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins |= ((uint32_t) ev2_config->level) << CCU8_CC8_INS_EV2LM_Pos;
 1674              	 .loc 2 798 0
 1675 0056 7B68     	 ldr r3,[r7,#4]
 1676 0058 9B78     	 ldrb r3,[r3,#2]
 1677 005a 1B06     	 lsls r3,r3,#24
 1678 005c 7A69     	 ldr r2,[r7,#20]
 1679 005e 1343     	 orrs r3,r3,r2
 1680 0060 7B61     	 str r3,[r7,#20]
 799:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 800:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Configure the debounce filter for event 1 */
 801:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_FILTER_CONFIG_MASK) << CCU8_CC8_INS_LPF1M_Pos);
 1681              	 .loc 2 801 0
 1682 0062 7B69     	 ldr r3,[r7,#20]
 1683 0064 23F0C053 	 bic r3,r3,#402653184
 1684 0068 7B61     	 str r3,[r7,#20]
 802:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins |= ((uint32_t) ev1_config->duration) << CCU8_CC8_INS_LPF1M_Pos;
 1685              	 .loc 2 802 0
 1686 006a BB68     	 ldr r3,[r7,#8]
 1687 006c DB78     	 ldrb r3,[r3,#3]
 1688 006e DB06     	 lsls r3,r3,#27
 1689 0070 7A69     	 ldr r2,[r7,#20]
 1690 0072 1343     	 orrs r3,r3,r2
 1691 0074 7B61     	 str r3,[r7,#20]
 803:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 804:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Configure the debounce filter for event 2 */
 805:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_FILTER_CONFIG_MASK) << CCU8_CC8_INS_LPF2M_Pos);
 1692              	 .loc 2 805 0
 1693 0076 7B69     	 ldr r3,[r7,#20]
 1694 0078 23F0C043 	 bic r3,r3,#1610612736
 1695 007c 7B61     	 str r3,[r7,#20]
 806:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins |= ((uint32_t) ev2_config->duration) << CCU8_CC8_INS_LPF2M_Pos;
 1696              	 .loc 2 806 0
 1697 007e 7B68     	 ldr r3,[r7,#4]
 1698 0080 DB78     	 ldrb r3,[r3,#3]
 1699 0082 5B07     	 lsls r3,r3,#29
 1700 0084 7A69     	 ldr r2,[r7,#20]
 1701 0086 1343     	 orrs r3,r3,r2
 1702 0088 7B61     	 str r3,[r7,#20]
 807:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 808:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Next, the input for Event1 */
 809:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_INPUT_CONFIG_MASK) << CCU8_CC8_INS_EV1IS_Pos);
 1703              	 .loc 2 809 0
 1704 008a 7B69     	 ldr r3,[r7,#20]
 1705 008c 23F0F003 	 bic r3,r3,#240
 1706 0090 7B61     	 str r3,[r7,#20]
 810:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins |= ((uint32_t) ev1_config->mapped_input) << CCU8_CC8_INS_EV1IS_Pos;
 1707              	 .loc 2 810 0
 1708 0092 BB68     	 ldr r3,[r7,#8]
 1709 0094 1B78     	 ldrb r3,[r3]
 1710 0096 1B01     	 lsls r3,r3,#4
 1711 0098 7A69     	 ldr r2,[r7,#20]
 1712 009a 1343     	 orrs r3,r3,r2
 1713 009c 7B61     	 str r3,[r7,#20]
 811:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 812:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Finally, the input for Event2 */
 813:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_INPUT_CONFIG_MASK) << CCU8_CC8_INS_EV2IS_Pos);
 1714              	 .loc 2 813 0
 1715 009e 7B69     	 ldr r3,[r7,#20]
 1716 00a0 23F47063 	 bic r3,r3,#3840
 1717 00a4 7B61     	 str r3,[r7,#20]
 814:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins |= ((uint32_t) ev2_config->mapped_input) << CCU8_CC8_INS_EV2IS_Pos;
 1718              	 .loc 2 814 0
 1719 00a6 7B68     	 ldr r3,[r7,#4]
 1720 00a8 1B78     	 ldrb r3,[r3]
 1721 00aa 1B02     	 lsls r3,r3,#8
 1722 00ac 7A69     	 ldr r2,[r7,#20]
 1723 00ae 1343     	 orrs r3,r3,r2
 1724 00b0 7B61     	 str r3,[r7,#20]
 815:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 816:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->INS = ins;
 1725              	 .loc 2 816 0
 1726 00b2 FB68     	 ldr r3,[r7,#12]
 1727 00b4 7A69     	 ldr r2,[r7,#20]
 1728 00b6 1A60     	 str r2,[r3]
 817:../Libraries/XMCLib/src/xmc_ccu8.c **** #endif
 818:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 1729              	 .loc 2 818 0
 1730 00b8 1C37     	 adds r7,r7,#28
 1731              	.LCFI146:
 1732              	 .cfi_def_cfa_offset 4
 1733 00ba BD46     	 mov sp,r7
 1734              	.LCFI147:
 1735              	 .cfi_def_cfa_register 13
 1736              	 
 1737 00bc 5DF8047B 	 ldr r7,[sp],#4
 1738              	.LCFI148:
 1739              	 .cfi_restore 7
 1740              	 .cfi_def_cfa_offset 0
 1741 00c0 7047     	 bx lr
 1742              	 .cfi_endproc
 1743              	.LFE253:
 1745 00c2 00BF     	 .section .text.XMC_CCU8_SLICE_ConfigureEvent,"ax",%progbits
 1746              	 .align 2
 1747              	 .global XMC_CCU8_SLICE_ConfigureEvent
 1748              	 .thumb
 1749              	 .thumb_func
 1751              	XMC_CCU8_SLICE_ConfigureEvent:
 1752              	.LFB254:
 819:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 820:../Libraries/XMCLib/src/xmc_ccu8.c **** /* API to configure a slice trigger event */
 821:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_ConfigureEvent(XMC_CCU8_SLICE_t *const slice,
 822:../Libraries/XMCLib/src/xmc_ccu8.c ****                                    const XMC_CCU8_SLICE_EVENT_t event,
 823:../Libraries/XMCLib/src/xmc_ccu8.c ****                                    const XMC_CCU8_SLICE_EVENT_CONFIG_t *const config)
 824:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 1753              	 .loc 2 824 0
 1754              	 .cfi_startproc
 1755              	 
 1756              	 
 1757              	 
 1758 0000 80B4     	 push {r7}
 1759              	.LCFI149:
 1760              	 .cfi_def_cfa_offset 4
 1761              	 .cfi_offset 7,-4
 1762 0002 89B0     	 sub sp,sp,#36
 1763              	.LCFI150:
 1764              	 .cfi_def_cfa_offset 40
 1765 0004 00AF     	 add r7,sp,#0
 1766              	.LCFI151:
 1767              	 .cfi_def_cfa_register 7
 1768 0006 F860     	 str r0,[r7,#12]
 1769 0008 0B46     	 mov r3,r1
 1770 000a 7A60     	 str r2,[r7,#4]
 1771 000c FB72     	 strb r3,[r7,#11]
 825:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint32_t ins;
 826:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint8_t  pos;
 827:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint8_t  offset;
 828:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 829:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_ConfigureEvent:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
 830:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_ConfigureEvent:Invalid Event ID", XMC_CCU8_SLICE_CHECK_EVENT_ID(event)
 831:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_ConfigureEvent:Invalid Input",  XMC_CCU8_SLICE_IsInputvalid(config->ma
 832:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_ConfigureEvent:Invalid Edge Sensitivity",
 833:../Libraries/XMCLib/src/xmc_ccu8.c ****              XMC_CCU8_SLICE_CHECK_EDGE_SENSITIVITY(config->edge));
 834:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_ConfigureEvent:Invalid Level Sensitivity", 
 835:../Libraries/XMCLib/src/xmc_ccu8.c ****              ((config->level == XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY_ACTIVE_HIGH) ||\
 836:../Libraries/XMCLib/src/xmc_ccu8.c ****               (config->level == XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY_ACTIVE_LOW)));
 837:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_ConfigureEvent:Invalid Debounce Period",
 838:../Libraries/XMCLib/src/xmc_ccu8.c ****              XMC_CCU8_SLICE_CHECK_EVENT_FILTER(config->duration));
 839:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 840:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Calculate offset with reference to event */
 841:../Libraries/XMCLib/src/xmc_ccu8.c ****   offset = ((uint8_t) event) - 1U;
 1772              	 .loc 2 841 0
 1773 000e FB7A     	 ldrb r3,[r7,#11]
 1774 0010 013B     	 subs r3,r3,#1
 1775 0012 FB77     	 strb r3,[r7,#31]
 842:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 843:../Libraries/XMCLib/src/xmc_ccu8.c **** #if defined(CCU8V3) /* Defined for XMC1400 devices only */
 844:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins = slice->INS2;
 845:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 846:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* First, configure the edge sensitivity */
 847:../Libraries/XMCLib/src/xmc_ccu8.c ****   pos = ((uint8_t) CCU8_CC8_INS2_EV0EM_Pos) + (uint8_t)(offset << 2U);
 848:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_EDGE_CONFIG_MASK) << pos);
 849:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins |= ((uint32_t) config->edge) << pos;
 850:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 851:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Next, the level */
 852:../Libraries/XMCLib/src/xmc_ccu8.c ****   pos = ((uint8_t) CCU8_CC8_INS2_EV0LM_Pos) + (uint8_t)(offset << 2U);
 853:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_LEVEL_CONFIG_MASK) << pos);
 854:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins |= ((uint32_t) (config->level)) << pos;
 855:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 856:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Next, the debounce filter */
 857:../Libraries/XMCLib/src/xmc_ccu8.c ****   pos = ((uint8_t) CCU8_CC8_INS2_LPF0M_Pos) + (uint8_t)(offset << 2U);
 858:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_FILTER_CONFIG_MASK) << pos);
 859:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins |= ((uint32_t) config->duration) << pos;
 860:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 861:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->INS2 = ins;
 862:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 863:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins = slice->INS1;
 864:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 865:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Finally the input */
 866:../Libraries/XMCLib/src/xmc_ccu8.c ****   pos = ((uint8_t) CCU8_CC8_INS1_EV0IS_Pos) + (uint8_t)(offset << 3U);
 867:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_INPUT_CONFIG_MASK) << pos);
 868:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins |= ((uint32_t) config->mapped_input) << pos;
 869:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 870:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->INS1 = ins;
 871:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 872:../Libraries/XMCLib/src/xmc_ccu8.c **** #else
 873:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins = slice->INS;
 1776              	 .loc 2 873 0
 1777 0014 FB68     	 ldr r3,[r7,#12]
 1778 0016 1B68     	 ldr r3,[r3]
 1779 0018 BB61     	 str r3,[r7,#24]
 874:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 875:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* First, configure the edge sensitivity */
 876:../Libraries/XMCLib/src/xmc_ccu8.c ****   pos = ((uint8_t) CCU8_CC8_INS_EV0EM_Pos) + (uint8_t)(offset << 1U);
 1780              	 .loc 2 876 0
 1781 001a FB7F     	 ldrb r3,[r7,#31]
 1782 001c 5B00     	 lsls r3,r3,#1
 1783 001e DBB2     	 uxtb r3,r3
 1784 0020 1033     	 adds r3,r3,#16
 1785 0022 FB75     	 strb r3,[r7,#23]
 877:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_EDGE_CONFIG_MASK) << pos);
 1786              	 .loc 2 877 0
 1787 0024 FB7D     	 ldrb r3,[r7,#23]
 1788 0026 0322     	 movs r2,#3
 1789 0028 02FA03F3 	 lsl r3,r2,r3
 1790 002c DB43     	 mvns r3,r3
 1791 002e BA69     	 ldr r2,[r7,#24]
 1792 0030 1340     	 ands r3,r3,r2
 1793 0032 BB61     	 str r3,[r7,#24]
 878:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins |= ((uint32_t) config->edge) << pos;
 1794              	 .loc 2 878 0
 1795 0034 7B68     	 ldr r3,[r7,#4]
 1796 0036 5B78     	 ldrb r3,[r3,#1]
 1797 0038 1A46     	 mov r2,r3
 1798 003a FB7D     	 ldrb r3,[r7,#23]
 1799 003c 02FA03F3 	 lsl r3,r2,r3
 1800 0040 BA69     	 ldr r2,[r7,#24]
 1801 0042 1343     	 orrs r3,r3,r2
 1802 0044 BB61     	 str r3,[r7,#24]
 879:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 880:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Next, the level */
 881:../Libraries/XMCLib/src/xmc_ccu8.c ****   pos = ((uint8_t) CCU8_CC8_INS_EV0LM_Pos) + offset;
 1803              	 .loc 2 881 0
 1804 0046 FB7F     	 ldrb r3,[r7,#31]
 1805 0048 1633     	 adds r3,r3,#22
 1806 004a FB75     	 strb r3,[r7,#23]
 882:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_LEVEL_CONFIG_MASK) << pos);
 1807              	 .loc 2 882 0
 1808 004c FB7D     	 ldrb r3,[r7,#23]
 1809 004e 0122     	 movs r2,#1
 1810 0050 02FA03F3 	 lsl r3,r2,r3
 1811 0054 DB43     	 mvns r3,r3
 1812 0056 BA69     	 ldr r2,[r7,#24]
 1813 0058 1340     	 ands r3,r3,r2
 1814 005a BB61     	 str r3,[r7,#24]
 883:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins |= ((uint32_t) (config->level)) << pos;
 1815              	 .loc 2 883 0
 1816 005c 7B68     	 ldr r3,[r7,#4]
 1817 005e 9B78     	 ldrb r3,[r3,#2]
 1818 0060 1A46     	 mov r2,r3
 1819 0062 FB7D     	 ldrb r3,[r7,#23]
 1820 0064 02FA03F3 	 lsl r3,r2,r3
 1821 0068 BA69     	 ldr r2,[r7,#24]
 1822 006a 1343     	 orrs r3,r3,r2
 1823 006c BB61     	 str r3,[r7,#24]
 884:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 885:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Next, the debounce filter */
 886:../Libraries/XMCLib/src/xmc_ccu8.c ****   pos = ((uint8_t) CCU8_CC8_INS_LPF0M_Pos) + (uint8_t)(offset << 1U);
 1824              	 .loc 2 886 0
 1825 006e FB7F     	 ldrb r3,[r7,#31]
 1826 0070 5B00     	 lsls r3,r3,#1
 1827 0072 DBB2     	 uxtb r3,r3
 1828 0074 1933     	 adds r3,r3,#25
 1829 0076 FB75     	 strb r3,[r7,#23]
 887:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_FILTER_CONFIG_MASK) << pos);
 1830              	 .loc 2 887 0
 1831 0078 FB7D     	 ldrb r3,[r7,#23]
 1832 007a 0322     	 movs r2,#3
 1833 007c 02FA03F3 	 lsl r3,r2,r3
 1834 0080 DB43     	 mvns r3,r3
 1835 0082 BA69     	 ldr r2,[r7,#24]
 1836 0084 1340     	 ands r3,r3,r2
 1837 0086 BB61     	 str r3,[r7,#24]
 888:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins |= ((uint32_t) config->duration) << pos;
 1838              	 .loc 2 888 0
 1839 0088 7B68     	 ldr r3,[r7,#4]
 1840 008a DB78     	 ldrb r3,[r3,#3]
 1841 008c 1A46     	 mov r2,r3
 1842 008e FB7D     	 ldrb r3,[r7,#23]
 1843 0090 02FA03F3 	 lsl r3,r2,r3
 1844 0094 BA69     	 ldr r2,[r7,#24]
 1845 0096 1343     	 orrs r3,r3,r2
 1846 0098 BB61     	 str r3,[r7,#24]
 889:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 890:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Finally the input */
 891:../Libraries/XMCLib/src/xmc_ccu8.c ****   pos = ((uint8_t) CCU8_CC8_INS_EV0IS_Pos) + (uint8_t)(offset << 2U);
 1847              	 .loc 2 891 0
 1848 009a FB7F     	 ldrb r3,[r7,#31]
 1849 009c 9B00     	 lsls r3,r3,#2
 1850 009e FB75     	 strb r3,[r7,#23]
 892:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_INPUT_CONFIG_MASK) << pos);
 1851              	 .loc 2 892 0
 1852 00a0 FB7D     	 ldrb r3,[r7,#23]
 1853 00a2 0F22     	 movs r2,#15
 1854 00a4 02FA03F3 	 lsl r3,r2,r3
 1855 00a8 DB43     	 mvns r3,r3
 1856 00aa BA69     	 ldr r2,[r7,#24]
 1857 00ac 1340     	 ands r3,r3,r2
 1858 00ae BB61     	 str r3,[r7,#24]
 893:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins |= ((uint32_t) config->mapped_input) << pos;
 1859              	 .loc 2 893 0
 1860 00b0 7B68     	 ldr r3,[r7,#4]
 1861 00b2 1B78     	 ldrb r3,[r3]
 1862 00b4 1A46     	 mov r2,r3
 1863 00b6 FB7D     	 ldrb r3,[r7,#23]
 1864 00b8 02FA03F3 	 lsl r3,r2,r3
 1865 00bc BA69     	 ldr r2,[r7,#24]
 1866 00be 1343     	 orrs r3,r3,r2
 1867 00c0 BB61     	 str r3,[r7,#24]
 894:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 895:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->INS = ins;
 1868              	 .loc 2 895 0
 1869 00c2 FB68     	 ldr r3,[r7,#12]
 1870 00c4 BA69     	 ldr r2,[r7,#24]
 1871 00c6 1A60     	 str r2,[r3]
 896:../Libraries/XMCLib/src/xmc_ccu8.c **** #endif
 897:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 1872              	 .loc 2 897 0
 1873 00c8 2437     	 adds r7,r7,#36
 1874              	.LCFI152:
 1875              	 .cfi_def_cfa_offset 4
 1876 00ca BD46     	 mov sp,r7
 1877              	.LCFI153:
 1878              	 .cfi_def_cfa_register 13
 1879              	 
 1880 00cc 5DF8047B 	 ldr r7,[sp],#4
 1881              	.LCFI154:
 1882              	 .cfi_restore 7
 1883              	 .cfi_def_cfa_offset 0
 1884 00d0 7047     	 bx lr
 1885              	 .cfi_endproc
 1886              	.LFE254:
 1888 00d2 00BF     	 .section .text.XMC_CCU8_SLICE_SetInput,"ax",%progbits
 1889              	 .align 2
 1890              	 .global XMC_CCU8_SLICE_SetInput
 1891              	 .thumb
 1892              	 .thumb_func
 1894              	XMC_CCU8_SLICE_SetInput:
 1895              	.LFB255:
 898:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 899:../Libraries/XMCLib/src/xmc_ccu8.c **** /* API to bind an input to a slice trigger event */
 900:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_SetInput(XMC_CCU8_SLICE_t *const slice,
 901:../Libraries/XMCLib/src/xmc_ccu8.c ****                          const XMC_CCU8_SLICE_EVENT_t event,
 902:../Libraries/XMCLib/src/xmc_ccu8.c ****                              const XMC_CCU8_SLICE_INPUT_t input)
 903:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 1896              	 .loc 2 903 0
 1897              	 .cfi_startproc
 1898              	 
 1899              	 
 1900              	 
 1901 0000 80B4     	 push {r7}
 1902              	.LCFI155:
 1903              	 .cfi_def_cfa_offset 4
 1904              	 .cfi_offset 7,-4
 1905 0002 85B0     	 sub sp,sp,#20
 1906              	.LCFI156:
 1907              	 .cfi_def_cfa_offset 24
 1908 0004 00AF     	 add r7,sp,#0
 1909              	.LCFI157:
 1910              	 .cfi_def_cfa_register 7
 1911 0006 7860     	 str r0,[r7,#4]
 1912 0008 0B46     	 mov r3,r1
 1913 000a FB70     	 strb r3,[r7,#3]
 1914 000c 1346     	 mov r3,r2
 1915 000e BB70     	 strb r3,[r7,#2]
 904:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint32_t ins;
 905:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint8_t  pos;
 906:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint8_t  offset;
 907:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 908:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_SetInput:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
 909:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_SetInput:Invalid Event ID", XMC_CCU8_SLICE_CHECK_EVENT_ID(event));
 910:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_SetInput:Invalid Input", XMC_CCU8_SLICE_IsInputvalid(input));
 911:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 912:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Calculate offset with reference to event */
 913:../Libraries/XMCLib/src/xmc_ccu8.c ****   offset = ((uint8_t) event) - 1U;
 1916              	 .loc 2 913 0
 1917 0010 FB78     	 ldrb r3,[r7,#3]
 1918 0012 013B     	 subs r3,r3,#1
 1919 0014 FB73     	 strb r3,[r7,#15]
 914:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 915:../Libraries/XMCLib/src/xmc_ccu8.c **** #if defined(CCU8V3) /* Defined for XMC1400 devices only */
 916:../Libraries/XMCLib/src/xmc_ccu8.c ****   pos = ((uint8_t) CCU8_CC8_INS1_EV0IS_Pos) + (uint8_t) (offset << 3U);
 917:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins = slice->INS1;
 918:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_INPUT_CONFIG_MASK) << pos);
 919:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins |= ((uint32_t) input) << pos;
 920:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 921:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->INS1 = ins;
 922:../Libraries/XMCLib/src/xmc_ccu8.c **** #else
 923:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 924:../Libraries/XMCLib/src/xmc_ccu8.c ****   pos = ((uint8_t) CCU8_CC8_INS_EV0IS_Pos) + (uint8_t) (offset << 2U);
 1920              	 .loc 2 924 0
 1921 0016 FB7B     	 ldrb r3,[r7,#15]
 1922 0018 9B00     	 lsls r3,r3,#2
 1923 001a BB73     	 strb r3,[r7,#14]
 925:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins = slice->INS;
 1924              	 .loc 2 925 0
 1925 001c 7B68     	 ldr r3,[r7,#4]
 1926 001e 1B68     	 ldr r3,[r3]
 1927 0020 BB60     	 str r3,[r7,#8]
 926:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_INPUT_CONFIG_MASK) << pos);
 1928              	 .loc 2 926 0
 1929 0022 BB7B     	 ldrb r3,[r7,#14]
 1930 0024 0F22     	 movs r2,#15
 1931 0026 02FA03F3 	 lsl r3,r2,r3
 1932 002a DB43     	 mvns r3,r3
 1933 002c BA68     	 ldr r2,[r7,#8]
 1934 002e 1340     	 ands r3,r3,r2
 1935 0030 BB60     	 str r3,[r7,#8]
 927:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins |= ((uint32_t) input) << pos;
 1936              	 .loc 2 927 0
 1937 0032 BA78     	 ldrb r2,[r7,#2]
 1938 0034 BB7B     	 ldrb r3,[r7,#14]
 1939 0036 02FA03F3 	 lsl r3,r2,r3
 1940 003a BA68     	 ldr r2,[r7,#8]
 1941 003c 1343     	 orrs r3,r3,r2
 1942 003e BB60     	 str r3,[r7,#8]
 928:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 929:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->INS = ins;
 1943              	 .loc 2 929 0
 1944 0040 7B68     	 ldr r3,[r7,#4]
 1945 0042 BA68     	 ldr r2,[r7,#8]
 1946 0044 1A60     	 str r2,[r3]
 930:../Libraries/XMCLib/src/xmc_ccu8.c **** #endif
 931:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 1947              	 .loc 2 931 0
 1948 0046 1437     	 adds r7,r7,#20
 1949              	.LCFI158:
 1950              	 .cfi_def_cfa_offset 4
 1951 0048 BD46     	 mov sp,r7
 1952              	.LCFI159:
 1953              	 .cfi_def_cfa_register 13
 1954              	 
 1955 004a 5DF8047B 	 ldr r7,[sp],#4
 1956              	.LCFI160:
 1957              	 .cfi_restore 7
 1958              	 .cfi_def_cfa_offset 0
 1959 004e 7047     	 bx lr
 1960              	 .cfi_endproc
 1961              	.LFE255:
 1963              	 .section .text.XMC_CCU8_SLICE_SetTimerRepeatMode,"ax",%progbits
 1964              	 .align 2
 1965              	 .global XMC_CCU8_SLICE_SetTimerRepeatMode
 1966              	 .thumb
 1967              	 .thumb_func
 1969              	XMC_CCU8_SLICE_SetTimerRepeatMode:
 1970              	.LFB256:
 932:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 933:../Libraries/XMCLib/src/xmc_ccu8.c **** /* API to program timer repeat mode - Single shot vs repeat  */
 934:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_SetTimerRepeatMode(XMC_CCU8_SLICE_t *const slice,
 935:../Libraries/XMCLib/src/xmc_ccu8.c ****                                    const XMC_CCU8_SLICE_TIMER_REPEAT_MODE_t mode)
 936:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 1971              	 .loc 2 936 0
 1972              	 .cfi_startproc
 1973              	 
 1974              	 
 1975              	 
 1976 0000 80B4     	 push {r7}
 1977              	.LCFI161:
 1978              	 .cfi_def_cfa_offset 4
 1979              	 .cfi_offset 7,-4
 1980 0002 85B0     	 sub sp,sp,#20
 1981              	.LCFI162:
 1982              	 .cfi_def_cfa_offset 24
 1983 0004 00AF     	 add r7,sp,#0
 1984              	.LCFI163:
 1985              	 .cfi_def_cfa_register 7
 1986 0006 7860     	 str r0,[r7,#4]
 1987 0008 0B46     	 mov r3,r1
 1988 000a FB70     	 strb r3,[r7,#3]
 937:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint32_t tc;
 938:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 939:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_SetTimerRepeatMode:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice
 940:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_SetTimerRepeatMode:Invalid Timer Repeat Mode", 
 941:../Libraries/XMCLib/src/xmc_ccu8.c ****              ((mode == XMC_CCU8_SLICE_TIMER_REPEAT_MODE_REPEAT) ||\
 942:../Libraries/XMCLib/src/xmc_ccu8.c ****               (mode == (mode == XMC_CCU8_SLICE_TIMER_REPEAT_MODE_REPEAT))));
 943:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 944:../Libraries/XMCLib/src/xmc_ccu8.c ****   tc = slice->TC;
 1989              	 .loc 2 944 0
 1990 000c 7B68     	 ldr r3,[r7,#4]
 1991 000e 5B69     	 ldr r3,[r3,#20]
 1992 0010 FB60     	 str r3,[r7,#12]
 945:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 946:../Libraries/XMCLib/src/xmc_ccu8.c ****   if(XMC_CCU8_SLICE_TIMER_REPEAT_MODE_REPEAT == mode)
 1993              	 .loc 2 946 0
 1994 0012 FB78     	 ldrb r3,[r7,#3]
 1995 0014 002B     	 cmp r3,#0
 1996 0016 04D1     	 bne .L48
 947:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
 948:../Libraries/XMCLib/src/xmc_ccu8.c ****     tc &= ~((uint32_t) CCU8_CC8_TC_TSSM_Msk);
 1997              	 .loc 2 948 0
 1998 0018 FB68     	 ldr r3,[r7,#12]
 1999 001a 23F00203 	 bic r3,r3,#2
 2000 001e FB60     	 str r3,[r7,#12]
 2001 0020 03E0     	 b .L49
 2002              	.L48:
 949:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
 950:../Libraries/XMCLib/src/xmc_ccu8.c ****   else
 951:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
 952:../Libraries/XMCLib/src/xmc_ccu8.c ****     tc |= (uint32_t) CCU8_CC8_TC_TSSM_Msk;
 2003              	 .loc 2 952 0
 2004 0022 FB68     	 ldr r3,[r7,#12]
 2005 0024 43F00203 	 orr r3,r3,#2
 2006 0028 FB60     	 str r3,[r7,#12]
 2007              	.L49:
 953:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
 954:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 955:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->TC = tc;
 2008              	 .loc 2 955 0
 2009 002a 7B68     	 ldr r3,[r7,#4]
 2010 002c FA68     	 ldr r2,[r7,#12]
 2011 002e 5A61     	 str r2,[r3,#20]
 956:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 2012              	 .loc 2 956 0
 2013 0030 1437     	 adds r7,r7,#20
 2014              	.LCFI164:
 2015              	 .cfi_def_cfa_offset 4
 2016 0032 BD46     	 mov sp,r7
 2017              	.LCFI165:
 2018              	 .cfi_def_cfa_register 13
 2019              	 
 2020 0034 5DF8047B 	 ldr r7,[sp],#4
 2021              	.LCFI166:
 2022              	 .cfi_restore 7
 2023              	 .cfi_def_cfa_offset 0
 2024 0038 7047     	 bx lr
 2025              	 .cfi_endproc
 2026              	.LFE256:
 2028 003a 00BF     	 .section .text.XMC_CCU8_SLICE_SetTimerCountingMode,"ax",%progbits
 2029              	 .align 2
 2030              	 .global XMC_CCU8_SLICE_SetTimerCountingMode
 2031              	 .thumb
 2032              	 .thumb_func
 2034              	XMC_CCU8_SLICE_SetTimerCountingMode:
 2035              	.LFB257:
 957:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 958:../Libraries/XMCLib/src/xmc_ccu8.c **** /* Programs timer counting mode  */
 959:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_SetTimerCountingMode(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_TIMER_
 960:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 2036              	 .loc 2 960 0
 2037              	 .cfi_startproc
 2038              	 
 2039              	 
 2040              	 
 2041 0000 80B4     	 push {r7}
 2042              	.LCFI167:
 2043              	 .cfi_def_cfa_offset 4
 2044              	 .cfi_offset 7,-4
 2045 0002 85B0     	 sub sp,sp,#20
 2046              	.LCFI168:
 2047              	 .cfi_def_cfa_offset 24
 2048 0004 00AF     	 add r7,sp,#0
 2049              	.LCFI169:
 2050              	 .cfi_def_cfa_register 7
 2051 0006 7860     	 str r0,[r7,#4]
 2052 0008 0B46     	 mov r3,r1
 2053 000a FB70     	 strb r3,[r7,#3]
 961:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint32_t tc;
 962:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 963:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_SetTimerCountingMode:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(sli
 964:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_SetTimerCountingMode:Invalid Timer Count Mode",
 965:../Libraries/XMCLib/src/xmc_ccu8.c ****              ((mode == XMC_CCU8_SLICE_TIMER_COUNT_MODE_EA) ||\
 966:../Libraries/XMCLib/src/xmc_ccu8.c ****               (mode == XMC_CCU8_SLICE_TIMER_COUNT_MODE_CA)));
 967:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 968:../Libraries/XMCLib/src/xmc_ccu8.c ****   tc = slice->TC;
 2054              	 .loc 2 968 0
 2055 000c 7B68     	 ldr r3,[r7,#4]
 2056 000e 5B69     	 ldr r3,[r3,#20]
 2057 0010 FB60     	 str r3,[r7,#12]
 969:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 970:../Libraries/XMCLib/src/xmc_ccu8.c ****   if(XMC_CCU8_SLICE_TIMER_COUNT_MODE_EA == mode)
 2058              	 .loc 2 970 0
 2059 0012 FB78     	 ldrb r3,[r7,#3]
 2060 0014 002B     	 cmp r3,#0
 2061 0016 04D1     	 bne .L51
 971:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
 972:../Libraries/XMCLib/src/xmc_ccu8.c ****     tc &= ~((uint32_t) CCU8_CC8_TC_TCM_Msk);
 2062              	 .loc 2 972 0
 2063 0018 FB68     	 ldr r3,[r7,#12]
 2064 001a 23F00103 	 bic r3,r3,#1
 2065 001e FB60     	 str r3,[r7,#12]
 2066 0020 03E0     	 b .L52
 2067              	.L51:
 973:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
 974:../Libraries/XMCLib/src/xmc_ccu8.c ****   else
 975:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
 976:../Libraries/XMCLib/src/xmc_ccu8.c ****     tc |= (uint32_t) CCU8_CC8_TC_TCM_Msk;
 2068              	 .loc 2 976 0
 2069 0022 FB68     	 ldr r3,[r7,#12]
 2070 0024 43F00103 	 orr r3,r3,#1
 2071 0028 FB60     	 str r3,[r7,#12]
 2072              	.L52:
 977:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
 978:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 979:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->TC = tc;
 2073              	 .loc 2 979 0
 2074 002a 7B68     	 ldr r3,[r7,#4]
 2075 002c FA68     	 ldr r2,[r7,#12]
 2076 002e 5A61     	 str r2,[r3,#20]
 980:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 2077              	 .loc 2 980 0
 2078 0030 1437     	 adds r7,r7,#20
 2079              	.LCFI170:
 2080              	 .cfi_def_cfa_offset 4
 2081 0032 BD46     	 mov sp,r7
 2082              	.LCFI171:
 2083              	 .cfi_def_cfa_register 13
 2084              	 
 2085 0034 5DF8047B 	 ldr r7,[sp],#4
 2086              	.LCFI172:
 2087              	 .cfi_restore 7
 2088              	 .cfi_def_cfa_offset 0
 2089 0038 7047     	 bx lr
 2090              	 .cfi_endproc
 2091              	.LFE257:
 2093 003a 00BF     	 .section .text.XMC_CCU8_SLICE_SetTimerPeriodMatch,"ax",%progbits
 2094              	 .align 2
 2095              	 .global XMC_CCU8_SLICE_SetTimerPeriodMatch
 2096              	 .thumb
 2097              	 .thumb_func
 2099              	XMC_CCU8_SLICE_SetTimerPeriodMatch:
 2100              	.LFB258:
 981:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 982:../Libraries/XMCLib/src/xmc_ccu8.c **** /* Programs period match value of the timer  */
 983:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_SetTimerPeriodMatch(XMC_CCU8_SLICE_t *const slice, const uint16_t period_val)
 984:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 2101              	 .loc 2 984 0
 2102              	 .cfi_startproc
 2103              	 
 2104              	 
 2105              	 
 2106 0000 80B4     	 push {r7}
 2107              	.LCFI173:
 2108              	 .cfi_def_cfa_offset 4
 2109              	 .cfi_offset 7,-4
 2110 0002 83B0     	 sub sp,sp,#12
 2111              	.LCFI174:
 2112              	 .cfi_def_cfa_offset 16
 2113 0004 00AF     	 add r7,sp,#0
 2114              	.LCFI175:
 2115              	 .cfi_def_cfa_register 7
 2116 0006 7860     	 str r0,[r7,#4]
 2117 0008 0B46     	 mov r3,r1
 2118 000a 7B80     	 strh r3,[r7,#2]
 985:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_SetTimerPeriodMatch:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slic
 986:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->PRS = (uint32_t) period_val;
 2119              	 .loc 2 986 0
 2120 000c 7A88     	 ldrh r2,[r7,#2]
 2121 000e 7B68     	 ldr r3,[r7,#4]
 2122 0010 5A63     	 str r2,[r3,#52]
 987:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 2123              	 .loc 2 987 0
 2124 0012 0C37     	 adds r7,r7,#12
 2125              	.LCFI176:
 2126              	 .cfi_def_cfa_offset 4
 2127 0014 BD46     	 mov sp,r7
 2128              	.LCFI177:
 2129              	 .cfi_def_cfa_register 13
 2130              	 
 2131 0016 5DF8047B 	 ldr r7,[sp],#4
 2132              	.LCFI178:
 2133              	 .cfi_restore 7
 2134              	 .cfi_def_cfa_offset 0
 2135 001a 7047     	 bx lr
 2136              	 .cfi_endproc
 2137              	.LFE258:
 2139              	 .section .text.XMC_CCU8_SLICE_GetCaptureRegisterValue,"ax",%progbits
 2140              	 .align 2
 2141              	 .global XMC_CCU8_SLICE_GetCaptureRegisterValue
 2142              	 .thumb
 2143              	 .thumb_func
 2145              	XMC_CCU8_SLICE_GetCaptureRegisterValue:
 2146              	.LFB259:
 988:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 989:../Libraries/XMCLib/src/xmc_ccu8.c **** /* Retrieves desired capture register value */
 990:../Libraries/XMCLib/src/xmc_ccu8.c **** uint32_t XMC_CCU8_SLICE_GetCaptureRegisterValue(const XMC_CCU8_SLICE_t *const slice, const uint8_t 
 991:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 2147              	 .loc 2 991 0
 2148              	 .cfi_startproc
 2149              	 
 2150              	 
 2151              	 
 2152 0000 80B4     	 push {r7}
 2153              	.LCFI179:
 2154              	 .cfi_def_cfa_offset 4
 2155              	 .cfi_offset 7,-4
 2156 0002 83B0     	 sub sp,sp,#12
 2157              	.LCFI180:
 2158              	 .cfi_def_cfa_offset 16
 2159 0004 00AF     	 add r7,sp,#0
 2160              	.LCFI181:
 2161              	 .cfi_def_cfa_register 7
 2162 0006 7860     	 str r0,[r7,#4]
 2163 0008 0B46     	 mov r3,r1
 2164 000a FB70     	 strb r3,[r7,#3]
 992:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_GetCaptureRegisterValue:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(
 993:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_GetCaptureRegisterValue:Invalid register number", (reg_num < 4U));
 994:../Libraries/XMCLib/src/xmc_ccu8.c ****   return(slice->CV[reg_num]);
 2165              	 .loc 2 994 0
 2166 000c FB78     	 ldrb r3,[r7,#3]
 2167 000e 7A68     	 ldr r2,[r7,#4]
 2168 0010 1C33     	 adds r3,r3,#28
 2169 0012 9B00     	 lsls r3,r3,#2
 2170 0014 1344     	 add r3,r3,r2
 2171 0016 5B68     	 ldr r3,[r3,#4]
 995:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 2172              	 .loc 2 995 0
 2173 0018 1846     	 mov r0,r3
 2174 001a 0C37     	 adds r7,r7,#12
 2175              	.LCFI182:
 2176              	 .cfi_def_cfa_offset 4
 2177 001c BD46     	 mov sp,r7
 2178              	.LCFI183:
 2179              	 .cfi_def_cfa_register 13
 2180              	 
 2181 001e 5DF8047B 	 ldr r7,[sp],#4
 2182              	.LCFI184:
 2183              	 .cfi_restore 7
 2184              	 .cfi_def_cfa_offset 0
 2185 0022 7047     	 bx lr
 2186              	 .cfi_endproc
 2187              	.LFE259:
 2189              	 .section .text.XMC_CCU8_SLICE_GetLastCapturedTimerValue,"ax",%progbits
 2190              	 .align 2
 2191              	 .global XMC_CCU8_SLICE_GetLastCapturedTimerValue
 2192              	 .thumb
 2193              	 .thumb_func
 2195              	XMC_CCU8_SLICE_GetLastCapturedTimerValue:
 2196              	.LFB260:
 996:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 997:../Libraries/XMCLib/src/xmc_ccu8.c **** /* @brief Retrieves the latest captured timer value */
 998:../Libraries/XMCLib/src/xmc_ccu8.c **** XMC_CCU8_STATUS_t XMC_CCU8_SLICE_GetLastCapturedTimerValue(const XMC_CCU8_SLICE_t *const slice,
 999:../Libraries/XMCLib/src/xmc_ccu8.c ****                                                            const XMC_CCU8_SLICE_CAP_REG_SET_t set,
1000:../Libraries/XMCLib/src/xmc_ccu8.c ****                                                            uint32_t *val_ptr)
1001:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 2197              	 .loc 2 1001 0
 2198              	 .cfi_startproc
 2199              	 
 2200              	 
 2201              	 
 2202 0000 80B4     	 push {r7}
 2203              	.LCFI185:
 2204              	 .cfi_def_cfa_offset 4
 2205              	 .cfi_offset 7,-4
 2206 0002 87B0     	 sub sp,sp,#28
 2207              	.LCFI186:
 2208              	 .cfi_def_cfa_offset 32
 2209 0004 00AF     	 add r7,sp,#0
 2210              	.LCFI187:
 2211              	 .cfi_def_cfa_register 7
 2212 0006 F860     	 str r0,[r7,#12]
 2213 0008 0B46     	 mov r3,r1
 2214 000a 7A60     	 str r2,[r7,#4]
 2215 000c FB72     	 strb r3,[r7,#11]
1002:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1003:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_CCU8_STATUS_t retval;
1004:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint8_t i;
1005:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint8_t start;
1006:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint8_t end;
1007:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1008:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_GetLastCapturedTimerValue:Invalid Slice Pointer", XMC_CCU8_IsValidSlic
1009:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_GetLastCapturedTimerValue:Invalid Register Set",
1010:../Libraries/XMCLib/src/xmc_ccu8.c ****              ((set == XMC_CCU8_SLICE_CAP_REG_SET_LOW) ||\
1011:../Libraries/XMCLib/src/xmc_ccu8.c ****               (set == XMC_CCU8_SLICE_CAP_REG_SET_HIGH)));
1012:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1013:../Libraries/XMCLib/src/xmc_ccu8.c ****   retval = XMC_CCU8_STATUS_ERROR;
 2216              	 .loc 2 1013 0
 2217 000e 0123     	 movs r3,#1
 2218 0010 FB75     	 strb r3,[r7,#23]
1014:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1015:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* First check if extended capture mode is enabled */
1016:../Libraries/XMCLib/src/xmc_ccu8.c ****   if((slice->TC) & CCU8_CC8_TC_ECM_Msk)
 2219              	 .loc 2 1016 0
 2220 0012 FB68     	 ldr r3,[r7,#12]
 2221 0014 5B69     	 ldr r3,[r3,#20]
 2222 0016 03F01003 	 and r3,r3,#16
 2223 001a 002B     	 cmp r3,#0
 2224 001c 04D0     	 beq .L57
1017:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
1018:../Libraries/XMCLib/src/xmc_ccu8.c ****     /* Extended capture mode has been enabled. So start with the lowest capture register and work y
1019:../Libraries/XMCLib/src/xmc_ccu8.c ****     start = 0U;
 2225              	 .loc 2 1019 0
 2226 001e 0023     	 movs r3,#0
 2227 0020 7B75     	 strb r3,[r7,#21]
1020:../Libraries/XMCLib/src/xmc_ccu8.c ****     end = XMC_CCU8_NUM_SLICES_PER_MODULE;
 2228              	 .loc 2 1020 0
 2229 0022 0423     	 movs r3,#4
 2230 0024 3B75     	 strb r3,[r7,#20]
 2231 0026 0BE0     	 b .L58
 2232              	.L57:
1021:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
1022:../Libraries/XMCLib/src/xmc_ccu8.c ****   else
1023:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
1024:../Libraries/XMCLib/src/xmc_ccu8.c ****     /* Extended capture mode is not enabled */
1025:../Libraries/XMCLib/src/xmc_ccu8.c ****     if(set == XMC_CCU8_SLICE_CAP_REG_SET_HIGH)
 2233              	 .loc 2 1025 0
 2234 0028 FB7A     	 ldrb r3,[r7,#11]
 2235 002a 012B     	 cmp r3,#1
 2236 002c 04D1     	 bne .L59
1026:../Libraries/XMCLib/src/xmc_ccu8.c ****     {
1027:../Libraries/XMCLib/src/xmc_ccu8.c ****       start = ((uint8_t) XMC_CCU8_NUM_SLICES_PER_MODULE) >> 1U;
 2237              	 .loc 2 1027 0
 2238 002e 0223     	 movs r3,#2
 2239 0030 7B75     	 strb r3,[r7,#21]
1028:../Libraries/XMCLib/src/xmc_ccu8.c ****       end   = (uint8_t) XMC_CCU8_NUM_SLICES_PER_MODULE;
 2240              	 .loc 2 1028 0
 2241 0032 0423     	 movs r3,#4
 2242 0034 3B75     	 strb r3,[r7,#20]
 2243 0036 03E0     	 b .L58
 2244              	.L59:
1029:../Libraries/XMCLib/src/xmc_ccu8.c ****     }
1030:../Libraries/XMCLib/src/xmc_ccu8.c ****     else
1031:../Libraries/XMCLib/src/xmc_ccu8.c ****     {
1032:../Libraries/XMCLib/src/xmc_ccu8.c ****       start = 0U;
 2245              	 .loc 2 1032 0
 2246 0038 0023     	 movs r3,#0
 2247 003a 7B75     	 strb r3,[r7,#21]
1033:../Libraries/XMCLib/src/xmc_ccu8.c ****       end = ((uint8_t) XMC_CCU8_NUM_SLICES_PER_MODULE) >> 1U;
 2248              	 .loc 2 1033 0
 2249 003c 0223     	 movs r3,#2
 2250 003e 3B75     	 strb r3,[r7,#20]
 2251              	.L58:
1034:../Libraries/XMCLib/src/xmc_ccu8.c ****     }
1035:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
1036:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1037:../Libraries/XMCLib/src/xmc_ccu8.c ****   for(i=start; i<end; i++)
 2252              	 .loc 2 1037 0
 2253 0040 7B7D     	 ldrb r3,[r7,#21]
 2254 0042 BB75     	 strb r3,[r7,#22]
 2255 0044 17E0     	 b .L60
 2256              	.L63:
1038:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
1039:../Libraries/XMCLib/src/xmc_ccu8.c ****     if( (slice->CV[i]) & CCU8_CC8_CV_FFL_Msk )
 2257              	 .loc 2 1039 0
 2258 0046 BB7D     	 ldrb r3,[r7,#22]
 2259 0048 FA68     	 ldr r2,[r7,#12]
 2260 004a 1C33     	 adds r3,r3,#28
 2261 004c 9B00     	 lsls r3,r3,#2
 2262 004e 1344     	 add r3,r3,r2
 2263 0050 5B68     	 ldr r3,[r3,#4]
 2264 0052 03F48013 	 and r3,r3,#1048576
 2265 0056 002B     	 cmp r3,#0
 2266 0058 0AD0     	 beq .L61
1040:../Libraries/XMCLib/src/xmc_ccu8.c ****     {
1041:../Libraries/XMCLib/src/xmc_ccu8.c ****       *val_ptr = slice->CV[i];
 2267              	 .loc 2 1041 0
 2268 005a BB7D     	 ldrb r3,[r7,#22]
 2269 005c FA68     	 ldr r2,[r7,#12]
 2270 005e 1C33     	 adds r3,r3,#28
 2271 0060 9B00     	 lsls r3,r3,#2
 2272 0062 1344     	 add r3,r3,r2
 2273 0064 5A68     	 ldr r2,[r3,#4]
 2274 0066 7B68     	 ldr r3,[r7,#4]
 2275 0068 1A60     	 str r2,[r3]
1042:../Libraries/XMCLib/src/xmc_ccu8.c ****       retval = XMC_CCU8_STATUS_OK;
 2276              	 .loc 2 1042 0
 2277 006a 0023     	 movs r3,#0
 2278 006c FB75     	 strb r3,[r7,#23]
1043:../Libraries/XMCLib/src/xmc_ccu8.c ****       break;
 2279              	 .loc 2 1043 0
 2280 006e 06E0     	 b .L62
 2281              	.L61:
1037:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
 2282              	 .loc 2 1037 0 discriminator 2
 2283 0070 BB7D     	 ldrb r3,[r7,#22]
 2284 0072 0133     	 adds r3,r3,#1
 2285 0074 BB75     	 strb r3,[r7,#22]
 2286              	.L60:
1037:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
 2287              	 .loc 2 1037 0 is_stmt 0 discriminator 1
 2288 0076 BA7D     	 ldrb r2,[r7,#22]
 2289 0078 3B7D     	 ldrb r3,[r7,#20]
 2290 007a 9A42     	 cmp r2,r3
 2291 007c E3D3     	 bcc .L63
 2292              	.L62:
1044:../Libraries/XMCLib/src/xmc_ccu8.c ****     }
1045:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
1046:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1047:../Libraries/XMCLib/src/xmc_ccu8.c ****   return retval;
 2293              	 .loc 2 1047 0 is_stmt 1
 2294 007e FB7D     	 ldrb r3,[r7,#23]
1048:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 2295              	 .loc 2 1048 0
 2296 0080 1846     	 mov r0,r3
 2297 0082 1C37     	 adds r7,r7,#28
 2298              	.LCFI188:
 2299              	 .cfi_def_cfa_offset 4
 2300 0084 BD46     	 mov sp,r7
 2301              	.LCFI189:
 2302              	 .cfi_def_cfa_register 13
 2303              	 
 2304 0086 5DF8047B 	 ldr r7,[sp],#4
 2305              	.LCFI190:
 2306              	 .cfi_restore 7
 2307              	 .cfi_def_cfa_offset 0
 2308 008a 7047     	 bx lr
 2309              	 .cfi_endproc
 2310              	.LFE260:
 2312              	 .section .text.XMC_CCU8_GetCapturedValueFromFifo,"ax",%progbits
 2313              	 .align 2
 2314              	 .global XMC_CCU8_GetCapturedValueFromFifo
 2315              	 .thumb
 2316              	 .thumb_func
 2318              	XMC_CCU8_GetCapturedValueFromFifo:
 2319              	.LFB261:
1049:../Libraries/XMCLib/src/xmc_ccu8.c **** /* Retrieves timer capture value from a FIFO made of capture registers */
1050:../Libraries/XMCLib/src/xmc_ccu8.c **** #if defined(CCU8V1) /* Defined for XMC4800, XMC4700, XMC4500, XMC4400, XMC4200, XMC4100 devices onl
1051:../Libraries/XMCLib/src/xmc_ccu8.c **** int32_t XMC_CCU8_GetCapturedValueFromFifo(const XMC_CCU8_MODULE_t *const module, const uint8_t slic
1052:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 2320              	 .loc 2 1052 0
 2321              	 .cfi_startproc
 2322              	 
 2323              	 
 2324              	 
 2325 0000 80B4     	 push {r7}
 2326              	.LCFI191:
 2327              	 .cfi_def_cfa_offset 4
 2328              	 .cfi_offset 7,-4
 2329 0002 85B0     	 sub sp,sp,#20
 2330              	.LCFI192:
 2331              	 .cfi_def_cfa_offset 24
 2332 0004 00AF     	 add r7,sp,#0
 2333              	.LCFI193:
 2334              	 .cfi_def_cfa_register 7
 2335 0006 7860     	 str r0,[r7,#4]
 2336 0008 0B46     	 mov r3,r1
 2337 000a FB70     	 strb r3,[r7,#3]
1053:../Libraries/XMCLib/src/xmc_ccu8.c ****   int32_t  cap;
1054:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint32_t extracted_slice;
1055:../Libraries/XMCLib/src/xmc_ccu8.c ****   
1056:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_GetCapturedValueFromFifo:Invalid Slice Pointer", XMC_CCU8_IsValidModule(modu
1057:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1058:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* First read the global fifo register */
1059:../Libraries/XMCLib/src/xmc_ccu8.c ****   cap = (int32_t) module->ECRD;
 2338              	 .loc 2 1059 0
 2339 000c 7B68     	 ldr r3,[r7,#4]
 2340 000e 1B6D     	 ldr r3,[r3,#80]
 2341 0010 FB60     	 str r3,[r7,#12]
1060:../Libraries/XMCLib/src/xmc_ccu8.c ****     
1061:../Libraries/XMCLib/src/xmc_ccu8.c ****   extracted_slice = (((uint32_t) cap) & ((uint32_t) CCU8_ECRD_SPTR_Msk)) >> CCU8_ECRD_SPTR_Pos;
 2342              	 .loc 2 1061 0
 2343 0012 FB68     	 ldr r3,[r7,#12]
 2344 0014 03F44013 	 and r3,r3,#3145728
 2345 0018 1B0D     	 lsrs r3,r3,#20
 2346 001a BB60     	 str r3,[r7,#8]
1062:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1063:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Return captured result only if it were applicable to this slice */
1064:../Libraries/XMCLib/src/xmc_ccu8.c ****   if(extracted_slice != ((uint32_t)slice_number))
 2347              	 .loc 2 1064 0
 2348 001c FA78     	 ldrb r2,[r7,#3]
 2349 001e BB68     	 ldr r3,[r7,#8]
 2350 0020 9A42     	 cmp r2,r3
 2351 0022 02D0     	 beq .L66
1065:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
1066:../Libraries/XMCLib/src/xmc_ccu8.c ****     cap = -1;
 2352              	 .loc 2 1066 0
 2353 0024 4FF0FF33 	 mov r3,#-1
 2354 0028 FB60     	 str r3,[r7,#12]
 2355              	.L66:
1067:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
1068:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1069:../Libraries/XMCLib/src/xmc_ccu8.c ****   return (cap);
 2356              	 .loc 2 1069 0
 2357 002a FB68     	 ldr r3,[r7,#12]
1070:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 2358              	 .loc 2 1070 0
 2359 002c 1846     	 mov r0,r3
 2360 002e 1437     	 adds r7,r7,#20
 2361              	.LCFI194:
 2362              	 .cfi_def_cfa_offset 4
 2363 0030 BD46     	 mov sp,r7
 2364              	.LCFI195:
 2365              	 .cfi_def_cfa_register 13
 2366              	 
 2367 0032 5DF8047B 	 ldr r7,[sp],#4
 2368              	.LCFI196:
 2369              	 .cfi_restore 7
 2370              	 .cfi_def_cfa_offset 0
 2371 0036 7047     	 bx lr
 2372              	 .cfi_endproc
 2373              	.LFE261:
 2375              	 .section .text.XMC_CCU8_SLICE_EnableDithering,"ax",%progbits
 2376              	 .align 2
 2377              	 .global XMC_CCU8_SLICE_EnableDithering
 2378              	 .thumb
 2379              	 .thumb_func
 2381              	XMC_CCU8_SLICE_EnableDithering:
 2382              	.LFB262:
1071:../Libraries/XMCLib/src/xmc_ccu8.c **** #else
1072:../Libraries/XMCLib/src/xmc_ccu8.c **** /* Retrieves timer capture value from a FIFO made of capture registers */
1073:../Libraries/XMCLib/src/xmc_ccu8.c **** uint32_t XMC_CCU8_SLICE_GetCapturedValueFromFifo(const XMC_CCU8_SLICE_t *const slice, const XMC_CCU
1074:../Libraries/XMCLib/src/xmc_ccu8.c **** {
1075:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint32_t cap;
1076:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1077:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_GetCapturedValueFromFifo:Invalid Slice Pointer", XMC_CCU8_IsValidSlice
1078:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_GetCapturedValueFromFifo:Invalid Register Set", 
1079:../Libraries/XMCLib/src/xmc_ccu8.c ****              ((set == XMC_CCU8_SLICE_CAP_REG_SET_LOW) ||\
1080:../Libraries/XMCLib/src/xmc_ccu8.c ****               (set == XMC_CCU8_SLICE_CAP_REG_SET_HIGH)));
1081:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1082:../Libraries/XMCLib/src/xmc_ccu8.c ****   if(XMC_CCU8_SLICE_CAP_REG_SET_LOW == set)
1083:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
1084:../Libraries/XMCLib/src/xmc_ccu8.c ****     cap = slice->ECRD0;
1085:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
1086:../Libraries/XMCLib/src/xmc_ccu8.c ****   else
1087:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
1088:../Libraries/XMCLib/src/xmc_ccu8.c ****     cap = slice->ECRD1;
1089:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
1090:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1091:../Libraries/XMCLib/src/xmc_ccu8.c ****   return cap;
1092:../Libraries/XMCLib/src/xmc_ccu8.c **** }
1093:../Libraries/XMCLib/src/xmc_ccu8.c **** #endif
1094:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1095:../Libraries/XMCLib/src/xmc_ccu8.c **** /* Enables PWM dithering feature */
1096:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_EnableDithering(XMC_CCU8_SLICE_t *const slice,
1097:../Libraries/XMCLib/src/xmc_ccu8.c ****                                     const bool period_dither,
1098:../Libraries/XMCLib/src/xmc_ccu8.c ****                                     const bool duty_dither,
1099:../Libraries/XMCLib/src/xmc_ccu8.c ****                                     const uint8_t spread)
1100:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 2383              	 .loc 2 1100 0
 2384              	 .cfi_startproc
 2385              	 
 2386              	 
 2387 0000 80B5     	 push {r7,lr}
 2388              	.LCFI197:
 2389              	 .cfi_def_cfa_offset 8
 2390              	 .cfi_offset 7,-8
 2391              	 .cfi_offset 14,-4
 2392 0002 84B0     	 sub sp,sp,#16
 2393              	.LCFI198:
 2394              	 .cfi_def_cfa_offset 24
 2395 0004 00AF     	 add r7,sp,#0
 2396              	.LCFI199:
 2397              	 .cfi_def_cfa_register 7
 2398 0006 7860     	 str r0,[r7,#4]
 2399 0008 0846     	 mov r0,r1
 2400 000a 1146     	 mov r1,r2
 2401 000c 1A46     	 mov r2,r3
 2402 000e 0346     	 mov r3,r0
 2403 0010 FB70     	 strb r3,[r7,#3]
 2404 0012 0B46     	 mov r3,r1
 2405 0014 BB70     	 strb r3,[r7,#2]
 2406 0016 1346     	 mov r3,r2
 2407 0018 7B70     	 strb r3,[r7,#1]
1101:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint32_t tc;
1102:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1103:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_EnableDithering:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
1104:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1105:../Libraries/XMCLib/src/xmc_ccu8.c ****   tc = slice->TC;
 2408              	 .loc 2 1105 0
 2409 001a 7B68     	 ldr r3,[r7,#4]
 2410 001c 5B69     	 ldr r3,[r3,#20]
 2411 001e FB60     	 str r3,[r7,#12]
1106:../Libraries/XMCLib/src/xmc_ccu8.c ****   tc &= ~((uint32_t) CCU8_CC8_TC_DITHE_Msk);
 2412              	 .loc 2 1106 0
 2413 0020 FB68     	 ldr r3,[r7,#12]
 2414 0022 23F4C043 	 bic r3,r3,#24576
 2415 0026 FB60     	 str r3,[r7,#12]
1107:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1108:../Libraries/XMCLib/src/xmc_ccu8.c ****   if(true == period_dither)
 2416              	 .loc 2 1108 0
 2417 0028 FB78     	 ldrb r3,[r7,#3]
 2418 002a 002B     	 cmp r3,#0
 2419 002c 03D0     	 beq .L69
1109:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
1110:../Libraries/XMCLib/src/xmc_ccu8.c ****     tc |= (((uint32_t) XMC_CCU8_SLICE_DITHER_PERIOD_MASK) << CCU8_CC8_TC_DITHE_Pos);
 2420              	 .loc 2 1110 0
 2421 002e FB68     	 ldr r3,[r7,#12]
 2422 0030 43F40053 	 orr r3,r3,#8192
 2423 0034 FB60     	 str r3,[r7,#12]
 2424              	.L69:
1111:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
1112:../Libraries/XMCLib/src/xmc_ccu8.c ****   if(true == duty_dither)
 2425              	 .loc 2 1112 0
 2426 0036 BB78     	 ldrb r3,[r7,#2]
 2427 0038 002B     	 cmp r3,#0
 2428 003a 03D0     	 beq .L70
1113:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
1114:../Libraries/XMCLib/src/xmc_ccu8.c ****     tc |= (((uint32_t) XMC_CCU8_SLICE_DITHER_DUTYCYCLE_MASK) << CCU8_CC8_TC_DITHE_Pos);
 2429              	 .loc 2 1114 0
 2430 003c FB68     	 ldr r3,[r7,#12]
 2431 003e 43F48043 	 orr r3,r3,#16384
 2432 0042 FB60     	 str r3,[r7,#12]
 2433              	.L70:
1115:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
1116:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1117:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->TC = tc;
 2434              	 .loc 2 1117 0
 2435 0044 7B68     	 ldr r3,[r7,#4]
 2436 0046 FA68     	 ldr r2,[r7,#12]
 2437 0048 5A61     	 str r2,[r3,#20]
1118:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1119:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_CCU8_SLICE_SetDitherCompareValue((XMC_CCU8_SLICE_t *)slice, (uint8_t)spread);
 2438              	 .loc 2 1119 0
 2439 004a 7B78     	 ldrb r3,[r7,#1]
 2440 004c 7868     	 ldr r0,[r7,#4]
 2441 004e 1946     	 mov r1,r3
 2442 0050 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetDitherCompareValue
1120:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 2443              	 .loc 2 1120 0
 2444 0054 1037     	 adds r7,r7,#16
 2445              	.LCFI200:
 2446              	 .cfi_def_cfa_offset 8
 2447 0056 BD46     	 mov sp,r7
 2448              	.LCFI201:
 2449              	 .cfi_def_cfa_register 13
 2450              	 
 2451 0058 80BD     	 pop {r7,pc}
 2452              	 .cfi_endproc
 2453              	.LFE262:
 2455 005a 00BF     	 .section .text.XMC_CCU8_SLICE_SetPrescaler,"ax",%progbits
 2456              	 .align 2
 2457              	 .global XMC_CCU8_SLICE_SetPrescaler
 2458              	 .thumb
 2459              	 .thumb_func
 2461              	XMC_CCU8_SLICE_SetPrescaler:
 2462              	.LFB263:
1121:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1122:../Libraries/XMCLib/src/xmc_ccu8.c **** /* Programs Pre-scaler divider  */
1123:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_SetPrescaler(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_PRESCALER_t di
1124:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 2463              	 .loc 2 1124 0
 2464              	 .cfi_startproc
 2465              	 
 2466              	 
 2467              	 
 2468 0000 80B4     	 push {r7}
 2469              	.LCFI202:
 2470              	 .cfi_def_cfa_offset 4
 2471              	 .cfi_offset 7,-4
 2472 0002 85B0     	 sub sp,sp,#20
 2473              	.LCFI203:
 2474              	 .cfi_def_cfa_offset 24
 2475 0004 00AF     	 add r7,sp,#0
 2476              	.LCFI204:
 2477              	 .cfi_def_cfa_register 7
 2478 0006 7860     	 str r0,[r7,#4]
 2479 0008 0B46     	 mov r3,r1
 2480 000a FB70     	 strb r3,[r7,#3]
1125:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint32_t fpc;
1126:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1127:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_SetPrescaler:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
1128:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1129:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* If the prescaler is not running, update directly the divider*/
1130:../Libraries/XMCLib/src/xmc_ccu8.c ****   fpc = slice->FPC;
 2481              	 .loc 2 1130 0
 2482 000c 7B68     	 ldr r3,[r7,#4]
 2483 000e 9B6A     	 ldr r3,[r3,#40]
 2484 0010 FB60     	 str r3,[r7,#12]
1131:../Libraries/XMCLib/src/xmc_ccu8.c ****   fpc &= ~((uint32_t) CCU8_CC8_FPC_PVAL_Msk);
 2485              	 .loc 2 1131 0
 2486 0012 FB68     	 ldr r3,[r7,#12]
 2487 0014 23F47063 	 bic r3,r3,#3840
 2488 0018 FB60     	 str r3,[r7,#12]
1132:../Libraries/XMCLib/src/xmc_ccu8.c ****   fpc |= ((uint32_t) div_val) << CCU8_CC8_FPC_PVAL_Pos;
 2489              	 .loc 2 1132 0
 2490 001a FB78     	 ldrb r3,[r7,#3]
 2491 001c 1B02     	 lsls r3,r3,#8
 2492 001e FA68     	 ldr r2,[r7,#12]
 2493 0020 1343     	 orrs r3,r3,r2
 2494 0022 FB60     	 str r3,[r7,#12]
1133:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->FPC = fpc;
 2495              	 .loc 2 1133 0
 2496 0024 7B68     	 ldr r3,[r7,#4]
 2497 0026 FA68     	 ldr r2,[r7,#12]
 2498 0028 9A62     	 str r2,[r3,#40]
1134:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1135:../Libraries/XMCLib/src/xmc_ccu8.c ****   /*
1136:../Libraries/XMCLib/src/xmc_ccu8.c ****    * In any case, update the initial value of the divider which is to be loaded once the prescaler 
1137:../Libraries/XMCLib/src/xmc_ccu8.c ****    * compare value.
1138:../Libraries/XMCLib/src/xmc_ccu8.c ****    */
1139:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->PSC = (uint32_t) div_val;
 2499              	 .loc 2 1139 0
 2500 002a FA78     	 ldrb r2,[r7,#3]
 2501 002c 7B68     	 ldr r3,[r7,#4]
 2502 002e 5A62     	 str r2,[r3,#36]
1140:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 2503              	 .loc 2 1140 0
 2504 0030 1437     	 adds r7,r7,#20
 2505              	.LCFI205:
 2506              	 .cfi_def_cfa_offset 4
 2507 0032 BD46     	 mov sp,r7
 2508              	.LCFI206:
 2509              	 .cfi_def_cfa_register 13
 2510              	 
 2511 0034 5DF8047B 	 ldr r7,[sp],#4
 2512              	.LCFI207:
 2513              	 .cfi_restore 7
 2514              	 .cfi_def_cfa_offset 0
 2515 0038 7047     	 bx lr
 2516              	 .cfi_endproc
 2517              	.LFE263:
 2519 003a 00BF     	 .section .text.XMC_CCU8_SLICE_SetTimerCompareMatch,"ax",%progbits
 2520              	 .align 2
 2521              	 .global XMC_CCU8_SLICE_SetTimerCompareMatch
 2522              	 .thumb
 2523              	 .thumb_func
 2525              	XMC_CCU8_SLICE_SetTimerCompareMatch:
 2526              	.LFB264:
1141:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1142:../Libraries/XMCLib/src/xmc_ccu8.c **** /* Programs timer compare match value for channel 1 or 2 */
1143:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_SetTimerCompareMatch(XMC_CCU8_SLICE_t *const slice,
1144:../Libraries/XMCLib/src/xmc_ccu8.c ****                                          const XMC_CCU8_SLICE_COMPARE_CHANNEL_t channel,
1145:../Libraries/XMCLib/src/xmc_ccu8.c ****                                          const uint16_t compare_val)
1146:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 2527              	 .loc 2 1146 0
 2528              	 .cfi_startproc
 2529              	 
 2530              	 
 2531              	 
 2532 0000 80B4     	 push {r7}
 2533              	.LCFI208:
 2534              	 .cfi_def_cfa_offset 4
 2535              	 .cfi_offset 7,-4
 2536 0002 83B0     	 sub sp,sp,#12
 2537              	.LCFI209:
 2538              	 .cfi_def_cfa_offset 16
 2539 0004 00AF     	 add r7,sp,#0
 2540              	.LCFI210:
 2541              	 .cfi_def_cfa_register 7
 2542 0006 7860     	 str r0,[r7,#4]
 2543 0008 0B46     	 mov r3,r1
 2544 000a FB70     	 strb r3,[r7,#3]
 2545 000c 1346     	 mov r3,r2
 2546 000e 3B80     	 strh r3,[r7]
1147:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_SetTimerCompareMatch:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(sli
1148:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_SetTimerCompareMatch:Invalid channel", XMC_CCU8_SLICE_CHECK_COMP_CHANN
1149:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1150:../Libraries/XMCLib/src/xmc_ccu8.c ****   if (XMC_CCU8_SLICE_COMPARE_CHANNEL_1 == channel)
 2547              	 .loc 2 1150 0
 2548 0010 FB78     	 ldrb r3,[r7,#3]
 2549 0012 002B     	 cmp r3,#0
 2550 0014 03D1     	 bne .L73
1151:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
1152:../Libraries/XMCLib/src/xmc_ccu8.c ****     slice->CR1S = (uint32_t) compare_val;
 2551              	 .loc 2 1152 0
 2552 0016 3A88     	 ldrh r2,[r7]
 2553 0018 7B68     	 ldr r3,[r7,#4]
 2554 001a DA63     	 str r2,[r3,#60]
 2555 001c 02E0     	 b .L72
 2556              	.L73:
1153:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
1154:../Libraries/XMCLib/src/xmc_ccu8.c ****   else
1155:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
1156:../Libraries/XMCLib/src/xmc_ccu8.c ****     slice->CR2S = (uint32_t) compare_val;
 2557              	 .loc 2 1156 0
 2558 001e 3A88     	 ldrh r2,[r7]
 2559 0020 7B68     	 ldr r3,[r7,#4]
 2560 0022 5A64     	 str r2,[r3,#68]
 2561              	.L72:
1157:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
1158:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 2562              	 .loc 2 1158 0
 2563 0024 0C37     	 adds r7,r7,#12
 2564              	.LCFI211:
 2565              	 .cfi_def_cfa_offset 4
 2566 0026 BD46     	 mov sp,r7
 2567              	.LCFI212:
 2568              	 .cfi_def_cfa_register 13
 2569              	 
 2570 0028 5DF8047B 	 ldr r7,[sp],#4
 2571              	.LCFI213:
 2572              	 .cfi_restore 7
 2573              	 .cfi_def_cfa_offset 0
 2574 002c 7047     	 bx lr
 2575              	 .cfi_endproc
 2576              	.LFE264:
 2578 002e 00BF     	 .section .text.XMC_CCU8_SLICE_GetTimerCompareMatch,"ax",%progbits
 2579              	 .align 2
 2580              	 .global XMC_CCU8_SLICE_GetTimerCompareMatch
 2581              	 .thumb
 2582              	 .thumb_func
 2584              	XMC_CCU8_SLICE_GetTimerCompareMatch:
 2585              	.LFB265:
1159:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1160:../Libraries/XMCLib/src/xmc_ccu8.c **** /* Returns the timer compare match value for channel 1 or 2 */
1161:../Libraries/XMCLib/src/xmc_ccu8.c **** uint16_t XMC_CCU8_SLICE_GetTimerCompareMatch(const XMC_CCU8_SLICE_t *const slice,
1162:../Libraries/XMCLib/src/xmc_ccu8.c ****                                              const XMC_CCU8_SLICE_COMPARE_CHANNEL_t channel)
1163:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 2586              	 .loc 2 1163 0
 2587              	 .cfi_startproc
 2588              	 
 2589              	 
 2590              	 
 2591 0000 80B4     	 push {r7}
 2592              	.LCFI214:
 2593              	 .cfi_def_cfa_offset 4
 2594              	 .cfi_offset 7,-4
 2595 0002 85B0     	 sub sp,sp,#20
 2596              	.LCFI215:
 2597              	 .cfi_def_cfa_offset 24
 2598 0004 00AF     	 add r7,sp,#0
 2599              	.LCFI216:
 2600              	 .cfi_def_cfa_register 7
 2601 0006 7860     	 str r0,[r7,#4]
 2602 0008 0B46     	 mov r3,r1
 2603 000a FB70     	 strb r3,[r7,#3]
1164:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint16_t compare_value;
1165:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1166:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_GetCompareMatch:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
1167:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_GetCompareMatch:Invalid channel", XMC_CCU8_SLICE_CHECK_COMP_CHANNEL(ch
1168:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1169:../Libraries/XMCLib/src/xmc_ccu8.c ****   if (XMC_CCU8_SLICE_COMPARE_CHANNEL_1 == channel)
 2604              	 .loc 2 1169 0
 2605 000c FB78     	 ldrb r3,[r7,#3]
 2606 000e 002B     	 cmp r3,#0
 2607 0010 03D1     	 bne .L76
1170:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
1171:../Libraries/XMCLib/src/xmc_ccu8.c ****     compare_value = (uint16_t) slice->CR1;
 2608              	 .loc 2 1171 0
 2609 0012 7B68     	 ldr r3,[r7,#4]
 2610 0014 9B6B     	 ldr r3,[r3,#56]
 2611 0016 FB81     	 strh r3,[r7,#14]
 2612 0018 02E0     	 b .L77
 2613              	.L76:
1172:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
1173:../Libraries/XMCLib/src/xmc_ccu8.c ****   else
1174:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
1175:../Libraries/XMCLib/src/xmc_ccu8.c ****     compare_value = (uint16_t) slice->CR2;
 2614              	 .loc 2 1175 0
 2615 001a 7B68     	 ldr r3,[r7,#4]
 2616 001c 1B6C     	 ldr r3,[r3,#64]
 2617 001e FB81     	 strh r3,[r7,#14]
 2618              	.L77:
1176:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
1177:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1178:../Libraries/XMCLib/src/xmc_ccu8.c ****   return(compare_value);
 2619              	 .loc 2 1178 0
 2620 0020 FB89     	 ldrh r3,[r7,#14]
1179:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 2621              	 .loc 2 1179 0
 2622 0022 1846     	 mov r0,r3
 2623 0024 1437     	 adds r7,r7,#20
 2624              	.LCFI217:
 2625              	 .cfi_def_cfa_offset 4
 2626 0026 BD46     	 mov sp,r7
 2627              	.LCFI218:
 2628              	 .cfi_def_cfa_register 13
 2629              	 
 2630 0028 5DF8047B 	 ldr r7,[sp],#4
 2631              	.LCFI219:
 2632              	 .cfi_restore 7
 2633              	 .cfi_def_cfa_offset 0
 2634 002c 7047     	 bx lr
 2635              	 .cfi_endproc
 2636              	.LFE265:
 2638 002e 00BF     	 .section .text.XMC_CCU8_SLICE_SetInterruptNode,"ax",%progbits
 2639              	 .align 2
 2640              	 .global XMC_CCU8_SLICE_SetInterruptNode
 2641              	 .thumb
 2642              	 .thumb_func
 2644              	XMC_CCU8_SLICE_SetInterruptNode:
 2645              	.LFB266:
1180:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1181:../Libraries/XMCLib/src/xmc_ccu8.c **** /* Binds a capcom event to an NVIC node  */
1182:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_SetInterruptNode(XMC_CCU8_SLICE_t *const slice,
1183:../Libraries/XMCLib/src/xmc_ccu8.c ****                                      const XMC_CCU8_SLICE_IRQ_ID_t event,
1184:../Libraries/XMCLib/src/xmc_ccu8.c ****                                      const XMC_CCU8_SLICE_SR_ID_t sr)
1185:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 2646              	 .loc 2 1185 0
 2647              	 .cfi_startproc
 2648              	 
 2649              	 
 2650              	 
 2651 0000 80B4     	 push {r7}
 2652              	.LCFI220:
 2653              	 .cfi_def_cfa_offset 4
 2654              	 .cfi_offset 7,-4
 2655 0002 87B0     	 sub sp,sp,#28
 2656              	.LCFI221:
 2657              	 .cfi_def_cfa_offset 32
 2658 0004 00AF     	 add r7,sp,#0
 2659              	.LCFI222:
 2660              	 .cfi_def_cfa_register 7
 2661 0006 7860     	 str r0,[r7,#4]
 2662 0008 0B46     	 mov r3,r1
 2663 000a FB70     	 strb r3,[r7,#3]
 2664 000c 1346     	 mov r3,r2
 2665 000e BB70     	 strb r3,[r7,#2]
1186:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint32_t srs;
1187:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint32_t mask;
1188:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint32_t pos;
1189:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1190:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_SetInterruptNode:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice))
1191:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_SetInterruptNode:Invalid SR ID ", XMC_CCU8_SLICE_CHECK_SR_ID(sr));
1192:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_SetInterruptNode:Invalid event", XMC_CCU8_SLICE_CHECK_INTERRUPT(event)
1193:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1194:../Libraries/XMCLib/src/xmc_ccu8.c ****   srs = slice->SRS;
 2666              	 .loc 2 1194 0
 2667 0010 7B68     	 ldr r3,[r7,#4]
 2668 0012 D3F8A830 	 ldr r3,[r3,#168]
 2669 0016 FB60     	 str r3,[r7,#12]
1195:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1196:../Libraries/XMCLib/src/xmc_ccu8.c ****   switch(event)
 2670              	 .loc 2 1196 0
 2671 0018 FB78     	 ldrb r3,[r7,#3]
 2672 001a 092B     	 cmp r3,#9
 2673 001c 31D8     	 bhi .L80
 2674 001e 01A2     	 adr r2,.L82
 2675 0020 52F823F0 	 ldr pc,[r2,r3,lsl#2]
 2676              	 .p2align 2
 2677              	.L82:
 2678 0024 4D000000 	 .word .L81+1
 2679 0028 4D000000 	 .word .L81+1
 2680 002c 57000000 	 .word .L83+1
 2681 0030 57000000 	 .word .L83+1
 2682 0034 61000000 	 .word .L84+1
 2683 0038 61000000 	 .word .L84+1
 2684 003c 83000000 	 .word .L80+1
 2685 0040 83000000 	 .word .L80+1
 2686 0044 6B000000 	 .word .L85+1
 2687 0048 77000000 	 .word .L86+1
 2688              	 .p2align 1
 2689              	.L81:
1197:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
1198:../Libraries/XMCLib/src/xmc_ccu8.c ****     case XMC_CCU8_SLICE_IRQ_ID_PERIOD_MATCH:
1199:../Libraries/XMCLib/src/xmc_ccu8.c ****     case XMC_CCU8_SLICE_IRQ_ID_ONE_MATCH:
1200:../Libraries/XMCLib/src/xmc_ccu8.c ****       mask = ((uint32_t) CCU8_CC8_SRS_POSR_Msk);
 2690              	 .loc 2 1200 0
 2691 004c 0323     	 movs r3,#3
 2692 004e 7B61     	 str r3,[r7,#20]
1201:../Libraries/XMCLib/src/xmc_ccu8.c ****       pos  = CCU8_CC8_SRS_POSR_Pos;
 2693              	 .loc 2 1201 0
 2694 0050 0023     	 movs r3,#0
 2695 0052 3B61     	 str r3,[r7,#16]
1202:../Libraries/XMCLib/src/xmc_ccu8.c ****       break;
 2696              	 .loc 2 1202 0
 2697 0054 1BE0     	 b .L87
 2698              	.L83:
1203:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1204:../Libraries/XMCLib/src/xmc_ccu8.c ****     case XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_UP_CH_1:
1205:../Libraries/XMCLib/src/xmc_ccu8.c ****     case XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_DOWN_CH_1:
1206:../Libraries/XMCLib/src/xmc_ccu8.c ****       mask = ((uint32_t) CCU8_CC8_SRS_CM1SR_Msk);
 2699              	 .loc 2 1206 0
 2700 0056 0C23     	 movs r3,#12
 2701 0058 7B61     	 str r3,[r7,#20]
1207:../Libraries/XMCLib/src/xmc_ccu8.c ****       pos  = CCU8_CC8_SRS_CM1SR_Pos;
 2702              	 .loc 2 1207 0
 2703 005a 0223     	 movs r3,#2
 2704 005c 3B61     	 str r3,[r7,#16]
1208:../Libraries/XMCLib/src/xmc_ccu8.c ****       break;
 2705              	 .loc 2 1208 0
 2706 005e 16E0     	 b .L87
 2707              	.L84:
1209:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1210:../Libraries/XMCLib/src/xmc_ccu8.c ****     case XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_UP_CH_2:
1211:../Libraries/XMCLib/src/xmc_ccu8.c ****     case XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_DOWN_CH_2:
1212:../Libraries/XMCLib/src/xmc_ccu8.c ****       mask = ((uint32_t) CCU8_CC8_SRS_CM2SR_Msk);
 2708              	 .loc 2 1212 0
 2709 0060 3023     	 movs r3,#48
 2710 0062 7B61     	 str r3,[r7,#20]
1213:../Libraries/XMCLib/src/xmc_ccu8.c ****       pos  = CCU8_CC8_SRS_CM2SR_Pos;
 2711              	 .loc 2 1213 0
 2712 0064 0423     	 movs r3,#4
 2713 0066 3B61     	 str r3,[r7,#16]
1214:../Libraries/XMCLib/src/xmc_ccu8.c ****       break;
 2714              	 .loc 2 1214 0
 2715 0068 11E0     	 b .L87
 2716              	.L85:
1215:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1216:../Libraries/XMCLib/src/xmc_ccu8.c ****     case XMC_CCU8_SLICE_IRQ_ID_EVENT0:
1217:../Libraries/XMCLib/src/xmc_ccu8.c ****       mask = ((uint32_t) CCU8_CC8_SRS_E0SR_Msk);
 2717              	 .loc 2 1217 0
 2718 006a 4FF44073 	 mov r3,#768
 2719 006e 7B61     	 str r3,[r7,#20]
1218:../Libraries/XMCLib/src/xmc_ccu8.c ****       pos  = CCU8_CC8_SRS_E0SR_Pos;
 2720              	 .loc 2 1218 0
 2721 0070 0823     	 movs r3,#8
 2722 0072 3B61     	 str r3,[r7,#16]
1219:../Libraries/XMCLib/src/xmc_ccu8.c ****       break;
 2723              	 .loc 2 1219 0
 2724 0074 0BE0     	 b .L87
 2725              	.L86:
1220:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1221:../Libraries/XMCLib/src/xmc_ccu8.c ****     case XMC_CCU8_SLICE_IRQ_ID_EVENT1:
1222:../Libraries/XMCLib/src/xmc_ccu8.c ****       mask = ((uint32_t) CCU8_CC8_SRS_E1SR_Msk);
 2726              	 .loc 2 1222 0
 2727 0076 4FF44063 	 mov r3,#3072
 2728 007a 7B61     	 str r3,[r7,#20]
1223:../Libraries/XMCLib/src/xmc_ccu8.c ****       pos  = CCU8_CC8_SRS_E1SR_Pos;
 2729              	 .loc 2 1223 0
 2730 007c 0A23     	 movs r3,#10
 2731 007e 3B61     	 str r3,[r7,#16]
1224:../Libraries/XMCLib/src/xmc_ccu8.c ****       break;
 2732              	 .loc 2 1224 0
 2733 0080 05E0     	 b .L87
 2734              	.L80:
1225:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1226:../Libraries/XMCLib/src/xmc_ccu8.c ****     default:
1227:../Libraries/XMCLib/src/xmc_ccu8.c ****       mask = ((uint32_t) CCU8_CC8_SRS_E2SR_Msk);
 2735              	 .loc 2 1227 0
 2736 0082 4FF44053 	 mov r3,#12288
 2737 0086 7B61     	 str r3,[r7,#20]
1228:../Libraries/XMCLib/src/xmc_ccu8.c ****       pos  = CCU8_CC8_SRS_E2SR_Pos;
 2738              	 .loc 2 1228 0
 2739 0088 0C23     	 movs r3,#12
 2740 008a 3B61     	 str r3,[r7,#16]
1229:../Libraries/XMCLib/src/xmc_ccu8.c ****       break;
 2741              	 .loc 2 1229 0
 2742 008c 00BF     	 nop
 2743              	.L87:
1230:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
1231:../Libraries/XMCLib/src/xmc_ccu8.c ****   
1232:../Libraries/XMCLib/src/xmc_ccu8.c ****   srs &= ~mask;
 2744              	 .loc 2 1232 0
 2745 008e 7B69     	 ldr r3,[r7,#20]
 2746 0090 DB43     	 mvns r3,r3
 2747 0092 FA68     	 ldr r2,[r7,#12]
 2748 0094 1340     	 ands r3,r3,r2
 2749 0096 FB60     	 str r3,[r7,#12]
1233:../Libraries/XMCLib/src/xmc_ccu8.c ****   srs |= (uint32_t)sr << pos;
 2750              	 .loc 2 1233 0
 2751 0098 BA78     	 ldrb r2,[r7,#2]
 2752 009a 3B69     	 ldr r3,[r7,#16]
 2753 009c 02FA03F3 	 lsl r3,r2,r3
 2754 00a0 FA68     	 ldr r2,[r7,#12]
 2755 00a2 1343     	 orrs r3,r3,r2
 2756 00a4 FB60     	 str r3,[r7,#12]
1234:../Libraries/XMCLib/src/xmc_ccu8.c ****   
1235:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->SRS = srs;
 2757              	 .loc 2 1235 0
 2758 00a6 7B68     	 ldr r3,[r7,#4]
 2759 00a8 FA68     	 ldr r2,[r7,#12]
 2760 00aa C3F8A820 	 str r2,[r3,#168]
1236:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 2761              	 .loc 2 1236 0
 2762 00ae 1C37     	 adds r7,r7,#28
 2763              	.LCFI223:
 2764              	 .cfi_def_cfa_offset 4
 2765 00b0 BD46     	 mov sp,r7
 2766              	.LCFI224:
 2767              	 .cfi_def_cfa_register 13
 2768              	 
 2769 00b2 5DF8047B 	 ldr r7,[sp],#4
 2770              	.LCFI225:
 2771              	 .cfi_restore 7
 2772              	 .cfi_def_cfa_offset 0
 2773 00b6 7047     	 bx lr
 2774              	 .cfi_endproc
 2775              	.LFE266:
 2777              	 .section .text.XMC_CCU8_SLICE_SetPassiveLevel,"ax",%progbits
 2778              	 .align 2
 2779              	 .global XMC_CCU8_SLICE_SetPassiveLevel
 2780              	 .thumb
 2781              	 .thumb_func
 2783              	XMC_CCU8_SLICE_SetPassiveLevel:
 2784              	.LFB267:
1237:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1238:../Libraries/XMCLib/src/xmc_ccu8.c **** /* Asserts passive level for the slice output */
1239:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_SetPassiveLevel(XMC_CCU8_SLICE_t *const slice,
1240:../Libraries/XMCLib/src/xmc_ccu8.c ****                                     const XMC_CCU8_SLICE_OUTPUT_t out,
1241:../Libraries/XMCLib/src/xmc_ccu8.c ****                                     const XMC_CCU8_SLICE_OUTPUT_PASSIVE_LEVEL_t level)
1242:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 2785              	 .loc 2 1242 0
 2786              	 .cfi_startproc
 2787              	 
 2788              	 
 2789              	 
 2790 0000 80B4     	 push {r7}
 2791              	.LCFI226:
 2792              	 .cfi_def_cfa_offset 4
 2793              	 .cfi_offset 7,-4
 2794 0002 85B0     	 sub sp,sp,#20
 2795              	.LCFI227:
 2796              	 .cfi_def_cfa_offset 24
 2797 0004 00AF     	 add r7,sp,#0
 2798              	.LCFI228:
 2799              	 .cfi_def_cfa_register 7
 2800 0006 7860     	 str r0,[r7,#4]
 2801 0008 0B46     	 mov r3,r1
 2802 000a FB70     	 strb r3,[r7,#3]
 2803 000c 1346     	 mov r3,r2
 2804 000e BB70     	 strb r3,[r7,#2]
1243:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint32_t psl;
1244:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1245:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_SetPassiveLevel:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
1246:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_SetPassiveLevel:Invalid Slice Output", XMC_CCU8_SLICE_CHECK_OUTPUT(out
1247:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_SetPassiveLevel:Invalid Passive Level",
1248:../Libraries/XMCLib/src/xmc_ccu8.c ****              ((level == XMC_CCU8_SLICE_OUTPUT_PASSIVE_LEVEL_LOW) ||\
1249:../Libraries/XMCLib/src/xmc_ccu8.c ****               (level == XMC_CCU8_SLICE_OUTPUT_PASSIVE_LEVEL_HIGH)));
1250:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1251:../Libraries/XMCLib/src/xmc_ccu8.c ****   psl = slice->PSL;
 2805              	 .loc 2 1251 0
 2806 0010 7B68     	 ldr r3,[r7,#4]
 2807 0012 9B69     	 ldr r3,[r3,#24]
 2808 0014 FB60     	 str r3,[r7,#12]
1252:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1253:../Libraries/XMCLib/src/xmc_ccu8.c ****   psl &= ~((uint32_t) out);
 2809              	 .loc 2 1253 0
 2810 0016 FB78     	 ldrb r3,[r7,#3]
 2811 0018 DB43     	 mvns r3,r3
 2812 001a FA68     	 ldr r2,[r7,#12]
 2813 001c 1340     	 ands r3,r3,r2
 2814 001e FB60     	 str r3,[r7,#12]
1254:../Libraries/XMCLib/src/xmc_ccu8.c ****   psl |= (uint32_t) level << ((uint32_t)out >> 1U);
 2815              	 .loc 2 1254 0
 2816 0020 BB78     	 ldrb r3,[r7,#2]
 2817 0022 FA78     	 ldrb r2,[r7,#3]
 2818 0024 5208     	 lsrs r2,r2,#1
 2819 0026 D2B2     	 uxtb r2,r2
 2820 0028 9340     	 lsls r3,r3,r2
 2821 002a FA68     	 ldr r2,[r7,#12]
 2822 002c 1343     	 orrs r3,r3,r2
 2823 002e FB60     	 str r3,[r7,#12]
1255:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1256:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Program CC8 slice output passive level */
1257:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->PSL = psl;
 2824              	 .loc 2 1257 0
 2825 0030 7B68     	 ldr r3,[r7,#4]
 2826 0032 FA68     	 ldr r2,[r7,#12]
 2827 0034 9A61     	 str r2,[r3,#24]
1258:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 2828              	 .loc 2 1258 0
 2829 0036 1437     	 adds r7,r7,#20
 2830              	.LCFI229:
 2831              	 .cfi_def_cfa_offset 4
 2832 0038 BD46     	 mov sp,r7
 2833              	.LCFI230:
 2834              	 .cfi_def_cfa_register 13
 2835              	 
 2836 003a 5DF8047B 	 ldr r7,[sp],#4
 2837              	.LCFI231:
 2838              	 .cfi_restore 7
 2839              	 .cfi_def_cfa_offset 0
 2840 003e 7047     	 bx lr
 2841              	 .cfi_endproc
 2842              	.LFE267:
 2844              	 .section .text.XMC_CCU8_SLICE_DeadTimeInit,"ax",%progbits
 2845              	 .align 2
 2846              	 .global XMC_CCU8_SLICE_DeadTimeInit
 2847              	 .thumb
 2848              	 .thumb_func
 2850              	XMC_CCU8_SLICE_DeadTimeInit:
 2851              	.LFB268:
1259:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1260:../Libraries/XMCLib/src/xmc_ccu8.c **** /* Initializes Dead time configuration for the slice outputs */
1261:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_DeadTimeInit(XMC_CCU8_SLICE_t *const slice,
1262:../Libraries/XMCLib/src/xmc_ccu8.c ****                                  const XMC_CCU8_SLICE_DEAD_TIME_CONFIG_t *const config)
1263:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 2852              	 .loc 2 1263 0
 2853              	 .cfi_startproc
 2854              	 
 2855              	 
 2856              	 
 2857 0000 80B4     	 push {r7}
 2858              	.LCFI232:
 2859              	 .cfi_def_cfa_offset 4
 2860              	 .cfi_offset 7,-4
 2861 0002 83B0     	 sub sp,sp,#12
 2862              	.LCFI233:
 2863              	 .cfi_def_cfa_offset 16
 2864 0004 00AF     	 add r7,sp,#0
 2865              	.LCFI234:
 2866              	 .cfi_def_cfa_register 7
 2867 0006 7860     	 str r0,[r7,#4]
 2868 0008 3960     	 str r1,[r7]
1264:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_ConfigureDeadTime:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice)
1265:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1266:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Program dead time value for channel 1 */
1267:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->DC1R = config->dc1r;
 2869              	 .loc 2 1267 0
 2870 000a 3B68     	 ldr r3,[r7]
 2871 000c 5A68     	 ldr r2,[r3,#4]
 2872 000e 7B68     	 ldr r3,[r7,#4]
 2873 0010 1A65     	 str r2,[r3,#80]
1268:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Program dead time value for channel 2 */
1269:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->DC2R = config->dc2r;
 2874              	 .loc 2 1269 0
 2875 0012 3B68     	 ldr r3,[r7]
 2876 0014 9A68     	 ldr r2,[r3,#8]
 2877 0016 7B68     	 ldr r3,[r7,#4]
 2878 0018 5A65     	 str r2,[r3,#84]
1270:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Program dead time control configuration */
1271:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->DTC = config->dtc;
 2879              	 .loc 2 1271 0
 2880 001a 3B68     	 ldr r3,[r7]
 2881 001c 1A68     	 ldr r2,[r3]
 2882 001e 7B68     	 ldr r3,[r7,#4]
 2883 0020 DA64     	 str r2,[r3,#76]
1272:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 2884              	 .loc 2 1272 0
 2885 0022 0C37     	 adds r7,r7,#12
 2886              	.LCFI235:
 2887              	 .cfi_def_cfa_offset 4
 2888 0024 BD46     	 mov sp,r7
 2889              	.LCFI236:
 2890              	 .cfi_def_cfa_register 13
 2891              	 
 2892 0026 5DF8047B 	 ldr r7,[sp],#4
 2893              	.LCFI237:
 2894              	 .cfi_restore 7
 2895              	 .cfi_def_cfa_offset 0
 2896 002a 7047     	 bx lr
 2897              	 .cfi_endproc
 2898              	.LFE268:
 2900              	 .section .text.XMC_CCU8_SLICE_ConfigureDeadTime,"ax",%progbits
 2901              	 .align 2
 2902              	 .global XMC_CCU8_SLICE_ConfigureDeadTime
 2903              	 .thumb
 2904              	 .thumb_func
 2906              	XMC_CCU8_SLICE_ConfigureDeadTime:
 2907              	.LFB269:
1273:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1274:../Libraries/XMCLib/src/xmc_ccu8.c **** /* Activates or deactivates dead time for compare channel and ST path */
1275:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_ConfigureDeadTime(XMC_CCU8_SLICE_t *const slice, const uint8_t mask)
1276:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 2908              	 .loc 2 1276 0
 2909              	 .cfi_startproc
 2910              	 
 2911              	 
 2912              	 
 2913 0000 80B4     	 push {r7}
 2914              	.LCFI238:
 2915              	 .cfi_def_cfa_offset 4
 2916              	 .cfi_offset 7,-4
 2917 0002 83B0     	 sub sp,sp,#12
 2918              	.LCFI239:
 2919              	 .cfi_def_cfa_offset 16
 2920 0004 00AF     	 add r7,sp,#0
 2921              	.LCFI240:
 2922              	 .cfi_def_cfa_register 7
 2923 0006 7860     	 str r0,[r7,#4]
 2924 0008 0B46     	 mov r3,r1
 2925 000a FB70     	 strb r3,[r7,#3]
1277:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_ConfigureDeadTime:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice)
1278:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_ConfigureDeadTime:Invalid Channel", (mask <= XMC_CCU8_SLICE_DEAD_TIME_
1279:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1280:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->DTC &= ~((uint32_t) XMC_CCU8_SLICE_DEAD_TIME_CONFIG_MASK);
 2926              	 .loc 2 1280 0
 2927 000c 7B68     	 ldr r3,[r7,#4]
 2928 000e DB6C     	 ldr r3,[r3,#76]
 2929 0010 23F03F02 	 bic r2,r3,#63
 2930 0014 7B68     	 ldr r3,[r7,#4]
 2931 0016 DA64     	 str r2,[r3,#76]
1281:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->DTC |= (uint32_t) mask;
 2932              	 .loc 2 1281 0
 2933 0018 7B68     	 ldr r3,[r7,#4]
 2934 001a DA6C     	 ldr r2,[r3,#76]
 2935 001c FB78     	 ldrb r3,[r7,#3]
 2936 001e 1A43     	 orrs r2,r2,r3
 2937 0020 7B68     	 ldr r3,[r7,#4]
 2938 0022 DA64     	 str r2,[r3,#76]
1282:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 2939              	 .loc 2 1282 0
 2940 0024 0C37     	 adds r7,r7,#12
 2941              	.LCFI241:
 2942              	 .cfi_def_cfa_offset 4
 2943 0026 BD46     	 mov sp,r7
 2944              	.LCFI242:
 2945              	 .cfi_def_cfa_register 13
 2946              	 
 2947 0028 5DF8047B 	 ldr r7,[sp],#4
 2948              	.LCFI243:
 2949              	 .cfi_restore 7
 2950              	 .cfi_def_cfa_offset 0
 2951 002c 7047     	 bx lr
 2952              	 .cfi_endproc
 2953              	.LFE269:
 2955 002e 00BF     	 .section .text.XMC_CCU8_SLICE_SetDeadTimeValue,"ax",%progbits
 2956              	 .align 2
 2957              	 .global XMC_CCU8_SLICE_SetDeadTimeValue
 2958              	 .thumb
 2959              	 .thumb_func
 2961              	XMC_CCU8_SLICE_SetDeadTimeValue:
 2962              	.LFB270:
1283:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1284:../Libraries/XMCLib/src/xmc_ccu8.c **** /* Configures rising edge delay and falling edge delay for dead time */
1285:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_SetDeadTimeValue(XMC_CCU8_SLICE_t *const slice,
1286:../Libraries/XMCLib/src/xmc_ccu8.c ****                                      const XMC_CCU8_SLICE_COMPARE_CHANNEL_t channel,
1287:../Libraries/XMCLib/src/xmc_ccu8.c ****                                      const uint8_t rise_value,
1288:../Libraries/XMCLib/src/xmc_ccu8.c ****                                      const uint8_t fall_value)
1289:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 2963              	 .loc 2 1289 0
 2964              	 .cfi_startproc
 2965              	 
 2966              	 
 2967              	 
 2968 0000 80B4     	 push {r7}
 2969              	.LCFI244:
 2970              	 .cfi_def_cfa_offset 4
 2971              	 .cfi_offset 7,-4
 2972 0002 83B0     	 sub sp,sp,#12
 2973              	.LCFI245:
 2974              	 .cfi_def_cfa_offset 16
 2975 0004 00AF     	 add r7,sp,#0
 2976              	.LCFI246:
 2977              	 .cfi_def_cfa_register 7
 2978 0006 7860     	 str r0,[r7,#4]
 2979 0008 0846     	 mov r0,r1
 2980 000a 1146     	 mov r1,r2
 2981 000c 1A46     	 mov r2,r3
 2982 000e 0346     	 mov r3,r0
 2983 0010 FB70     	 strb r3,[r7,#3]
 2984 0012 0B46     	 mov r3,r1
 2985 0014 BB70     	 strb r3,[r7,#2]
 2986 0016 1346     	 mov r3,r2
 2987 0018 7B70     	 strb r3,[r7,#1]
1290:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_SetDeadTimeValue:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice))
1291:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_SetDeadTimeValue:Invalid channel", XMC_CCU8_SLICE_CHECK_COMP_CHANNEL(c
1292:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1293:../Libraries/XMCLib/src/xmc_ccu8.c ****   if (XMC_CCU8_SLICE_COMPARE_CHANNEL_1 == channel)
 2988              	 .loc 2 1293 0
 2989 001a FB78     	 ldrb r3,[r7,#3]
 2990 001c 002B     	 cmp r3,#0
 2991 001e 06D1     	 bne .L92
1294:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
1295:../Libraries/XMCLib/src/xmc_ccu8.c ****     slice->DC1R = (((uint32_t) fall_value) << CCU8_CC8_DC1R_DT1F_Pos) | ((uint32_t) rise_value);
 2992              	 .loc 2 1295 0
 2993 0020 7B78     	 ldrb r3,[r7,#1]
 2994 0022 1A02     	 lsls r2,r3,#8
 2995 0024 BB78     	 ldrb r3,[r7,#2]
 2996 0026 1A43     	 orrs r2,r2,r3
 2997 0028 7B68     	 ldr r3,[r7,#4]
 2998 002a 1A65     	 str r2,[r3,#80]
 2999 002c 05E0     	 b .L91
 3000              	.L92:
1296:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
1297:../Libraries/XMCLib/src/xmc_ccu8.c ****   else
1298:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
1299:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->DC2R = (((uint32_t) fall_value) << CCU8_CC8_DC2R_DT2F_Pos) | ((uint32_t) rise_value);
 3001              	 .loc 2 1299 0
 3002 002e 7B78     	 ldrb r3,[r7,#1]
 3003 0030 1A02     	 lsls r2,r3,#8
 3004 0032 BB78     	 ldrb r3,[r7,#2]
 3005 0034 1A43     	 orrs r2,r2,r3
 3006 0036 7B68     	 ldr r3,[r7,#4]
 3007 0038 5A65     	 str r2,[r3,#84]
 3008              	.L91:
1300:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
1301:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 3009              	 .loc 2 1301 0
 3010 003a 0C37     	 adds r7,r7,#12
 3011              	.LCFI247:
 3012              	 .cfi_def_cfa_offset 4
 3013 003c BD46     	 mov sp,r7
 3014              	.LCFI248:
 3015              	 .cfi_def_cfa_register 13
 3016              	 
 3017 003e 5DF8047B 	 ldr r7,[sp],#4
 3018              	.LCFI249:
 3019              	 .cfi_restore 7
 3020              	 .cfi_def_cfa_offset 0
 3021 0042 7047     	 bx lr
 3022              	 .cfi_endproc
 3023              	.LFE270:
 3025              	 .section .text.XMC_CCU8_SLICE_SetDeadTimePrescaler,"ax",%progbits
 3026              	 .align 2
 3027              	 .global XMC_CCU8_SLICE_SetDeadTimePrescaler
 3028              	 .thumb
 3029              	 .thumb_func
 3031              	XMC_CCU8_SLICE_SetDeadTimePrescaler:
 3032              	.LFB271:
1302:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1303:../Libraries/XMCLib/src/xmc_ccu8.c **** /* Configures clock division factor for dead time */
1304:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_SetDeadTimePrescaler(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_DTC_DI
1305:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 3033              	 .loc 2 1305 0
 3034              	 .cfi_startproc
 3035              	 
 3036              	 
 3037              	 
 3038 0000 80B4     	 push {r7}
 3039              	.LCFI250:
 3040              	 .cfi_def_cfa_offset 4
 3041              	 .cfi_offset 7,-4
 3042 0002 83B0     	 sub sp,sp,#12
 3043              	.LCFI251:
 3044              	 .cfi_def_cfa_offset 16
 3045 0004 00AF     	 add r7,sp,#0
 3046              	.LCFI252:
 3047              	 .cfi_def_cfa_register 7
 3048 0006 7860     	 str r0,[r7,#4]
 3049 0008 0B46     	 mov r3,r1
 3050 000a FB70     	 strb r3,[r7,#3]
1306:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_SetDeadTimePrescaler:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(sli
1307:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_SetDeadTimePrescaler:Invalid divider value", XMC_CCU8_SLICE_CHECK_DTC_
1308:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1309:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->DTC &= ~((uint32_t) CCU8_CC8_DTC_DTCC_Msk);
 3051              	 .loc 2 1309 0
 3052 000c 7B68     	 ldr r3,[r7,#4]
 3053 000e DB6C     	 ldr r3,[r3,#76]
 3054 0010 23F0C002 	 bic r2,r3,#192
 3055 0014 7B68     	 ldr r3,[r7,#4]
 3056 0016 DA64     	 str r2,[r3,#76]
1310:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->DTC |= ((uint32_t) div_val) << CCU8_CC8_DTC_DTCC_Pos;
 3057              	 .loc 2 1310 0
 3058 0018 7B68     	 ldr r3,[r7,#4]
 3059 001a DA6C     	 ldr r2,[r3,#76]
 3060 001c FB78     	 ldrb r3,[r7,#3]
 3061 001e 9B01     	 lsls r3,r3,#6
 3062 0020 1A43     	 orrs r2,r2,r3
 3063 0022 7B68     	 ldr r3,[r7,#4]
 3064 0024 DA64     	 str r2,[r3,#76]
1311:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 3065              	 .loc 2 1311 0
 3066 0026 0C37     	 adds r7,r7,#12
 3067              	.LCFI253:
 3068              	 .cfi_def_cfa_offset 4
 3069 0028 BD46     	 mov sp,r7
 3070              	.LCFI254:
 3071              	 .cfi_def_cfa_register 13
 3072              	 
 3073 002a 5DF8047B 	 ldr r7,[sp],#4
 3074              	.LCFI255:
 3075              	 .cfi_restore 7
 3076              	 .cfi_def_cfa_offset 0
 3077 002e 7047     	 bx lr
 3078              	 .cfi_endproc
 3079              	.LFE271:
 3081              	 .section .text.XMC_CCU8_SLICE_ConfigureStatusBitOutput,"ax",%progbits
 3082              	 .align 2
 3083              	 .global XMC_CCU8_SLICE_ConfigureStatusBitOutput
 3084              	 .thumb
 3085              	 .thumb_func
 3087              	XMC_CCU8_SLICE_ConfigureStatusBitOutput:
 3088              	.LFB272:
1312:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1313:../Libraries/XMCLib/src/xmc_ccu8.c **** /* Configures status ST1, ST2 mapping to STy */
1314:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_ConfigureStatusBitOutput(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_ST
1315:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 3089              	 .loc 2 1315 0
 3090              	 .cfi_startproc
 3091              	 
 3092              	 
 3093              	 
 3094 0000 80B4     	 push {r7}
 3095              	.LCFI256:
 3096              	 .cfi_def_cfa_offset 4
 3097              	 .cfi_offset 7,-4
 3098 0002 83B0     	 sub sp,sp,#12
 3099              	.LCFI257:
 3100              	 .cfi_def_cfa_offset 16
 3101 0004 00AF     	 add r7,sp,#0
 3102              	.LCFI258:
 3103              	 .cfi_def_cfa_register 7
 3104 0006 7860     	 str r0,[r7,#4]
 3105 0008 0B46     	 mov r3,r1
 3106 000a FB70     	 strb r3,[r7,#3]
1316:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_ConfigureStatusBitOutput:Invalid Slice Pointer", XMC_CCU8_IsValidSlice
1317:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_ConfigureStatusBitOutput:Invalid Channel", XMC_CCU8_SLICE_CHECK_SLICE_
1318:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1319:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->TC &= ~((uint32_t) CCU8_CC8_TC_STOS_Msk);
 3107              	 .loc 2 1319 0
 3108 000c 7B68     	 ldr r3,[r7,#4]
 3109 000e 5B69     	 ldr r3,[r3,#20]
 3110 0010 23F0C042 	 bic r2,r3,#1610612736
 3111 0014 7B68     	 ldr r3,[r7,#4]
 3112 0016 5A61     	 str r2,[r3,#20]
1320:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->TC |= ((uint32_t) channel) << CCU8_CC8_TC_STOS_Pos;
 3113              	 .loc 2 1320 0
 3114 0018 7B68     	 ldr r3,[r7,#4]
 3115 001a 5A69     	 ldr r2,[r3,#20]
 3116 001c FB78     	 ldrb r3,[r7,#3]
 3117 001e 5B07     	 lsls r3,r3,#29
 3118 0020 1A43     	 orrs r2,r2,r3
 3119 0022 7B68     	 ldr r3,[r7,#4]
 3120 0024 5A61     	 str r2,[r3,#20]
1321:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 3121              	 .loc 2 1321 0
 3122 0026 0C37     	 adds r7,r7,#12
 3123              	.LCFI259:
 3124              	 .cfi_def_cfa_offset 4
 3125 0028 BD46     	 mov sp,r7
 3126              	.LCFI260:
 3127              	 .cfi_def_cfa_register 13
 3128              	 
 3129 002a 5DF8047B 	 ldr r7,[sp],#4
 3130              	.LCFI261:
 3131              	 .cfi_restore 7
 3132              	 .cfi_def_cfa_offset 0
 3133 002e 7047     	 bx lr
 3134              	 .cfi_endproc
 3135              	.LFE272:
 3137              	 .text
 3138              	.Letext0:
 3139              	 .file 3 "c:\\users\\va40036139\\desktop\\dave_4-4-2_64bit_2018-02-23\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 3140              	 .file 4 "c:\\users\\va40036139\\desktop\\dave_4-4-2_64bit_2018-02-23\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 3141              	 .file 5 "D:/practica/proiect/DaveCan/Libraries/CMSIS/Infineon/XMC4500_series/Include/XMC4500.h"
 3142              	 .file 6 "D:/practica/proiect/DaveCan/Libraries/XMCLib/inc/xmc4_scu.h"
 3143              	 .file 7 "D:/practica/proiect/DaveCan/Libraries/CMSIS/Include/core_cm4.h"
 3144              	 .file 8 "D:/practica/proiect/DaveCan/Libraries/CMSIS/Infineon/XMC4500_series/Include/system_XMC4500.h"
DEFINED SYMBOLS
                            *ABS*:00000000 xmc_ccu8.c
    {standard input}:20     .text.XMC_CCU8_StartPrescaler:00000000 $t
    {standard input}:24     .text.XMC_CCU8_StartPrescaler:00000000 XMC_CCU8_StartPrescaler
    {standard input}:64     .text.XMC_CCU8_SLICE_StopTimer:00000000 $t
    {standard input}:68     .text.XMC_CCU8_SLICE_StopTimer:00000000 XMC_CCU8_SLICE_StopTimer
    {standard input}:107    .text.XMC_CCU8_SLICE_SetDitherCompareValue:00000000 $t
    {standard input}:111    .text.XMC_CCU8_SLICE_SetDitherCompareValue:00000000 XMC_CCU8_SLICE_SetDitherCompareValue
    {standard input}:152    .text.XMC_CCU8_lAssertReset:00000000 $t
    {standard input}:156    .text.XMC_CCU8_lAssertReset:00000000 XMC_CCU8_lAssertReset
    {standard input}:206    .text.XMC_CCU8_lAssertReset:00000030 $d
    {standard input}:212    .text.XMC_CCU8_lDeassertReset:00000000 $t
    {standard input}:216    .text.XMC_CCU8_lDeassertReset:00000000 XMC_CCU8_lDeassertReset
    {standard input}:265    .text.XMC_CCU8_lDeassertReset:00000030 $d
    {standard input}:271    .text.XMC_CCU8_EnableModule:00000000 $t
    {standard input}:276    .text.XMC_CCU8_EnableModule:00000000 XMC_CCU8_EnableModule
    {standard input}:313    .text.XMC_CCU8_DisableModule:00000000 $t
    {standard input}:318    .text.XMC_CCU8_DisableModule:00000000 XMC_CCU8_DisableModule
    {standard input}:352    .text.XMC_CCU8_Init:00000000 $t
    {standard input}:357    .text.XMC_CCU8_Init:00000000 XMC_CCU8_Init
    {standard input}:414    .text.XMC_CCU8_SetModuleClock:00000000 $t
    {standard input}:419    .text.XMC_CCU8_SetModuleClock:00000000 XMC_CCU8_SetModuleClock
    {standard input}:474    .text.XMC_CCU8_SLICE_CompareInit:00000000 $t
    {standard input}:479    .text.XMC_CCU8_SLICE_CompareInit:00000000 XMC_CCU8_SLICE_CompareInit
    {standard input}:562    .text.XMC_CCU8_SLICE_CaptureInit:00000000 $t
    {standard input}:567    .text.XMC_CCU8_SLICE_CaptureInit:00000000 XMC_CCU8_SLICE_CaptureInit
    {standard input}:631    .text.XMC_CCU8_SLICE_SetOutPath:00000000 $t
    {standard input}:636    .text.XMC_CCU8_SLICE_SetOutPath:00000000 XMC_CCU8_SLICE_SetOutPath
    {standard input}:693    .text.XMC_CCU8_SetMultiChannelShadowTransferMode:00000000 $t
    {standard input}:698    .text.XMC_CCU8_SetMultiChannelShadowTransferMode:00000000 XMC_CCU8_SetMultiChannelShadowTransferMode
    {standard input}:755    .text.XMC_CCU8_SLICE_StartConfig:00000000 $t
    {standard input}:760    .text.XMC_CCU8_SLICE_StartConfig:00000000 XMC_CCU8_SLICE_StartConfig
    {standard input}:839    .text.XMC_CCU8_SLICE_StopConfig:00000000 $t
    {standard input}:844    .text.XMC_CCU8_SLICE_StopConfig:00000000 XMC_CCU8_SLICE_StopConfig
    {standard input}:919    .text.XMC_CCU8_SLICE_LoadConfig:00000000 $t
    {standard input}:924    .text.XMC_CCU8_SLICE_LoadConfig:00000000 XMC_CCU8_SLICE_LoadConfig
    {standard input}:979    .text.XMC_CCU8_SLICE_LoadSelector:00000000 $t
    {standard input}:984    .text.XMC_CCU8_SLICE_LoadSelector:00000000 XMC_CCU8_SLICE_LoadSelector
    {standard input}:1039   .text.XMC_CCU8_SLICE_ModulationConfig:00000000 $t
    {standard input}:1044   .text.XMC_CCU8_SLICE_ModulationConfig:00000000 XMC_CCU8_SLICE_ModulationConfig
    {standard input}:1154   .text.XMC_CCU8_SLICE_CountConfig:00000000 $t
    {standard input}:1159   .text.XMC_CCU8_SLICE_CountConfig:00000000 XMC_CCU8_SLICE_CountConfig
    {standard input}:1214   .text.XMC_CCU8_SLICE_GateConfig:00000000 $t
    {standard input}:1219   .text.XMC_CCU8_SLICE_GateConfig:00000000 XMC_CCU8_SLICE_GateConfig
    {standard input}:1274   .text.XMC_CCU8_SLICE_Capture0Config:00000000 $t
    {standard input}:1279   .text.XMC_CCU8_SLICE_Capture0Config:00000000 XMC_CCU8_SLICE_Capture0Config
    {standard input}:1334   .text.XMC_CCU8_SLICE_Capture1Config:00000000 $t
    {standard input}:1339   .text.XMC_CCU8_SLICE_Capture1Config:00000000 XMC_CCU8_SLICE_Capture1Config
    {standard input}:1394   .text.XMC_CCU8_SLICE_DirectionConfig:00000000 $t
    {standard input}:1399   .text.XMC_CCU8_SLICE_DirectionConfig:00000000 XMC_CCU8_SLICE_DirectionConfig
    {standard input}:1454   .text.XMC_CCU8_SLICE_StatusBitOverrideConfig:00000000 $t
    {standard input}:1459   .text.XMC_CCU8_SLICE_StatusBitOverrideConfig:00000000 XMC_CCU8_SLICE_StatusBitOverrideConfig
    {standard input}:1510   .text.XMC_CCU8_SLICE_TrapConfig:00000000 $t
    {standard input}:1515   .text.XMC_CCU8_SLICE_TrapConfig:00000000 XMC_CCU8_SLICE_TrapConfig
    {standard input}:1608   .text.XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent:00000000 $t
    {standard input}:1613   .text.XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent:00000000 XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent
    {standard input}:1746   .text.XMC_CCU8_SLICE_ConfigureEvent:00000000 $t
    {standard input}:1751   .text.XMC_CCU8_SLICE_ConfigureEvent:00000000 XMC_CCU8_SLICE_ConfigureEvent
    {standard input}:1889   .text.XMC_CCU8_SLICE_SetInput:00000000 $t
    {standard input}:1894   .text.XMC_CCU8_SLICE_SetInput:00000000 XMC_CCU8_SLICE_SetInput
    {standard input}:1964   .text.XMC_CCU8_SLICE_SetTimerRepeatMode:00000000 $t
    {standard input}:1969   .text.XMC_CCU8_SLICE_SetTimerRepeatMode:00000000 XMC_CCU8_SLICE_SetTimerRepeatMode
    {standard input}:2029   .text.XMC_CCU8_SLICE_SetTimerCountingMode:00000000 $t
    {standard input}:2034   .text.XMC_CCU8_SLICE_SetTimerCountingMode:00000000 XMC_CCU8_SLICE_SetTimerCountingMode
    {standard input}:2094   .text.XMC_CCU8_SLICE_SetTimerPeriodMatch:00000000 $t
    {standard input}:2099   .text.XMC_CCU8_SLICE_SetTimerPeriodMatch:00000000 XMC_CCU8_SLICE_SetTimerPeriodMatch
    {standard input}:2140   .text.XMC_CCU8_SLICE_GetCaptureRegisterValue:00000000 $t
    {standard input}:2145   .text.XMC_CCU8_SLICE_GetCaptureRegisterValue:00000000 XMC_CCU8_SLICE_GetCaptureRegisterValue
    {standard input}:2190   .text.XMC_CCU8_SLICE_GetLastCapturedTimerValue:00000000 $t
    {standard input}:2195   .text.XMC_CCU8_SLICE_GetLastCapturedTimerValue:00000000 XMC_CCU8_SLICE_GetLastCapturedTimerValue
    {standard input}:2313   .text.XMC_CCU8_GetCapturedValueFromFifo:00000000 $t
    {standard input}:2318   .text.XMC_CCU8_GetCapturedValueFromFifo:00000000 XMC_CCU8_GetCapturedValueFromFifo
    {standard input}:2376   .text.XMC_CCU8_SLICE_EnableDithering:00000000 $t
    {standard input}:2381   .text.XMC_CCU8_SLICE_EnableDithering:00000000 XMC_CCU8_SLICE_EnableDithering
    {standard input}:2456   .text.XMC_CCU8_SLICE_SetPrescaler:00000000 $t
    {standard input}:2461   .text.XMC_CCU8_SLICE_SetPrescaler:00000000 XMC_CCU8_SLICE_SetPrescaler
    {standard input}:2520   .text.XMC_CCU8_SLICE_SetTimerCompareMatch:00000000 $t
    {standard input}:2525   .text.XMC_CCU8_SLICE_SetTimerCompareMatch:00000000 XMC_CCU8_SLICE_SetTimerCompareMatch
    {standard input}:2579   .text.XMC_CCU8_SLICE_GetTimerCompareMatch:00000000 $t
    {standard input}:2584   .text.XMC_CCU8_SLICE_GetTimerCompareMatch:00000000 XMC_CCU8_SLICE_GetTimerCompareMatch
    {standard input}:2639   .text.XMC_CCU8_SLICE_SetInterruptNode:00000000 $t
    {standard input}:2644   .text.XMC_CCU8_SLICE_SetInterruptNode:00000000 XMC_CCU8_SLICE_SetInterruptNode
    {standard input}:2678   .text.XMC_CCU8_SLICE_SetInterruptNode:00000024 $d
    {standard input}:2688   .text.XMC_CCU8_SLICE_SetInterruptNode:0000004c $t
    {standard input}:2778   .text.XMC_CCU8_SLICE_SetPassiveLevel:00000000 $t
    {standard input}:2783   .text.XMC_CCU8_SLICE_SetPassiveLevel:00000000 XMC_CCU8_SLICE_SetPassiveLevel
    {standard input}:2845   .text.XMC_CCU8_SLICE_DeadTimeInit:00000000 $t
    {standard input}:2850   .text.XMC_CCU8_SLICE_DeadTimeInit:00000000 XMC_CCU8_SLICE_DeadTimeInit
    {standard input}:2901   .text.XMC_CCU8_SLICE_ConfigureDeadTime:00000000 $t
    {standard input}:2906   .text.XMC_CCU8_SLICE_ConfigureDeadTime:00000000 XMC_CCU8_SLICE_ConfigureDeadTime
    {standard input}:2956   .text.XMC_CCU8_SLICE_SetDeadTimeValue:00000000 $t
    {standard input}:2961   .text.XMC_CCU8_SLICE_SetDeadTimeValue:00000000 XMC_CCU8_SLICE_SetDeadTimeValue
    {standard input}:3026   .text.XMC_CCU8_SLICE_SetDeadTimePrescaler:00000000 $t
    {standard input}:3031   .text.XMC_CCU8_SLICE_SetDeadTimePrescaler:00000000 XMC_CCU8_SLICE_SetDeadTimePrescaler
    {standard input}:3082   .text.XMC_CCU8_SLICE_ConfigureStatusBitOutput:00000000 $t
    {standard input}:3087   .text.XMC_CCU8_SLICE_ConfigureStatusBitOutput:00000000 XMC_CCU8_SLICE_ConfigureStatusBitOutput
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
XMC_SCU_RESET_AssertPeripheralReset
XMC_SCU_RESET_DeassertPeripheralReset
XMC_SCU_CLOCK_EnableClock
